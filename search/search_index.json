{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"tags/","text":"Following is a list of relevant tags: .NET Batch Run API Private GitHub Repo and Autohokey AutoHotKey Private GitHub Repo and Autohokey C PHP, OpenSSL and ftp_ssl_connect() on Win32 C# Batch Run C# .NET 2.0 Web Service - Sync + Async FoxPro GetHtml LblPrint SmtpTester UTFiles Github Private GitHub Repo and Autohokey Linux Make OpenVPN DNS Work NET C# .NET 2.0 Web Service - Sync + Async OOP Poll Voter OpenSSL PHP, OpenSSL and ftp_ssl_connect() on Win32 OpenVPN Make OpenVPN DNS Work Outlook A Better \"Send to Mail Recipient\" With Outlook PHP Monitor Folder With PHP PHP Ftp Backup Library Image Mailer Image Resizer PHP, OpenSSL and ftp_ssl_connect() on Win32 Programming Batch Run Comcast Modem Power Level Monitor C# .NET 2.0 Web Service - Sync + Async PHP, OpenSSL and ftp_ssl_connect() on Win32 Poll Voter Python Comcast Modem Power Level Monitor Poll Voter R Comcast Modem Power Level Monitor SMTP SmtpTester WinHTTP GetHtml Windows A Better \"Send to Mail Recipient\" With Outlook appsec Sql Injection: A Design Pattern? sqli Sql Injection: A Design Pattern?","title":"Tags"},{"location":"tags/#net","text":"Batch Run","title":".NET"},{"location":"tags/#api","text":"Private GitHub Repo and Autohokey","title":"API"},{"location":"tags/#autohotkey","text":"Private GitHub Repo and Autohokey","title":"AutoHotKey"},{"location":"tags/#c","text":"PHP, OpenSSL and ftp_ssl_connect() on Win32","title":"C"},{"location":"tags/#c_1","text":"Batch Run C# .NET 2.0 Web Service - Sync + Async","title":"C#"},{"location":"tags/#foxpro","text":"GetHtml LblPrint SmtpTester UTFiles","title":"FoxPro"},{"location":"tags/#github","text":"Private GitHub Repo and Autohokey","title":"Github"},{"location":"tags/#linux","text":"Make OpenVPN DNS Work","title":"Linux"},{"location":"tags/#net_1","text":"C# .NET 2.0 Web Service - Sync + Async","title":"NET"},{"location":"tags/#oop","text":"Poll Voter","title":"OOP"},{"location":"tags/#openssl","text":"PHP, OpenSSL and ftp_ssl_connect() on Win32","title":"OpenSSL"},{"location":"tags/#openvpn","text":"Make OpenVPN DNS Work","title":"OpenVPN"},{"location":"tags/#outlook","text":"A Better \"Send to Mail Recipient\" With Outlook","title":"Outlook"},{"location":"tags/#php","text":"Monitor Folder With PHP PHP Ftp Backup Library Image Mailer Image Resizer PHP, OpenSSL and ftp_ssl_connect() on Win32","title":"PHP"},{"location":"tags/#programming","text":"Batch Run Comcast Modem Power Level Monitor C# .NET 2.0 Web Service - Sync + Async PHP, OpenSSL and ftp_ssl_connect() on Win32 Poll Voter","title":"Programming"},{"location":"tags/#python","text":"Comcast Modem Power Level Monitor Poll Voter","title":"Python"},{"location":"tags/#r","text":"Comcast Modem Power Level Monitor","title":"R"},{"location":"tags/#smtp","text":"SmtpTester","title":"SMTP"},{"location":"tags/#winhttp","text":"GetHtml","title":"WinHTTP"},{"location":"tags/#windows","text":"A Better \"Send to Mail Recipient\" With Outlook","title":"Windows"},{"location":"tags/#appsec","text":"Sql Injection: A Design Pattern?","title":"appsec"},{"location":"tags/#sqli","text":"Sql Injection: A Design Pattern?","title":"sqli"},{"location":"posts/AHKGithubPrivate/","tags":["AutoHotKey","API","Github"],"text":"Published: 2019-05-06 How to connect to a GitHub Private Repository to download files. This can be useful if you want to automatically update your application to the latest release. # SingleInstance , force # NoEnv # Include %A_ScriptDir% \\. . \\j son \\J SON.ahk ;https://github.com/cocobelgica/AutoHotkey-JSON ;------------------------------------------------------------------ ;GLOBALS global g_url := \"https://api.github.com/repos/<username>/<repository>/releases\" global g_file := \"filename.zip\" global g_saveto := A_Desktop . \"/\" . g_file ; You need to generate this in your github account global g_token := \"74jf8gh7ihdg9orlkk948rjfugnry369jgirn857\" ; <-- not a real token, demo purposes ;------------------------------------------------------------------ ;MAIN CODE r := false request := comobjcreate ( \"WinHttp.WinHttpRequest.5.1\" ) ; Lets get our \"navigator\" request.Open ( \"GET\" , g_url , false ) request.SetRequestHeader ( \"Authorization\" , \"token \" . g_token ) request.Send () ; Get the releases information if ( request.responsetext = \"failed\" || request.status != 200 || comobjtype ( request.responsestream ) != 0 xd ) { FileAppend , % \"Error:`r`n\" . \"Status: `r`n\" . request.status . \"`r`n\" . \"Headers: `r`n\" . request.getallresponseheaders () . \"`r`n\" . \"Response: `r`n\" . request.responsetext . \"`r`n\" , * } else { jsObj := JSON.Load ( request.ResponseText ) ; Parse the JSON file returned from the GitHub API for index , element in jsObj.1.assets { ; we need to get a certain file out of all the assets if ( element.name = g_file ) { g_url := element.url } } } request.option ( 6 ) := 0 ;no redirects request.open ( \"GET\" , g_url , false ) request.setrequestheader ( \"Authorization\" , \"token \" . g_token ) request.setrequestheader ( \"Accept\" , \"application/octet-stream\" ) request.send () ;FIRST request gets the 302 redirect to AWS if ( request.responsetext = \"failed\" || request.status != 302 || comobjtype ( request.responsestream ) != 0 xd ) { FileAppend , % \"Error:`r`n\" . \"Status: `r`n\" . request.status . \"`r`n\" . \"Headers: `r`n\" . request.getallresponseheaders () . \"`r`n\" . \"Response: `r`n\" . request.responsetext . \"`r`n\" , * } else { g_url := request.getresponseheader ( \"Location\" ) ;get the redirect URL request.open ( \"GET\" , g_url , false ) request.send () ;SECOND request gets the file to download if ( request.responsetext = \"failed\" || request.status != 200 || comobjtype ( request.responsestream ) != 0 xd ) { FileAppend , % \"Error:`r`n\" . \"Status: `r`n\" . request.status . \"`r`n\" . \"Headers: `r`n\" . request.getallresponseheaders () . \"`r`n\" . \"Response: `r`n\" . request.responsetext . \"`r`n\" , * } else { g_url := request.getresponseheader ( \"Content-Length\" ) URLDownloadToFile , % g_url , % g_saveto ; download the file if ( ErrorLevel = 1 ) { FileAppend , % splash_msg_prog . \"Download Failed...\" } else { FileAppend , % splash_msg_prog . \"File downloaded!\" } FileAppend , % \"Done!`r`n\" , * } } } return","title":"Private GitHub Repo and Autohokey"},{"location":"posts/BatchRun/","tags":["C#",".NET","Programming"],"text":"Published: 2007-10-16 Git Repository This application was written to run multiple sql scripts files against an MS Sql Server database and to learn more about .NET Windows application development. It is pretty much a work in progress, but it's at a usable point.","title":"Batch Run"},{"location":"posts/BetterSendTo/","tags":["Windows","Outlook"],"text":"Published: 2009-01-03 Sometimes when sending files through email, you want to be able to simply right-click on the file and select Send to mail recipient form the context menu. If you are an Outlook 2003 or 2007 user, you might have noticed that when you do this, Outlook generates a plain text email with your files attached. While a plain text email is ok, and probably the way all email should be, most of us have been spoiled with html email that allows fancy formatting and we want to keep this functionality when we right-click to send attachments. With this nice formatting ability we also have the added bonus that our signatures get automatically appended to the end of the e-mail. Below are a few steps to create a new Send To Mail Recipient context menu shortcut that address these issues: Right-Click the START button and select Explore Select the Send To folder from the folder list on the left. Vista Users: The Send To folder is located under: %APPDATA%\\Microsoft\\Windows\\SendTo Everything else should work the same. 3. Right-Click anywhere in the white space to the right and select New , then Shortcut 4. In the Type the location of the item: box, type in the following lines based on the version of Outlook you are using Outlook 2003 : \"C:Program Files\\Microsoft Office\\OFFICE11\\OUTLOOK.EXE\" /c ipm.note Outlook 2007 : \"C:Program Files\\Microsoft Office\\OFFICE12\\OUTLOOK.EXE\" /a 5. In the Type a name for this shortcut: box type in: Outlook Mail Recipient 6. Now when you right click on items to send as attachments you will have a new option. By selecting Outlook Mail Recipient you will get your new email in the default email format you have selected in Outlook and, if you have configured your signature for a new email, you will have it as well. UPDATE: 02/10/2009 - It look like this method won't work when selecting multiple files. For a possible workaround try the following: Create a file sendto.js with the following code and save it somewhere on your system. For this example the file is saved to c:\\sendto.js. try { var args = WScript . Arguments ; var outlookApp = new ActiveXObject ( \"Outlook.Application\" ); var nameSpace = outlookApp . getNameSpace ( \"MAPI\" ); var mailFolder = nameSpace . getDefaultFolder ( 6 ); var mailItem = mailFolder . Items . add ( 'IPM.Note.FormA' ); with ( mailItem ) { Subject = \"Sending Files\" ; for ( var i = 0 ; i < args . length ; i ++ ) { Attachments . Add ( args ( i )); } Display ( 0 ); } } catch ( err ){ } finally { outlookApp = null ; } Follow the steps in the tutorial above, but in step 4 type this in the box instead: %windir%\\system32\\wscript.exe \"C:\\sendto.js\" Note: Use the \"Change Icon\" button on the same screen to manually change the icon and use the icons in the Outlook.exe file, otherwise you will get the wscript.exe icon. Vista: To get to the Send To folder, you'll need to open up an Explorer window, and then paste the following into the address bar: %APPDATA%\\Microsoft\\Windows\\SendTo","title":"A Better \"Send to Mail Recipient\" With Outlook"},{"location":"posts/ComcastModemMonitor/","tags":["Python","R","Programming"],"text":"Published: 2019-11-19 Below you'll find scripts to monitor a Comcast modem's power levels to help troubleshoot line problems. The power of this tool becomes apparent when you use the data gathered to maintain an event journal of everything that happens related to your connection. For example, for my business, everytime I show packet loss in my firewall I can corelate it to abnormal power levels in the modem. This is critical, not only to know that the problem lies outside of my control, but also to aide the Comcast technitians in fixing the issue. The graphs are especially usefull to show connection issues over time. Windows Subsystem for Linux Built-in linux system in Windows 10. You can run these scripts on any linux based system, but this was readily available and already on our existing network. Start Cron & SSH at Windows Startup Short batch file startup.bat used by a scheduled task in Windows to start the ssh and cron daemons in WSL. This is useful in case the host comptuer is restarted. (Windows Updates restarts mainly...) @ echo off wsl -u root service ssh start wsl -u root service cron start exit SSH Having SSH installed in WSL makes it a lot easier to connect in and work on the script, check logs, etc. Cron Run the graph generating script every hour. At 1 min intervals, check the python script hasn't errored out. If it's not running, start it. 0 * * * * /home/user/scripts/comcast/cm_run.sh */1 * * * * /home/user/scripts/comcast/keep_alive.sh cm_rush.sh Simple script to run the graph generating code. Could run R script directly from cron, but this allows other scripts to be called if needed. #!/bin/bash ~/scripts/comcast/comcastplot.R keep_alive.sh Script to check if the python code is running. If it isn't, it will restart it. #!/bin/bash if ! pgrep -f 'cmpwrlevel2.py' then nohup $( which python3 ) ~/scripts/comcast/cmpwrlevel2.py & fi Modem Power Levels Poll the modem every minute and log the upstream (U) and downstream (D) powerlevels. Acceptable ranges: (Note the DOCSIS 3.1, which is neede for higher speeds has lower tolerances.) https://www.dslreports.com/faq/16085 Sample Data 2019-09-16 01:30:17 U 43.78 dBmV D 3.97 dBmV 2019-09-16 01:31:18 U 43.78 dBmV D 3.97 dBmV 2019-09-16 01:32:18 U 43.78 dBmV D 3.97 dBmV 2019-09-16 01:33:18 U 43.78 dBmV D 3.96 dBmV 2019-09-16 01:34:19 U 43.78 dBmV D 3.96 dBmV 2019-09-16 01:35:18 U 43.78 dBmV D 4.03 dBmV 2019-09-16 01:36:18 U 43.78 dBmV D 4.00 dBmV 2019-09-16 01:37:18 U 43.78 dBmV D 3.98 dBmV 2019-09-16 01:38:17 U 43.78 dBmV D 3.97 dBmV Get Data With Python Script to get the data. The modem is quite \"finicky\". #!/usr/bin/python3 # Comcast modem power levels reading script. # Author: Eugenio C. # Date: 09.16.2019 # TODO: Rewrite this script into a module with calls to objects. # TODO: Put raw data in database. SQLite # Load libraries import logging import re import smtplib import datetime import pickle import pathlib import os import sys import time import statistics from email.message import EmailMessage from bs4 import BeautifulSoup as bs import requests DATAFILE = 'cm_modem_pwr_levels.txt' WAIT_TIME = 60 # ******************************************************************************** # Function Declerations # ******************************************************************************** def send_text ( msg_txt ): msg = EmailMessage () msg . set_content ( msg_txt ) msg [ 'Subject' ] = 'CM Alarm' msg [ 'From' ] = 'python_script@yourdomain.com' msg [ 'To' ] = 'phonenumber@vtext.com' smtp = smtplib . SMTP ( 'email.server.address' ) smtp . send_message ( msg ) smtp . quit () # ******************************************************************************** # Main Script # ******************************************************************************** ownp = os . path . abspath ( os . path . dirname ( sys . argv [ 0 ])) tdnow = datetime . datetime . now () . strftime ( \"%Y%m %d \" ) # Setup Logging logging . basicConfig ( format = ' %(asctime)s : %(levelname)s : %(message)s ' , level = logging . DEBUG , filename = ownp + '/cmpwrlevel2.log' ) # Get our \"browser\" s = requests . Session () # Reload cookies from previous session if they exist if pathlib . Path ( ownp + '/cookiefile2' ) . exists (): with open ( ownp + '/cookiefile2' , 'rb' ) as f : s . cookies . update ( pickle . load ( f )) # Set url and authentication url = \"http://10.1.10.1/check.php\" payload = { \"username\" : \"cusadmin\" , # Public, well known, customer-side, default credentials \"password\" : \"highspeed\" } # Set our regex regex = r '\"Please Login First\\!\\\"' modemin = False # Login loop, tries to connect to the modem. while not modemin : try : # Login to set cookie logging . info ( \"Getting: %s \" % url ) r = s . post ( url , data = payload ) logging . info ( \"Status Code: %i \" % r . status_code ) r . raise_for_status () if not re . search ( regex , str ( r . content )): logging . info ( \"Ok, we're in. Let's stay logged on and get data!\" ) send_text ( \"Logged on!\" ) modemin = True else : logging . info ( \"No Luck! Let's try again in 10 seconds.\" ) time . sleep ( 10 ) except Exception as e : logging . error ( e ) # Save cookies with open ( ownp + '/cookiefile2' , 'wb' ) as f : pickle . dump ( s . cookies , f ) # Now we can access the page we need url = \"http://10.1.10.1/comcast_network.php\" getdata = True # Let's start the data loop while getdata : try : logging . info ( \"Getting: %s \" % url ) r = s . get ( url ) logging . info ( \"Status Code: %i \" % r . status_code ) r . raise_for_status () # Get the date/time close to the time we read the values currentDT = datetime . datetime . now () # Get the html bs_content = bs ( r . content , \"lxml\" ) # Narrow the html down to the two tables down_data = bs_content . find_all ( 'table' )[ 0 ] . get_text () up_data = bs_content . find_all ( 'table' )[ 1 ] . get_text () # Set our regex regex = r \"[-0-9\\.]* dBmV\" # Get the power levels d_matches = re . finditer ( regex , down_data , re . MULTILINE ) u_matches = re . finditer ( regex , up_data , re . MULTILINE ) d_pwr_sum = [] u_pwr_sum = [] # For each power level remove the label and convert to a number # Sum up all the power levels so we can divide later for the average for d_matchNum , match in enumerate ( d_matches , start = 1 ): d_pwr = float ( match . group () . replace ( \" dBmV\" , \"\" )) d_pwr_sum . append ( d_pwr ) for u_matchNum , match in enumerate ( u_matches , start = 1 ): u_pwr = float ( match . group () . replace ( \" dBmV\" , \"\" )) u_pwr_sum . append ( u_pwr ) # Print info to log file logging . info ( \"DW: {} \" . format ( ',' . join ( map ( str , d_pwr_sum )))) logging . info ( \"DW: H %.1f , L %.1f , M %.1f , A %.2f \" % ( max ( d_pwr_sum ), min ( d_pwr_sum ), statistics . median ( d_pwr_sum ), statistics . mean ( d_pwr_sum ))) logging . info ( \"UP: {} \" . format ( ',' . join ( map ( str , u_pwr_sum )))) logging . info ( \"UP: H %.1f , L %.1f , M %.1f , A %.2f \" % ( max ( u_pwr_sum ), min ( u_pwr_sum ), statistics . median ( u_pwr_sum ), statistics . mean ( u_pwr_sum ))) # Calculate the averages avg_u_pwr = statistics . mean ( u_pwr_sum ) avg_d_pwr = statistics . mean ( d_pwr_sum ) # If the power levels are outside of spec, send an alert text message if ( avg_u_pwr > 49 ) or ( avg_u_pwr < 40 ) or ( avg_d_pwr > 10 ) or ( avg_d_pwr < - 10 ): send_text ( \"U %.2f D %.2f \" % ( avg_u_pwr , avg_d_pwr )) # Write data to file logging . info ( \"Writing data to: %s \" % DATAFILE ) with open ( DATAFILE , 'a' ) as o : o . write ( \" %s U %.2f dBmV D %.2f dBmV \\n \" % ( currentDT . strftime ( \"%Y-%m- %d %H:%M:%S\" ), avg_u_pwr , avg_d_pwr )) logging . info ( \"Waiting %i seconds.\" % ( WAIT_TIME )) time . sleep ( WAIT_TIME ) except Exception as e : logging . error ( e ) send_text ( \"Exception!\" ) with open ( ownp + '/content.html' , 'w+' ) as h : h . write ( r . text ) # Exit loop, cron will restart getdata = False Sample Graphs Downstream Power Levels Upstream Power Levels Historical Graphs This is where you can really show line issues over time. You can see why we had random drops at the begging of the graph. Some variance is expected on power levels, especially due to temperature, but no mor than 2-3 decibels. You can see where Comast finally fixed the issue. You can also see where we added back our splitter for the TV. Note: the gaps in the line is missing data. The modem sometimes does not repond to web requests. After some time, it will now allow web logins, yet somehow, with the python script and reusing cookies we are allowed in to collect data. Some times the page will refresh without the signal levels. Other times, during line problems the page will not be available. Click here to see the full image... Click here to see the full image... Generate Graphs With R #!/usr/bin/env Rscript # Comcast modem power levels plotting script. # Author: Eugenio Cilento # Date: 09.16.2019 # Load libraries library ( ggplot2 , warn.conflicts = FALSE ) library ( scales , warn.conflicts = FALSE ) library ( ggrepel , warn.conflicts = FALSE ) library ( lubridate , warn.conflicts = FALSE ) library ( dplyr , warn.conflicts = FALSE ) consts <- list ( img_w = 14 , img_h = 8.5 , img_dpi = 320 , img_q = 30 , days = 6 ) # *************************************************************************************** # Get the data, clean it up and get it ready for use in the graph. # *************************************************************************************** # Read in the modem power levels from the text file. pwr <- read.table ( \"cm_modem_pwr_levels.txt\" ) pwr = pwr [ c ( -3 , -5 , -6 , -8 )] # Remove uneeded columns. colnames ( pwr ) = c ( \"Date\" , \"Time\" , \"UP\" , \"DW\" ) # Let's give the columns some names. pwr $ DateTime <- paste ( pwr $ Date , pwr $ Time ) # Create a new timstamp column. # Create a new column used for the facets. Basically to show the Days on the graph. pwr $ Dow <- strptime ( pwr $ DateTime , \"%Y-%m-%d\" ) pwr $ Dow <- format ( pwr $ Dow , \"%m-%d %a\" ) pwr = pwr [ c ( -1 , -2 )] # Some more cleanup. # Make that column an actual date time field pwr $ DateTime <- strptime ( pwr $ DateTime , \"%Y-%m-%d %H:%M:%S\" ) pwr $ DateTime <- as.POSIXct ( pwr $ DateTime , tz = \"America/Chicago\" ) # Convert to POSIXct type pwr <- pwr [ pwr $ DateTime >= as.POSIXct ( Sys.Date () - consts $ days ),] # Limit the data. # When did the modem signal go outside of the acceptable range? pwrovr <- pwr [ which ( pwr [, 1 ] > 49 | pwr [, 1 ] < 35 ),] # Dataframe for ranges dmax <- pwr %>% group_by ( Dow ) %>% summarise ( Max = max ( DateTime )) dmin <- pwr %>% group_by ( Dow ) %>% summarise ( Min = min ( DateTime )) dminmax <- merge ( dmax , dmin , by = \"Dow\" ) # Put in variables so we dont have to repeat code dta = as.POSIXct ( Sys.Date ()) dtw = format ( as.POSIXct ( Sys.Date ()), \"%m-%d %a\" ) # *************************************************************************************** # Beginning of the UPSTREAM graph script. # *************************************************************************************** # Dataframe for text labels for ranges text_ann <- data.frame ( UP = 49 , DW = 5 , lab = \"Packet Loss\\nBegins: +49\" , DateTime = dta , Dow = dtw ) text_ann <- rbind ( text_ann , data.frame ( UP = 35 , DW = 5 , lab = \"Recommended:\\n+ 35 - 47\" , DateTime = dta , Dow = dtw )) hour ( text_ann $ DateTime ) = 2 #position of text within facet # Create the plot gg <- ggplot ( pwr , aes ( DateTime , UP )) + geom_point ( # Points on a graph seem to work best for this type data. color = \"black\" , size = . 1 ) + facet_grid ( # This gives the days in a nice column. col = vars ( Dow ), labeller = labeller ( Dow = label_wrap_gen ( 5 )), # Word rap the labels. space = 'free' , scales = 'free' , switch = 'x' ) + labs ( # Needs some good titles and labels to make it easier to understand. title = \"Cable Modem Upstream Power\" , subtitle = \"Comcast Business Internet\" , y = \"Upstream Power Level (dBmV)\" , x = \"Time (Date & Hour in 24Hr format)\" , caption = paste ( # Timestamp the graph. \"International Assurance of TN, Inc. IT Department -\" , Sys.time () ) ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = 35 , ymax = 47 ), alpha = 0.2 , fill = \"green\" , inherit.aes = FALSE ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = 47 , ymax = 49 ), alpha = 0.2 , fill = \"red\" , inherit.aes = FALSE ) + geom_text ( # add labels for the ranges data = text_ann , aes ( x = DateTime , y = UP , label = lab ), vjust = -.2 , hjust = 0 , size = 2.5 , color = \"black\" ) + geom_hline ( yintercept = 49 , linetype = \"dashed\" , color = \"red\" ) + geom_hline ( yintercept = 47 , linetype = \"dashed\" , color = \"green\" ) + geom_hline ( yintercept = 35 , linetype = \"dashed\" , color = \"green\" ) + coord_cartesian ( # Set the y scale. The range of modem signal levels. ylim = c ( 0 , 60 ) ) + scale_y_continuous ( # Set where the lines show on the graph. minor_breaks = seq ( 0 , 60 , 1 ), breaks = seq ( 0 , 60 , 10 ) ) + scale_x_datetime ( # Set the x scale based on the hour of the day. breaks = pretty_breaks (), # Makes the hours fit nicely in a day. expand = c ( 0 , 0 ), # Brings the panel/facets together, seamless transition from day to day. labels = date_format ( \"%H\" , tz = Sys.timezone ( location = TRUE )), date_breaks = \"2 hour\" , date_minor_breaks = \"1 hour\" ) + theme_bw () + # Start off with a base theme, then modify it. theme ( panel.border = element_rect ( color = \"dark gray\" ), panel.spacing.x = unit ( 0 , \"line\" ), strip.placement = \"outside\" , strip.text.x = element_text ( size = 6 ), panel.grid.major = element_line ( color = \"light gray\" ), panel.grid.minor = element_line ( color = \"light gray\" ), axis.text.x = element_text ( # Hour of the day size = 6 , angle = 90 , vjust = 0.5 , hjust = 0.5 ), axis.line = element_line ( # Make the axis stand out. color = \"darkblue\" , size = 1 , linetype = \"solid\" ) ) if ( dim ( pwrovr )[ 1 ] != 0 ) { # Make sure we have out of range plots before adding them gg = gg + geom_text_repel ( # Label the out-of-range plots aes ( label = paste ( hour ( DateTime ), \":\" , minute ( DateTime ), \"-\" , UP )), pwrovr , size = 2 , color = \"red\" ) } # Save the graph to a JPEG file. High resolution allows more clarity and printability. ggsave ( \"cm_modem_up_pwr_levels.jpg\" , width = consts $ img_w , height = consts $ img_h , dpi = consts $ img_dpi , quality = consts $ img_q , limitsize = FALSE ) # *************************************************************************************** # Beginning of the DOWNSTREAM graph script. # *************************************************************************************** # Dataframe for text labels for ranges text_ann2 <- data.frame ( UP = -6 , DW = 5 , lab = \"Recommended:\\n-7 to 7\" , DateTime = dta , Dow = dtw ) text_ann2 <- rbind ( text_ann2 , data.frame ( UP = -9 , DW = 5 , lab = \"Acceptable:\\n+- 7 to 10\" , DateTime = dta , Dow = dtw )) text_ann2 <- rbind ( text_ann2 , data.frame ( UP = -14 , DW = 5 , lab = \"Maximum:\\n+- 10 to 15 \" , DateTime = dta , Dow = dtw )) text_ann2 <- rbind ( text_ann2 , data.frame ( UP = -18 , DW = 5 , lab = \"Out of Spec:\\n> +-15 \" , DateTime = dta , Dow = dtw )) hour ( text_ann2 $ DateTime ) = 2 #position of text within facet # Filter into a new table the out-of-range instances. pwrovr <- pwr [ which ( pwr [, 2 ] > 10 | pwr [, 2 ] < -10 ),] # Generate the downstream graph. Identical to upstream but with different ranges. gg <- ggplot ( pwr , aes ( DateTime , DW )) + geom_point ( color = \"black\" , size = . 1 ) + facet_grid ( col = vars ( Dow ), labeller = labeller ( Dow = label_wrap_gen ( 5 )), space = 'free' , scales = 'free' , switch = 'x' ) + coord_cartesian ( ylim = c ( -30 , 20 ) ) + scale_y_continuous ( minor_breaks = seq ( -30 , 20 , 1 ), breaks = seq ( -30 , 20 , 10 ) ) + labs ( title = \"Cable Modem Downstream Power\" , subtitle = \"Comcast Business Internet\" , y = \"Downstream Power Level (dBmV)\" , x = \"Time (Date & Hour in 24Hr format)\" , caption = paste ( \"International Assurance of TN, Inc. IT Department -\" , Sys.time () ) ) + geom_text ( # write the labels for the ranges data = text_ann2 , aes ( x = DateTime , y = UP , label = lab ), vjust = . 3 , hjust = 0 , size = 2.5 , color = \"black\" ) + geom_hline ( yintercept = -15 , linetype = \"dashed\" , color = \"red\" ) + geom_hline ( yintercept = -10 , linetype = \"dashed\" , color = \"yellow\" ) + geom_hline ( yintercept = -7 , linetype = \"dashed\" , color = \"green\" ) + geom_hline ( yintercept = 7 , linetype = \"dashed\" , color = \"green\" ) + geom_hline ( yintercept = 10 , linetype = \"dashed\" , color = \"yellow\" ) + geom_hline ( yintercept = 15 , linetype = \"dashed\" , color = \"red\" ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = -7 , ymax = 7 ), alpha = 0.2 , fill = \"green\" , inherit.aes = FALSE ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = -10 , ymax = -7 ), alpha = 0.2 , fill = \"yellow\" , inherit.aes = FALSE ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = 7 , ymax = 10 ), alpha = 0.2 , fill = \"yellow\" , inherit.aes = FALSE ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = -15 , ymax = -10 ), alpha = 0.2 , fill = \"red\" , inherit.aes = FALSE ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = 10 , ymax = 15 ), alpha = 0.2 , fill = \"red\" , inherit.aes = FALSE ) + scale_x_datetime ( breaks = pretty_breaks (), expand = c ( 0 , 0 ), labels = date_format ( \"%H\" , tz = Sys.timezone ( location = TRUE )), date_breaks = \"2 hour\" , date_minor_breaks = \"1 hour\" ) + theme_bw () + theme ( panel.border = element_rect ( colour = \"dark gray\" ), panel.spacing.x = unit ( 0 , \"line\" ), strip.placement = \"outside\" , strip.text.x = element_text ( size = 6 ), panel.grid.major = element_line ( colour = \"light gray\" ), panel.grid.minor = element_line ( color = \"light gray\" ), axis.text.x = element_text ( size = 6 , angle = 90 , vjust = 0.5 , hjust = 0.5 ), axis.line = element_line ( colour = \"darkblue\" , size = 1 , linetype = \"solid\" ) ) if ( dim ( pwrovr )[ 1 ] != 0 ) { # Make sure we have out of range before plotting gg = gg + geom_text_repel ( # Label the out-of-range plots aes ( label = paste ( DateTime , \"-\" , DW , \"dBmV\" )), pwrovr , size = 2 , color = \"red\" ) } # Save graph to file. ggsave ( \"cm_modem_dwn_pwr_levels.jpg\" , width = consts $ img_w , height = consts $ img_h , dpi = consts $ img_dpi , quality = consts $ img_q , limitsize = FALSE )","title":"Comcast Modem Power Level Monitor"},{"location":"posts/ComcastModemMonitor/#windows-subsystem-for-linux","text":"Built-in linux system in Windows 10. You can run these scripts on any linux based system, but this was readily available and already on our existing network.","title":"Windows Subsystem for Linux"},{"location":"posts/ComcastModemMonitor/#start-cron-ssh-at-windows-startup","text":"Short batch file startup.bat used by a scheduled task in Windows to start the ssh and cron daemons in WSL. This is useful in case the host comptuer is restarted. (Windows Updates restarts mainly...) @ echo off wsl -u root service ssh start wsl -u root service cron start exit","title":"Start Cron &amp; SSH at Windows Startup"},{"location":"posts/ComcastModemMonitor/#ssh","text":"Having SSH installed in WSL makes it a lot easier to connect in and work on the script, check logs, etc.","title":"SSH"},{"location":"posts/ComcastModemMonitor/#cron","text":"Run the graph generating script every hour. At 1 min intervals, check the python script hasn't errored out. If it's not running, start it. 0 * * * * /home/user/scripts/comcast/cm_run.sh */1 * * * * /home/user/scripts/comcast/keep_alive.sh","title":"Cron"},{"location":"posts/ComcastModemMonitor/#cm_rushsh","text":"Simple script to run the graph generating code. Could run R script directly from cron, but this allows other scripts to be called if needed. #!/bin/bash ~/scripts/comcast/comcastplot.R","title":"cm_rush.sh"},{"location":"posts/ComcastModemMonitor/#keep_alivesh","text":"Script to check if the python code is running. If it isn't, it will restart it. #!/bin/bash if ! pgrep -f 'cmpwrlevel2.py' then nohup $( which python3 ) ~/scripts/comcast/cmpwrlevel2.py & fi","title":"keep_alive.sh"},{"location":"posts/ComcastModemMonitor/#modem-power-levels","text":"Poll the modem every minute and log the upstream (U) and downstream (D) powerlevels. Acceptable ranges: (Note the DOCSIS 3.1, which is neede for higher speeds has lower tolerances.) https://www.dslreports.com/faq/16085","title":"Modem Power Levels"},{"location":"posts/ComcastModemMonitor/#sample-data","text":"2019-09-16 01:30:17 U 43.78 dBmV D 3.97 dBmV 2019-09-16 01:31:18 U 43.78 dBmV D 3.97 dBmV 2019-09-16 01:32:18 U 43.78 dBmV D 3.97 dBmV 2019-09-16 01:33:18 U 43.78 dBmV D 3.96 dBmV 2019-09-16 01:34:19 U 43.78 dBmV D 3.96 dBmV 2019-09-16 01:35:18 U 43.78 dBmV D 4.03 dBmV 2019-09-16 01:36:18 U 43.78 dBmV D 4.00 dBmV 2019-09-16 01:37:18 U 43.78 dBmV D 3.98 dBmV 2019-09-16 01:38:17 U 43.78 dBmV D 3.97 dBmV","title":"Sample Data"},{"location":"posts/ComcastModemMonitor/#get-data-with-python","text":"Script to get the data. The modem is quite \"finicky\". #!/usr/bin/python3 # Comcast modem power levels reading script. # Author: Eugenio C. # Date: 09.16.2019 # TODO: Rewrite this script into a module with calls to objects. # TODO: Put raw data in database. SQLite # Load libraries import logging import re import smtplib import datetime import pickle import pathlib import os import sys import time import statistics from email.message import EmailMessage from bs4 import BeautifulSoup as bs import requests DATAFILE = 'cm_modem_pwr_levels.txt' WAIT_TIME = 60 # ******************************************************************************** # Function Declerations # ******************************************************************************** def send_text ( msg_txt ): msg = EmailMessage () msg . set_content ( msg_txt ) msg [ 'Subject' ] = 'CM Alarm' msg [ 'From' ] = 'python_script@yourdomain.com' msg [ 'To' ] = 'phonenumber@vtext.com' smtp = smtplib . SMTP ( 'email.server.address' ) smtp . send_message ( msg ) smtp . quit () # ******************************************************************************** # Main Script # ******************************************************************************** ownp = os . path . abspath ( os . path . dirname ( sys . argv [ 0 ])) tdnow = datetime . datetime . now () . strftime ( \"%Y%m %d \" ) # Setup Logging logging . basicConfig ( format = ' %(asctime)s : %(levelname)s : %(message)s ' , level = logging . DEBUG , filename = ownp + '/cmpwrlevel2.log' ) # Get our \"browser\" s = requests . Session () # Reload cookies from previous session if they exist if pathlib . Path ( ownp + '/cookiefile2' ) . exists (): with open ( ownp + '/cookiefile2' , 'rb' ) as f : s . cookies . update ( pickle . load ( f )) # Set url and authentication url = \"http://10.1.10.1/check.php\" payload = { \"username\" : \"cusadmin\" , # Public, well known, customer-side, default credentials \"password\" : \"highspeed\" } # Set our regex regex = r '\"Please Login First\\!\\\"' modemin = False # Login loop, tries to connect to the modem. while not modemin : try : # Login to set cookie logging . info ( \"Getting: %s \" % url ) r = s . post ( url , data = payload ) logging . info ( \"Status Code: %i \" % r . status_code ) r . raise_for_status () if not re . search ( regex , str ( r . content )): logging . info ( \"Ok, we're in. Let's stay logged on and get data!\" ) send_text ( \"Logged on!\" ) modemin = True else : logging . info ( \"No Luck! Let's try again in 10 seconds.\" ) time . sleep ( 10 ) except Exception as e : logging . error ( e ) # Save cookies with open ( ownp + '/cookiefile2' , 'wb' ) as f : pickle . dump ( s . cookies , f ) # Now we can access the page we need url = \"http://10.1.10.1/comcast_network.php\" getdata = True # Let's start the data loop while getdata : try : logging . info ( \"Getting: %s \" % url ) r = s . get ( url ) logging . info ( \"Status Code: %i \" % r . status_code ) r . raise_for_status () # Get the date/time close to the time we read the values currentDT = datetime . datetime . now () # Get the html bs_content = bs ( r . content , \"lxml\" ) # Narrow the html down to the two tables down_data = bs_content . find_all ( 'table' )[ 0 ] . get_text () up_data = bs_content . find_all ( 'table' )[ 1 ] . get_text () # Set our regex regex = r \"[-0-9\\.]* dBmV\" # Get the power levels d_matches = re . finditer ( regex , down_data , re . MULTILINE ) u_matches = re . finditer ( regex , up_data , re . MULTILINE ) d_pwr_sum = [] u_pwr_sum = [] # For each power level remove the label and convert to a number # Sum up all the power levels so we can divide later for the average for d_matchNum , match in enumerate ( d_matches , start = 1 ): d_pwr = float ( match . group () . replace ( \" dBmV\" , \"\" )) d_pwr_sum . append ( d_pwr ) for u_matchNum , match in enumerate ( u_matches , start = 1 ): u_pwr = float ( match . group () . replace ( \" dBmV\" , \"\" )) u_pwr_sum . append ( u_pwr ) # Print info to log file logging . info ( \"DW: {} \" . format ( ',' . join ( map ( str , d_pwr_sum )))) logging . info ( \"DW: H %.1f , L %.1f , M %.1f , A %.2f \" % ( max ( d_pwr_sum ), min ( d_pwr_sum ), statistics . median ( d_pwr_sum ), statistics . mean ( d_pwr_sum ))) logging . info ( \"UP: {} \" . format ( ',' . join ( map ( str , u_pwr_sum )))) logging . info ( \"UP: H %.1f , L %.1f , M %.1f , A %.2f \" % ( max ( u_pwr_sum ), min ( u_pwr_sum ), statistics . median ( u_pwr_sum ), statistics . mean ( u_pwr_sum ))) # Calculate the averages avg_u_pwr = statistics . mean ( u_pwr_sum ) avg_d_pwr = statistics . mean ( d_pwr_sum ) # If the power levels are outside of spec, send an alert text message if ( avg_u_pwr > 49 ) or ( avg_u_pwr < 40 ) or ( avg_d_pwr > 10 ) or ( avg_d_pwr < - 10 ): send_text ( \"U %.2f D %.2f \" % ( avg_u_pwr , avg_d_pwr )) # Write data to file logging . info ( \"Writing data to: %s \" % DATAFILE ) with open ( DATAFILE , 'a' ) as o : o . write ( \" %s U %.2f dBmV D %.2f dBmV \\n \" % ( currentDT . strftime ( \"%Y-%m- %d %H:%M:%S\" ), avg_u_pwr , avg_d_pwr )) logging . info ( \"Waiting %i seconds.\" % ( WAIT_TIME )) time . sleep ( WAIT_TIME ) except Exception as e : logging . error ( e ) send_text ( \"Exception!\" ) with open ( ownp + '/content.html' , 'w+' ) as h : h . write ( r . text ) # Exit loop, cron will restart getdata = False","title":"Get Data With Python"},{"location":"posts/ComcastModemMonitor/#sample-graphs","text":"","title":"Sample Graphs"},{"location":"posts/ComcastModemMonitor/#downstream-power-levels","text":"","title":"Downstream Power Levels"},{"location":"posts/ComcastModemMonitor/#upstream-power-levels","text":"","title":"Upstream Power Levels"},{"location":"posts/ComcastModemMonitor/#historical-graphs","text":"This is where you can really show line issues over time. You can see why we had random drops at the begging of the graph. Some variance is expected on power levels, especially due to temperature, but no mor than 2-3 decibels. You can see where Comast finally fixed the issue. You can also see where we added back our splitter for the TV. Note: the gaps in the line is missing data. The modem sometimes does not repond to web requests. After some time, it will now allow web logins, yet somehow, with the python script and reusing cookies we are allowed in to collect data. Some times the page will refresh without the signal levels. Other times, during line problems the page will not be available. Click here to see the full image... Click here to see the full image...","title":"Historical Graphs"},{"location":"posts/ComcastModemMonitor/#generate-graphs-with-r","text":"#!/usr/bin/env Rscript # Comcast modem power levels plotting script. # Author: Eugenio Cilento # Date: 09.16.2019 # Load libraries library ( ggplot2 , warn.conflicts = FALSE ) library ( scales , warn.conflicts = FALSE ) library ( ggrepel , warn.conflicts = FALSE ) library ( lubridate , warn.conflicts = FALSE ) library ( dplyr , warn.conflicts = FALSE ) consts <- list ( img_w = 14 , img_h = 8.5 , img_dpi = 320 , img_q = 30 , days = 6 ) # *************************************************************************************** # Get the data, clean it up and get it ready for use in the graph. # *************************************************************************************** # Read in the modem power levels from the text file. pwr <- read.table ( \"cm_modem_pwr_levels.txt\" ) pwr = pwr [ c ( -3 , -5 , -6 , -8 )] # Remove uneeded columns. colnames ( pwr ) = c ( \"Date\" , \"Time\" , \"UP\" , \"DW\" ) # Let's give the columns some names. pwr $ DateTime <- paste ( pwr $ Date , pwr $ Time ) # Create a new timstamp column. # Create a new column used for the facets. Basically to show the Days on the graph. pwr $ Dow <- strptime ( pwr $ DateTime , \"%Y-%m-%d\" ) pwr $ Dow <- format ( pwr $ Dow , \"%m-%d %a\" ) pwr = pwr [ c ( -1 , -2 )] # Some more cleanup. # Make that column an actual date time field pwr $ DateTime <- strptime ( pwr $ DateTime , \"%Y-%m-%d %H:%M:%S\" ) pwr $ DateTime <- as.POSIXct ( pwr $ DateTime , tz = \"America/Chicago\" ) # Convert to POSIXct type pwr <- pwr [ pwr $ DateTime >= as.POSIXct ( Sys.Date () - consts $ days ),] # Limit the data. # When did the modem signal go outside of the acceptable range? pwrovr <- pwr [ which ( pwr [, 1 ] > 49 | pwr [, 1 ] < 35 ),] # Dataframe for ranges dmax <- pwr %>% group_by ( Dow ) %>% summarise ( Max = max ( DateTime )) dmin <- pwr %>% group_by ( Dow ) %>% summarise ( Min = min ( DateTime )) dminmax <- merge ( dmax , dmin , by = \"Dow\" ) # Put in variables so we dont have to repeat code dta = as.POSIXct ( Sys.Date ()) dtw = format ( as.POSIXct ( Sys.Date ()), \"%m-%d %a\" ) # *************************************************************************************** # Beginning of the UPSTREAM graph script. # *************************************************************************************** # Dataframe for text labels for ranges text_ann <- data.frame ( UP = 49 , DW = 5 , lab = \"Packet Loss\\nBegins: +49\" , DateTime = dta , Dow = dtw ) text_ann <- rbind ( text_ann , data.frame ( UP = 35 , DW = 5 , lab = \"Recommended:\\n+ 35 - 47\" , DateTime = dta , Dow = dtw )) hour ( text_ann $ DateTime ) = 2 #position of text within facet # Create the plot gg <- ggplot ( pwr , aes ( DateTime , UP )) + geom_point ( # Points on a graph seem to work best for this type data. color = \"black\" , size = . 1 ) + facet_grid ( # This gives the days in a nice column. col = vars ( Dow ), labeller = labeller ( Dow = label_wrap_gen ( 5 )), # Word rap the labels. space = 'free' , scales = 'free' , switch = 'x' ) + labs ( # Needs some good titles and labels to make it easier to understand. title = \"Cable Modem Upstream Power\" , subtitle = \"Comcast Business Internet\" , y = \"Upstream Power Level (dBmV)\" , x = \"Time (Date & Hour in 24Hr format)\" , caption = paste ( # Timestamp the graph. \"International Assurance of TN, Inc. IT Department -\" , Sys.time () ) ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = 35 , ymax = 47 ), alpha = 0.2 , fill = \"green\" , inherit.aes = FALSE ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = 47 , ymax = 49 ), alpha = 0.2 , fill = \"red\" , inherit.aes = FALSE ) + geom_text ( # add labels for the ranges data = text_ann , aes ( x = DateTime , y = UP , label = lab ), vjust = -.2 , hjust = 0 , size = 2.5 , color = \"black\" ) + geom_hline ( yintercept = 49 , linetype = \"dashed\" , color = \"red\" ) + geom_hline ( yintercept = 47 , linetype = \"dashed\" , color = \"green\" ) + geom_hline ( yintercept = 35 , linetype = \"dashed\" , color = \"green\" ) + coord_cartesian ( # Set the y scale. The range of modem signal levels. ylim = c ( 0 , 60 ) ) + scale_y_continuous ( # Set where the lines show on the graph. minor_breaks = seq ( 0 , 60 , 1 ), breaks = seq ( 0 , 60 , 10 ) ) + scale_x_datetime ( # Set the x scale based on the hour of the day. breaks = pretty_breaks (), # Makes the hours fit nicely in a day. expand = c ( 0 , 0 ), # Brings the panel/facets together, seamless transition from day to day. labels = date_format ( \"%H\" , tz = Sys.timezone ( location = TRUE )), date_breaks = \"2 hour\" , date_minor_breaks = \"1 hour\" ) + theme_bw () + # Start off with a base theme, then modify it. theme ( panel.border = element_rect ( color = \"dark gray\" ), panel.spacing.x = unit ( 0 , \"line\" ), strip.placement = \"outside\" , strip.text.x = element_text ( size = 6 ), panel.grid.major = element_line ( color = \"light gray\" ), panel.grid.minor = element_line ( color = \"light gray\" ), axis.text.x = element_text ( # Hour of the day size = 6 , angle = 90 , vjust = 0.5 , hjust = 0.5 ), axis.line = element_line ( # Make the axis stand out. color = \"darkblue\" , size = 1 , linetype = \"solid\" ) ) if ( dim ( pwrovr )[ 1 ] != 0 ) { # Make sure we have out of range plots before adding them gg = gg + geom_text_repel ( # Label the out-of-range plots aes ( label = paste ( hour ( DateTime ), \":\" , minute ( DateTime ), \"-\" , UP )), pwrovr , size = 2 , color = \"red\" ) } # Save the graph to a JPEG file. High resolution allows more clarity and printability. ggsave ( \"cm_modem_up_pwr_levels.jpg\" , width = consts $ img_w , height = consts $ img_h , dpi = consts $ img_dpi , quality = consts $ img_q , limitsize = FALSE ) # *************************************************************************************** # Beginning of the DOWNSTREAM graph script. # *************************************************************************************** # Dataframe for text labels for ranges text_ann2 <- data.frame ( UP = -6 , DW = 5 , lab = \"Recommended:\\n-7 to 7\" , DateTime = dta , Dow = dtw ) text_ann2 <- rbind ( text_ann2 , data.frame ( UP = -9 , DW = 5 , lab = \"Acceptable:\\n+- 7 to 10\" , DateTime = dta , Dow = dtw )) text_ann2 <- rbind ( text_ann2 , data.frame ( UP = -14 , DW = 5 , lab = \"Maximum:\\n+- 10 to 15 \" , DateTime = dta , Dow = dtw )) text_ann2 <- rbind ( text_ann2 , data.frame ( UP = -18 , DW = 5 , lab = \"Out of Spec:\\n> +-15 \" , DateTime = dta , Dow = dtw )) hour ( text_ann2 $ DateTime ) = 2 #position of text within facet # Filter into a new table the out-of-range instances. pwrovr <- pwr [ which ( pwr [, 2 ] > 10 | pwr [, 2 ] < -10 ),] # Generate the downstream graph. Identical to upstream but with different ranges. gg <- ggplot ( pwr , aes ( DateTime , DW )) + geom_point ( color = \"black\" , size = . 1 ) + facet_grid ( col = vars ( Dow ), labeller = labeller ( Dow = label_wrap_gen ( 5 )), space = 'free' , scales = 'free' , switch = 'x' ) + coord_cartesian ( ylim = c ( -30 , 20 ) ) + scale_y_continuous ( minor_breaks = seq ( -30 , 20 , 1 ), breaks = seq ( -30 , 20 , 10 ) ) + labs ( title = \"Cable Modem Downstream Power\" , subtitle = \"Comcast Business Internet\" , y = \"Downstream Power Level (dBmV)\" , x = \"Time (Date & Hour in 24Hr format)\" , caption = paste ( \"International Assurance of TN, Inc. IT Department -\" , Sys.time () ) ) + geom_text ( # write the labels for the ranges data = text_ann2 , aes ( x = DateTime , y = UP , label = lab ), vjust = . 3 , hjust = 0 , size = 2.5 , color = \"black\" ) + geom_hline ( yintercept = -15 , linetype = \"dashed\" , color = \"red\" ) + geom_hline ( yintercept = -10 , linetype = \"dashed\" , color = \"yellow\" ) + geom_hline ( yintercept = -7 , linetype = \"dashed\" , color = \"green\" ) + geom_hline ( yintercept = 7 , linetype = \"dashed\" , color = \"green\" ) + geom_hline ( yintercept = 10 , linetype = \"dashed\" , color = \"yellow\" ) + geom_hline ( yintercept = 15 , linetype = \"dashed\" , color = \"red\" ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = -7 , ymax = 7 ), alpha = 0.2 , fill = \"green\" , inherit.aes = FALSE ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = -10 , ymax = -7 ), alpha = 0.2 , fill = \"yellow\" , inherit.aes = FALSE ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = 7 , ymax = 10 ), alpha = 0.2 , fill = \"yellow\" , inherit.aes = FALSE ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = -15 , ymax = -10 ), alpha = 0.2 , fill = \"red\" , inherit.aes = FALSE ) + geom_rect ( # color the acceptable range so it stands out. data = dminmax , aes ( xmin = Min , xmax = Max , ymin = 10 , ymax = 15 ), alpha = 0.2 , fill = \"red\" , inherit.aes = FALSE ) + scale_x_datetime ( breaks = pretty_breaks (), expand = c ( 0 , 0 ), labels = date_format ( \"%H\" , tz = Sys.timezone ( location = TRUE )), date_breaks = \"2 hour\" , date_minor_breaks = \"1 hour\" ) + theme_bw () + theme ( panel.border = element_rect ( colour = \"dark gray\" ), panel.spacing.x = unit ( 0 , \"line\" ), strip.placement = \"outside\" , strip.text.x = element_text ( size = 6 ), panel.grid.major = element_line ( colour = \"light gray\" ), panel.grid.minor = element_line ( color = \"light gray\" ), axis.text.x = element_text ( size = 6 , angle = 90 , vjust = 0.5 , hjust = 0.5 ), axis.line = element_line ( colour = \"darkblue\" , size = 1 , linetype = \"solid\" ) ) if ( dim ( pwrovr )[ 1 ] != 0 ) { # Make sure we have out of range before plotting gg = gg + geom_text_repel ( # Label the out-of-range plots aes ( label = paste ( DateTime , \"-\" , DW , \"dBmV\" )), pwrovr , size = 2 , color = \"red\" ) } # Save graph to file. ggsave ( \"cm_modem_dwn_pwr_levels.jpg\" , width = consts $ img_w , height = consts $ img_h , dpi = consts $ img_dpi , quality = consts $ img_q , limitsize = FALSE )","title":"Generate Graphs With R"},{"location":"posts/DilbertSyncAsync/","tags":["NET","C#","Programming"],"text":"Published: 2007-10-19 Git Repository I wanted to learn how to use web services in .NET with C#, so I created this tiny program that goes out and gets the \"Dilbert of the Day\" comic strip and puts it on your desktop in the form of a jpeg file. There are two versions to this program. One calls the web service synchronously, while the other calls the web services asynchronously. Synchronous calls are what most programmers would be familiar with. When a synchronous function/method is called it doesn't return control back to the calling program until it's finished, while an asynchronous function/method returns control immediately while it runs in a separate thread. The synchronous version of this program is much simpler than the asynchronous version, but the later allows for more flexibility. For example, in the asynchronous version the program can display a progress indicator while it's waiting for the call to complete. You could use the synchronous call to the web service and put it in a separate thread yourself. You would achieve the same result as the asynchronous call. It just makes the code a little longer and slightly more complex. Synchronous Code using System ; using System.Collections.Generic ; using System.Text ; using System.Threading ; using System.IO ; using System.Drawing ; using System.Drawing.Imaging ; using DilbertADay.com.esynaps.www ; namespace DilbertADay { class Program { public static void Main ( string [] args ) { DailyDilbert wsDd ; Byte [] imageData ; MemoryStream strm ; Bitmap bmp ; try { wsDd = new DailyDilbert (); imageData = wsDd . DailyDilbertImage (); strm = new MemoryStream ( imageData ); bmp = new Bitmap ( strm ); bmp . Save ( Environment . GetFolderPath ( Environment . SpecialFolder . DesktopDirectory ) + \"\\\\dilbert.jpg\" , ImageFormat . Jpeg ); bmp . Dispose (); strm . Close (); wsDd . Dispose (); } catch ( Exception ex ) { Console . Write ( ex . Message ); } } } } Asynchronous Code using System ; using System.Collections.Generic ; using System.Text ; using System.Threading ; using System.IO ; using System.Drawing ; using System.Drawing.Imaging ; using DilbertADay.com.esynaps.www ; namespace DilbertADay { class Program { public static int isCompleted = 0 ; public static Byte [] imgData ; public static int timeout = 10000 ; public static void Main ( string [] args ) { DailyDilbert wsDd ; MemoryStream strm ; Bitmap bmp ; int start , currentSecond ; try { wsDd = new DailyDilbert (); wsDd . DailyDilbertImageCompleted += new DailyDilbertImageCompletedEventHandler ( Program . DailyDilbertImageCompleted_Handler ); wsDd . DailyDilbertImageAsync (); start = DateTime . Now . Millisecond ; currentSecond = start ; Console . WriteLine ( \"Sending request\" ); while ( Program . isCompleted == 0 && ( currentSecond - start ) < Program . timeout ) { if ( currentSecond < DateTime . Now . Millisecond ) { currentSecond = DateTime . Now . Millisecond ; Console . Write ( \".\" ); } } Console . Write ( \"\\n\" ); if ( Program . isCompleted == 1 ) { Console . WriteLine ( \"Generating image\" ); strm = new MemoryStream ( Program . imgData ); bmp = new Bitmap ( strm ); bmp . Save ( Environment . GetFolderPath ( Environment . SpecialFolder . DesktopDirectory ) + \"\\\\dilbert.jpg\" , ImageFormat . Jpeg ); bmp . Dispose (); strm . Close (); wsDd . Dispose (); } } catch ( Exception ex ) { Console . Write ( ex . Message ); } } public static void DailyDilbertImageCompleted_Handler ( object sender , DailyDilbertImageCompletedEventArgs args ) { try { Program . imgData = args . Result ; Program . isCompleted = 1 ; } catch ( Exception ex ) { Console . Write ( ex . Message ); Program . isCompleted = 2 ; } } } }","title":"C# .NET 2.0 Web Service - Sync + Async"},{"location":"posts/DilbertSyncAsync/#synchronous-code","text":"using System ; using System.Collections.Generic ; using System.Text ; using System.Threading ; using System.IO ; using System.Drawing ; using System.Drawing.Imaging ; using DilbertADay.com.esynaps.www ; namespace DilbertADay { class Program { public static void Main ( string [] args ) { DailyDilbert wsDd ; Byte [] imageData ; MemoryStream strm ; Bitmap bmp ; try { wsDd = new DailyDilbert (); imageData = wsDd . DailyDilbertImage (); strm = new MemoryStream ( imageData ); bmp = new Bitmap ( strm ); bmp . Save ( Environment . GetFolderPath ( Environment . SpecialFolder . DesktopDirectory ) + \"\\\\dilbert.jpg\" , ImageFormat . Jpeg ); bmp . Dispose (); strm . Close (); wsDd . Dispose (); } catch ( Exception ex ) { Console . Write ( ex . Message ); } } } }","title":"Synchronous Code"},{"location":"posts/DilbertSyncAsync/#asynchronous-code","text":"using System ; using System.Collections.Generic ; using System.Text ; using System.Threading ; using System.IO ; using System.Drawing ; using System.Drawing.Imaging ; using DilbertADay.com.esynaps.www ; namespace DilbertADay { class Program { public static int isCompleted = 0 ; public static Byte [] imgData ; public static int timeout = 10000 ; public static void Main ( string [] args ) { DailyDilbert wsDd ; MemoryStream strm ; Bitmap bmp ; int start , currentSecond ; try { wsDd = new DailyDilbert (); wsDd . DailyDilbertImageCompleted += new DailyDilbertImageCompletedEventHandler ( Program . DailyDilbertImageCompleted_Handler ); wsDd . DailyDilbertImageAsync (); start = DateTime . Now . Millisecond ; currentSecond = start ; Console . WriteLine ( \"Sending request\" ); while ( Program . isCompleted == 0 && ( currentSecond - start ) < Program . timeout ) { if ( currentSecond < DateTime . Now . Millisecond ) { currentSecond = DateTime . Now . Millisecond ; Console . Write ( \".\" ); } } Console . Write ( \"\\n\" ); if ( Program . isCompleted == 1 ) { Console . WriteLine ( \"Generating image\" ); strm = new MemoryStream ( Program . imgData ); bmp = new Bitmap ( strm ); bmp . Save ( Environment . GetFolderPath ( Environment . SpecialFolder . DesktopDirectory ) + \"\\\\dilbert.jpg\" , ImageFormat . Jpeg ); bmp . Dispose (); strm . Close (); wsDd . Dispose (); } } catch ( Exception ex ) { Console . Write ( ex . Message ); } } public static void DailyDilbertImageCompleted_Handler ( object sender , DailyDilbertImageCompletedEventArgs args ) { try { Program . imgData = args . Result ; Program . isCompleted = 1 ; } catch ( Exception ex ) { Console . Write ( ex . Message ); Program . isCompleted = 2 ; } } } }","title":"Asynchronous Code"},{"location":"posts/GetHtml/","tags":["FoxPro","WinHTTP"],"text":"Published: 2006-12-15 After experimenting with the West Wind Internet and Client Tools and then with my own version of a wininet.dll wrapper, I decided the easiest way was to use the WinHTTP service. I didn't even know it existed until I found it on Calvin Hsia's Weblog . Below is the main code of the application. Look at the links provided in the readme for more information on the oHTTP object instantiated in the code. Thisform.MousePointer = 11 Try Local oHTTP As \"winhttp.winhttprequest.5.1\" oHTTP=Newobject(\"winhttp.winhttprequest.5.1\") oHTTP.Open(\"GET\",Trim(Thisform.txtUrl.Value),.F.) oHTTP.Option(4) = 13056 && Ignore ssl errors && Lets look like IE oHTTP.SetRequestHeader(\"user-agent\", ; \"Mozilla/4.0 (compatible; MSIE 6.0; Windows ; NT 5.2; .NET CLR 1.0.3705;)\") oHTTP.Send() Thisform.txtHtml.Value = oHTTP.ResponseText Thisform.txtHeaders.Value = oHTTP.GetAllResponseHeaders Catch To ex Thisform.txtHtml.Value = ex.Message Finally Thisform.MousePointer = 0 Endtry","title":"GetHtml"},{"location":"posts/LblPrint/","tags":["FoxPro"],"text":"Published: 2008-03-13 Note The code for this program is not available. User enters a search term, then clicks the search button. The program connects to the Sql Server 2000 database, retrieves the data, and populates the data grid. The user then selects the record desired and the label preview is generated. On every record selection the preview is automatically generated. The user can then select a modifier by clicking on one of the radio buttons to the right of the preview container. On each change of the modifier the preview is automatically updated as well. When the label is ready, the user clicks the print button and the label is sent to the printer and the cursor is automatically placed in the search box. Prior to printing, the user can can select the desired printer and paper size using the Print Setup button. Being able to select or change printer settings is very important because some of the users use this application through a terminal server session. The label printer is attached to their local workstation and gets mapped from the terminal server back to their PC when they log on. Since the name of the printer is not known until after login, it would be difficult to hardcode the printer in the report file. Once the settings are changed, they are saved in the lbx file until the next time it needs to be updated. For more information on the reporting capabilities of VFP 9, please check out this great article: Techniques for an alternative Report Preview UI Also, take a look at the SYS(1037) function in the FoxPro help file.","title":"Label Printer (Showcase)"},{"location":"posts/MonitorFolderService/","tags":["PHP"],"text":"Published: 2009-10-16 At the office we use a RICOH Aficio 1045 Copier. One of the features of this copier is that it also doubles as a scanner. To scan a document an employee goes to the copier, puts the copier in scanner mode, selects their mailbox from a list and then scans the document. The scanner then sends the scanned information to the scanner software running on one of our servers where the actual file is created and placed in the user's virtual mailbox. (We use pdf as the default.) Each user's virtual mailbox has a folder associated with it, and this folder is located in each user's personal folder on the server. Most of our employees have workstations and their \"My Documents\" folder is mapped to their personal folder on the server. By the time they get back to their desk, all they have to do is go into their \"My Documents\" folder and the scanned document is already there. The problem is with notebook users who don't have a mapped \"My Documents\". If it were mapped, they would not be able to take their documents with them whenever they left the office. So, how can notebook users also retrieve their scanned documents from their \"My Documents\" folder? Basically, all that is needed is some kind of mechanism to monitor a user's virtual mailbox, and when a new file is placed there, copy it down to the user's \"My Documents\" folder on the notebook. PHP Solution: Install PHP on your server/workstation that will be used to run this. (Google \"PHP Install\" for more info...) Php doesn't have a built in way of creating Windows services, hence the \"almost\" in the title. So you can use two nice utilities called INSTSRV.EXE and SRVANY.EXE that come with the Windows Resource Kit. You can download it from here: Windows 2003 Resource Kit Tools Once you've installed the kit you can use something similar to the following to install the service. C:\\Program Files\\Windows Resource Kits\\Tools>instsrv scansmon \"d:\\Program Files\\Windows Resource Kits\\Tools\\srvany.exe\" SRVANY does all the work and Windows sees it as the service. SRVANY will look in the registry for the EXE file to use for the service. The EXE name, the starting directory, and any optional parameters should be in the registry as follows: [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\ Services\\scansmon\\Parameters] \"AppDirectory\"=\"D:\\\\Scripts\\\\Scansmon\" \"Application\"=\"php -q D:\\\\Scripts\\\\Scansmon\\\\scansmon.php3\" \"AppParameters\"=\"\" NOTE: You can copy/paste the lines above to a file named scansmon.reg (change the paths as necessary and make sure to include the double back-slashes) and double click the .reg file to add these entries to the registry. Php itself is the EXE that it runs. scansmon.php3 has the following code in it. (you will need to modify it for your network) <?php set_time_limit ( 0 ); $user_a_user_directory = '\\\\\\\\Server01\\\\user\\\\user_a\\\\ScansIn\\\\' ; $user_a_notebook_scans_directory = '\\\\\\\\user_a_notebook\\\\c$\\\\Documents and Settings\\\\user_a\\\\My Documents\\\\Scans\\\\' ; $user_b_user_directory = '\\\\\\\\Server01\\\\user\\\\user_b\\\\ScansIn\\\\' ; $user_b_notebook_scans_directory = '\\\\\\\\user_b_notebook\\\\c$\\\\Documents and Settings\\\\user_a\\\\My Documents\\\\Scans\\\\' ; $loop = true ; while ( $loop ){ //Will run as a windows service so loop infinitely $log_file = date ( \"Ymd\" ) . \".txt\" ; writetolog ( \"****************\" , $log_file ); try { if ( file_exists ( $user_a_user_directory ) && file_exists ( $user_a_notebook_scans_directory )){ writetolog ( \"Ready to proceed with user_a scans...\" , $log_file ); $oldfile = \"\" ; $newfile = \"\" ; if ( $dir = opendir ( $user_a_user_directory )){ while ( $file = readdir ( $dir )){ //As long as there are files copy them and write to log $oldfile = $user_a_user_directory . $file ; if ( is_file ( $oldfile )){ //&& substr($file, -4) == '.pdf' $newfile = $user_a_notebook_scans_directory . $file ; writetolog ( \"copying $file \" , $log_file ); if ( ! copy ( $oldfile , $newfile )){ writetolog ( \"failed to copy $oldfile ...\" , $log_file ); } else { unlink ( $oldfile ); writetolog ( \"deleted $oldfile ...\" , $log_file ); } } } closedir ( $dir ); } } else { writetolog ( \"Can't do user_a scans...\" , $log_file ); } if ( file_exists ( $user_b_user_directory ) && file_exists ( $user_b_notebook_scans_directory )){ writetolog ( \"Ready to proceed we user_b scans...\" , $log_file ); $oldfile = \"\" ; $newfile = \"\" ; if ( $dir = opendir ( $user_b_user_directory )){ while ( $file = readdir ( $dir )){ $oldfile = $user_b_user_directory . $file ; if ( is_file ( $oldfile )){ //&& substr($file, -4) == '.pdf' $newfile = $user_b_notebook_scans_directory . $file ; writetolog ( \"copying $file \" , $log_file ); if ( ! copy ( $oldfile , $newfile )){ writetolog ( \"failed to copy $oldfile ...\" , $log_file ); } else { unlink ( $oldfile ); writetolog ( \"deleted $oldfile ...\" , $log_file ); } } } closedir ( $dir ); } } else { writetolog ( \"Can't do user_b scans...\" , $log_file ); } writetolog ( \"Waiting for 180 seconds...\" , $log_file ); Sleep ( 180 ); //Wait three minutes before next check } catch ( Exception $e ){ $loop = false ; writetolog ( $e -> getMessage (), $log_file ); } } function writetolog ( $text , $file ) { $log_directory = 'D:\\\\Logs\\\\Scripts\\\\' ; $log_file = $log_directory . $file ; $fh = fopen ( $log_file , 'a' ); fwrite ( $fh , date ( \"h:i:s A\" ) . \" $text \" . chr ( 13 ) . chr ( 10 )); fclose ( $fh ); } ?>","title":"Monitor Folder With PHP"},{"location":"posts/OpenVPNDNS/","tags":["OpenVPN","Linux"],"text":"Published: 2022-09-03 With the OpenVPN terminal client... If your .ovpn config file does not include the UP and DOWN scripts to interact with Systemd, your DNS resolution into the VPN network may not work correctly. One would think that adding the option dhcp-option DOMAIN <yourdomain.com> to the config file is enough to query the VPN's DNS server(s) for the specified domain, but unfortunataly that is not the case. Before adding scripts to the config file, ensure the package is installed: sudo apt search openvpn-systemd-resolved should look something like: Domains that need to be queried on the VPN's DNS servers can be pushed, but you can also add them manually. # these domains need to resolve with the vpn dns server dhcp-option DOMAIN <domain> # tell systemd-resolved to update for the above script-security 2 setenv PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin up /etc/openvpn/update-systemd-resolved up-restart down /etc/openvpn/update-systemd-resolved down-pre After successful connection to the VPN server, you can check DNS resolution by running `resolvectl status'. It will show which servers are used for which domains. force dns to vpn dns servers #force dns to vpn dns servers dhcp-option DOMAIN-ROUTE . dhcp-option DNS <vpn dns server ip> dhcp-option DNS 10.0.0.1 #may be needed in some cases to force all traffic as well redirect-gateway def1 bypass-dhcp Useful Links openvpn-dhcp-option-dns-not-working update-systemd-resolved systemd-resolved-not-querying-dns-server-set-by-openvpn","title":"Make OpenVPN DNS Work"},{"location":"posts/OpenVPNDNS/#useful-links","text":"openvpn-dhcp-option-dns-not-working update-systemd-resolved systemd-resolved-not-querying-dns-server-set-by-openvpn","title":"Useful Links"},{"location":"posts/PHPFtpBackupTool/","tags":["PHP"],"text":"Published: 2007-10-23 Git Repository UPDATE 2019-11-07: Tool used for work many years ago. At that time there weren't many good options to small companies for off-site backups. This tool allowed our critical files to be automatically sent off-site on a nightly basis. Things have come a long way since then! Here is an example of how to use this library: <?php require_once ( 'Iat/Ftp/Backup.php' ); $ftpBu = new Iat_Ftp_Backup (); $ftpBu -> logFileFullName = 'c:\\\\documents and settings\\\\user\\\\desktop\\\\phpftpbackup\\\\' . date ( 'Ymd' ) . '.txt' ; $ftpBu -> ftpServer = 'ftp.serveraddress.com' ; $ftpBu -> ftpPort = 21 ; $ftpBu -> ftpUserName = 'username' ; $ftpBu -> ftpUserPass = 'password' ; $ftpBu -> ftpUsePasv = true ; $ftpBu -> ftpUseSSL = true ; $ftpBu -> logEnabled = true ; $ftpBu -> logToScreen = true ; $ftpBu -> dataPreviewOnly = true ; $ftpBu -> remoteDirFullName = '/dbs/' ; $ftpBu -> localDirFullName = '\\\\\\\\server\\\\backups\\\\' ; $ftpBu -> runBackup (); ?>","title":"PHP Ftp Backup Library"},{"location":"posts/PHPImageMailer/","tags":["PHP"],"text":"Published: 2009-04-03 Git Repository Small utility to easily email photos with Microsoft Outlook. Basically, it allows you to embed images in the body of the email message, so it's easier for the recipient to view the files. To use the program, simply highlight the photos you wish to send, then right-click one of the highlighted images and select \"Send-To\" then \"Image Mailer for Outlook\". Image Mailer will resize the images to an appropriate size for e-mailing and then automatically create the e-mail for you with the images embedded in the body of the message. If you wish to change settings, like how large the image is when it's in the body of the message, you can use the settings editor included. Click on Start --> All Programs --> Deciacco.com --> Image Mailer, and then Settings. There are three basic settings to choose from. The best settings for most people will be selected by default, but you may choose something to better fit your needs.","title":"Image Mailer"},{"location":"posts/PHPImageResizer/","tags":["PHP"],"text":"Published: 2008-04-03 Git Repository Small utility to quickly and easily resize images. Written in PHP, and while PHP is mostly a \"Web\" language, it actually worked out quite nicely. You simply right-click an image or a folder containing images and select the appropriate command. Currently, the program supports JPEG, GIF, and PNG images. The original image remains intact as a new, resized version is created. Installing You can simply download the installer and run it on your computer. After the install, you will have an Image Resizer folder in your Start Menu as well as some new context menu (right-click) entries. Launching To start the program simply right-click on an image file and select \"Resize Image\". If you want to resize multiple files, right-click on the folder containing the images and select \"Run Image Resizer On\". Program Settings When you launch Image Resizer, it needs some information from you. You can specify this information in one of two ways: First, you can run it in interactive mode, where it will require you to input the settings every time. This is good when you require different image sizes often. Second, you can run Image Resizer in silent mode where you predefine the settings in the settings file. (The settings file is located in the program directory and shortcut to it is created in the program group in the Start Menu.) This is especially useful if you use Image Resizer to resize images before you send them in an email. Below are the required entries: Target Size The maximum height or width in pixels the re-sized image can be. The aspect ratio will not change, therefore whichever side of the image is the longest will need to be the side to fit within the target size. Resized Image Postfix Something to append to the end of the re-sized file's name. Example: By taking the default value of \"_resized\", the image \"silvesterkitty.jpg\" will be copied and resized to \"silvesterkitty_resized.jpg\". Quality The quality of the resized image. The higher the quality means the less atifacting will occure on the image and the final result is a more crisp looking image at the cost of higher file size. *Note: To run image resizer in Silent mode, open the settings file and set \"Silent\" equal to 1. **Note: Image Resizer always reads the values from the settings file, whether in interactive or silent mode. If in interactive mode, the values from the settings are used as the defaults. Uninstalling To uninstall, use the Windows uninstall utility from the control panel. All files, shortcuts, and registry entries are removed. Revision History 0.1.3 - 03/03/2009 added the ability to run on a single file or by selecting multiple files removed the ability to drag and drop; not needed as right-click is sufficient removed the launch icon from the start menu renamed the ini file shortcut in the program group to make more sense added documentation to the settings file fixed bug in installer when installing on Vista 32bit that caused the wrong registry entry to be installed which in turn caused the program to not lauch from the context menu 0.1.2 - 02/16/2009 added installer changed the resizing algorithm no longer uses width and height, but uses a target size 0.1.1 - 04/03/2008 cleaned up the registry entry to launch the php file itself instead of cmd.exe the \"Run Image Resizer On\" context menu extension does not show when right-clicking the Recycle Bin","title":"Image Resizer"},{"location":"posts/PHPOpenSSL/","tags":["PHP","OpenSSL","C","Programming"],"text":"Published: 2007-10-12 For quite some time I've been wanting to compile PHP for the sole purpose of using the http://us.php.net/ftp_ssl_connect function. According to the PHP manual: ftp_ssl_connect() is only available if OpenSSL support is enabled into your version of PHP. If it's undefined and you've compiled FTP support then this is why. For Windows you must compile your own PHP binaries to support this function. When I first saw this I was disappointed. I thought I would never be able to compile PHP myself. It just felt like a daunting task to get my system configured correctly. ...Well, it's not perfect, but I have been able to get it to work, and I've even been able to patch up the PHP code itself! PART 1 - COMPILING PHP UPDATE: 2010-05-27 - Please see this link for compiling on http://wiki.php.net/internals/windows/stepbystepbuild Install Visual C++ 6 (Visual C++ Express OR Visual Studio 2005 are OK too) Luckily I already had a copy of C++ 6 left over from my college days. Only problem I had was to find the cd. With some minor changes this will also work for VC++ Express/Visual Studio 2005. I chose to use version 6 because using the newer versions requires you distribute other files along with PHP. If all you have is VCE or VS2k5 go ahead and work with that, I will show you where the differences are. Download PHP 5.2 Source The sources from the PHP snapshots worked for me. I downloaded php-5.2-dev (tar.gz) (8.9M) at the time of this writing. Link to the snapshots page: http://snaps.php.net/ Download Needed Libraries From what I've been able to find, Edin Kadriba\u0161ic seems to have a nice zip file with everything in it. I downloaded zip.zip from his site. Link to Edin's files: http://files.edin.dk/ You need to go into subfolder /php/win32 and click on zip.zip . (If this link is down try this one: http://perisama.net/ ) Create a Working Directory I did the following: Created directory c:\\work\\ Extracted source to c:\\work\\php5\\ Extracted php_build from zip.zip to c:\\work\\php_build\\ This is what it looked like after this step: c:\\work |---php5 |---php_build Set Environment Variables Version 6: I added these lines to C:\\Program Files\\Microsoft Visual Studio\\VC98\\Bin\\vcvars32.bat . set PATH=%PATH%;C:\\work\\php_build\\bin; set BISON_SIMPLE=C:\\work\\php_build\\bin\\bison.simple %SystemRoot%\\system32\\cmd.exe <-- Makes things a little easier, but it's not required. Versions > 6: Add the first two lines above to C:\\Program Files\\Microsoft Visual Studio 8\\Common7\\Tools\\vsvars32.bat . I put them under the line starting @set LIBPATH=C:\\WINDOWS\\Microsoft.NET. Open Up a Command Prompt Version 6: I created a shortcut to the vcvars32.bat file and whenever I needed to get into the development environment with the proper variables set, I simply double clicked it to launch a command window. (That is what the third line above is for.) Versions > 6: There should be a shortcut created with your install. For Visual Studio 2005 there is shortcut named Visual Studio 2005 Command Prompt. Switch to the PHP Source Directory Basically, this command at the prompt assuming you have the same directory structure: cd /d c:\\work\\php5 Run Buildconf This command at the prompt: C:\\work\\php5>buildconf Run Configure.js PHP configuration line. More information http://us2.php.net/configure This command at the prompt: C:\\work\\php5> cscript /nologo configure.js --with-openssl Run nmake This command at the prompt: C:\\work\\php5> nmake This part takes a little while depending on the speed of your pc. At the end of the process I got a build complete message. Something that I wasn't sure about here, were all the warnings that were generated during the compile. Most of them were about type conversion and possible loss of data. I would think that these need to be fixed or maybe there is a compiler switch to turn them off. Since PHP worked anyway, I ignored them and continued... Update: 10/30/2007 - Apparently these warnings are ok. Dreaming of Dawn PART 2 - PATCHING PHP After compiling PHP I was able to use the ftp_ssl_connect() function without getting that awful function undefined message. I set out to use my new function and custom built PHP, only to discover that there was yet another problem... It is important to note that all of the testing was done with Serv-U FTP Server . I don't know if this error would occur with other servers. Here is the piece of code I've been using for my initial testing. Keep in mind that this was code ran from the command line: <?php $ftp_server = 'server.onlan.local' ; $ftp_user_name = 'username' ; $ftp_user_pass = 'password' ; // set up basic ssl connection $conn_id = ftp_ssl_connect ( $ftp_server , 2222 , 5 ); if ( $conn_id ) { $login_result = ftp_login ( $conn_id , $ftp_user_name , $ftp_user_pass ); if ( $login_result ){ echo 'ok\\n' ; ftp_pasv ( $conn_id , true ); $buff = ftp_rawlist ( $conn_id , '.' ); print_r ( $buff ); } else echo 'error\\n' ; ftp_close ( $conn_id ); } else { echo 'no workie\\n' ; } ?> When I ran this code with PHP after the initial compile it executed with the fallowing output: PHP Warning: ftp_login(): SSL/TLS handshake failed in C:\\Documents and Settings\\user\\Desktop\\php_with_ftp_ssl_connect\\ftpssltest.php on line 11 PHP Warning: ftp_login(): AUTH command OK. Initializing SSL connection. in C:\\Documents and Settings\\user\\Desktop\\php_with_ftp_ssl_connect\\ftpssltest.php on line 11 It connected to the server with ftp_ssl_connect() , but then failed when it was time to authenticate with ftp_login() . Below is a portion of the FTP server log with this session. [6] Thu 11Oct07 08:14:29 - (000125) 234 AUTH command OK. Initializing SSL connection. [7] Thu 11Oct07 08:14:29 - Sock ID=595 setsockopt(260,IPPROTO_TCP,TCP_NODELAY,0x010AD03C,4) --> 0 (OK) [7] Thu 11Oct07 08:14:29 - Sock ID=595 RB_READ Stat=OK [7] Thu 11Oct07 08:14:29 - Sock ID=595 RB_WRITE Stat=OK [7] Thu 11Oct07 08:14:29 - Sock ID=595 send(260,0x00A58118,51,0) --> 51 (OK) [7] Thu 11Oct07 08:14:29 - Sock ID=595 RB_READ Stat=OK [7] Thu 11Oct07 08:14:29 - Sock ID=595 SSL_set_accept_state(0x012091B0) [7] Thu 11Oct07 08:14:29 - Sock ID=595 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 08:14:30 - Sock ID=595 FD_READ Stat=OK [7] Thu 11Oct07 08:14:30 - Sock ID=595 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 08:14:30 - Sock ID=595 FD_READ Stat=OK [7] Thu 11Oct07 08:14:30 - Sock ID=595 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_SSL - wrong version number) [7] Thu 11Oct07 08:14:30 - Sock ID=595 FD_READ Stat=OK [7] Thu 11Oct07 08:14:30 - Sock ID=595 SSL_set_accept_state(0x012091B0) [7] Thu 11Oct07 08:14:30 - Sock ID=595 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_SSL - internal error) [5] Thu 11Oct07 08:14:30 - Unable to establish SSL connection (internal error) [6] Thu 11Oct07 08:14:30 - (000125) 431 Unable to negotiate secure command connection. As you can see it failed with SSL_ERROR_SSL - wrong version number . I still don't know what this means, but searching online ultimately lead me to the PHP bugs site. There I did a search for ftp_ssl_connect() and found two interesting bugs: http://bugs.php.net/bug.php?id=36103 #36103 http://bugs.php.net/bug.php?id=41021 #41021 In bug #36103 there is a link to a patch by tony2001 that looked promising. I opened up c:\\Work\\php5\\ext\\ftp\\ftp.c . Right after the opening bracket of the ftp_login() function I replaced these lines of code: #if HAVE_OPENSSL_EXT SSL_CTX * ctx = NULL ; #endif with these lines: #if HAVE_OPENSSL_EXT int errcode ; SSL_CTX * ctx = NULL ; #endif Then, in the same function, I replaced these lines of code: if ( SSL_connect ( ftp -> ssl_handle ) <= 0 ) { php_error_docref ( NULL TSRMLS_CC , E_WARNING , ' SSL / TLS handshake failed ' ); SSL_shutdown ( ftp -> ssl_handle ); return 0 ; } with these lines of code: do { errcode = SSL_connect ( ftp -> ssl_handle ); switch ( SSL_get_error ( ftp -> ssl_handle , errcode )) { case SSL_ERROR_NONE : errcode = 1 ; break ; case SSL_ERROR_WANT_WRITE : case SSL_ERROR_WANT_READ : case SSL_ERROR_WANT_X509_LOOKUP : errcode = 0 ; break ; default : /* true error happened */ php_error_docref ( NULL TSRMLS_CC , E_WARNING , ' SSL / TLS handshake failed ' ); SSL_shutdown ( ftp -> ssl_handle ); return 0 ; break ; } } while ( errcode == 0 && ! SSL_is_init_finished ( ftp -> ssl_handle )); I recompiled and executed the same code with the patched PHP and I was able to get a little further. Here is the FTP server log with this patch in effect: [6] Thu 11Oct07 09:22:54 - (000126) 234 AUTH command OK. Initializing SSL connection. [7] Thu 11Oct07 09:22:54 - Sock ID=596 setsockopt(260,IPPROTO_TCP,TCP_NODELAY,0x010AD03C,4) --> 0 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 send(260,0x00A58118,51,0) --> 51 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_set_accept_state(0x012091B0) [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_accept(0x012091B0) --> 1 (OK - not reused, TLSv1/SSLv3, AES128-SHA (128 bits)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 8 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [2] Thu 11Oct07 09:22:54 - (000126) PBSZ 0 [6] Thu 11Oct07 09:22:54 - (000126) 200 PBSZ command OK. Protection buffer size set to 0. [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,55) --> 55 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 8 (OK) [2] Thu 11Oct07 09:22:54 - (000126) PROT P [6] Thu 11Oct07 09:22:54 - (000126) 200 PROT command OK. Using private data connection. [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,53) --> 53 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 16 (OK) [2] Thu 11Oct07 09:22:54 - (000126) USER username [6] Thu 11Oct07 09:22:54 - (000126) 331 User name okay, need password. [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,36) --> 36 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 19 (OK) [2] Thu 11Oct07 09:22:54 - (000126) PASS xxxxx [5] Thu 11Oct07 09:22:54 - (000126) User USERNAME logged in [6] Thu 11Oct07 09:22:54 - (000126) 230 User logged in, proceed. [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,30) --> 30 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 6 (OK) [2] Thu 11Oct07 09:22:54 - (000126) PASV [6] Thu 11Oct07 09:22:54 - (000126) 227 Entering Passive Mode (192,168,0,3,120,183) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,49) --> 49 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 8 (OK) [2] Thu 11Oct07 09:22:54 - (000126) TYPE A [6] Thu 11Oct07 09:22:54 - (000126) 200 Type set to A. [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,20) --> 20 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=597 FD_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 8 (OK) [2] Thu 11Oct07 09:22:54 - (000126) LIST . [7] Thu 11Oct07 09:23:18 - Sock ID=597 getpeername(548,0x010AAB70,0x010AAB88) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 inet_ntoa() --> 192.168.0.116 [6] Thu 11Oct07 09:23:18 - (000126) 150 Opening ASCII mode data connection for /bin/ls. [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_OOBINLINE,0x010AB454,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_KEEPALIVE,0x010AB444,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,IPPROTO_TCP,TCP_NODELAY,0x010AB434,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_SNDBUF,0x010AB428,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_RCVBUF,0x010AB418,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,IPPROTO_TCP,TCP_NODELAY,0x010AAB48,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 SSL_set_accept_state(0x0124FA70) [7] Thu 11Oct07 09:23:18 - Sock ID=597 SSL_accept(0x0124FA70) --> 0 (SSL_ERROR_SYSCALL - (null)) [7] Thu 11Oct07 09:23:18 - Sock ID=597 SSL_free(0x0124FA70) [7] Thu 11Oct07 09:23:18 - Sock ID=597 WSAAsyncSelect(548,65662,0,<>) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_LINGER,0x010A8AF0,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 shutdown(548,0) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 shutdown(548,1) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 closesocket(548) --> 0 (OK) [6] Thu 11Oct07 09:23:18 - (000126) 522 SSL/TLS lib refuses to initiate secure data connection. As you can see, this time the SSL connection was initialized, the private data connection was opened, the user was successfully authenticated, Pasv mode was set, and the command LIST to get a directory listing was sent. Unfortunately, that is where the script failed. At this point I wasn't sure what to do, but I decided I'd give ftp.c another look just in case I had missed something. I started at the top of the file and worked my way down. At first it didn't occur to me, but then I realized that the ftp_login() function might not be the only place where this patch was needed. Sure enough, towards the bottom of the file, I found another function: data_accept() . This made perfect sense, since after the LIST command is sent to the ftp server the actual information is sent through the data channel which is handled by this function. In the data_accept() function I replaced this code: #if HAVE_OPENSSL_EXT SSL_CTX * ctx ; #endif with this code: #if HAVE_OPENSSL_EXT int errcode ; SSL_CTX * ctx ; #endif Then, in the same function, I replaced this code: if ( SSL_connect ( data -> ssl_handle ) <= 0 ) { php_error_docref ( NULL TSRMLS_CC , E_WARNING , ' data_accept : SSL / TLS handshake failed ' ); SSL_shutdown ( data -> ssl_handle ); return 0 ; } with these lines of code: (Please note that it is slightly different than the previous patch.) do { errcode = SSL_connect ( data -> ssl_handle ); switch ( SSL_get_error ( data -> ssl_handle , errcode )) { case SSL_ERROR_NONE : errcode = 1 ; break ; case SSL_ERROR_WANT_WRITE : case SSL_ERROR_WANT_READ : case SSL_ERROR_WANT_X509_LOOKUP : errcode = 0 ; break ; default : // true error happened php_error_docref ( NULL TSRMLS_CC , E_WARNING , ' data_accept : SSL / TLS handshake failed ' ); SSL_shutdown ( data -> ssl_handle ); return 0 ; break ; } } while ( errcode == 0 && ! SSL_is_init_finished ( data -> ssl_handle )); After this last patch, I once again recompiled the source and ran the script. This time everything worked as expected, but after some testing I found another issue. Every few directory listings that I pulled down, the connection to the server would be lost. After further investigation I discovered that the cause of this was long directory listings in PASV mode. Every time I pulled a directory listing with more than approximately 5 to 10 files or folders everything was fine, but as soon as the listing contained more than that the connection would unexpectedly close. Start Update: 10/30/2007 I again set out to find the problem. Since this only happened when the directory listing was long, I knew it had something to do with data not fitting inside a container. I started looking for areas in the code where this would be the case, and the first one that I found that made sense to me was this line of code: data = ecalloc(1, sizeof( data)); in the ftp_getdata() function located in the ftp.c file. data is of type databuf_t which is defined in the ftp.h file. I changed the size of this buffer to twice the size from 4096 to 8192. (I was surprised to find out that there was a comment in the code that stated this buffer size should be editable at runtime.) After I recompiled, the error was gone and everything seemed to work normally. After further testing I discovered that I didn't need to have the buffer be twice the size, but simply one byte bigger. From 4096 to 4097. (This is very odd, and I'm sure there is a way to fix this in the code, but I just don't know where) After some testing I discovered that the above is wrong. Changing the buffer caused my SSL communication to break, but because the server was set to handle both ssl or non-ssl connections I did not notice it. I changed the buffer back to the original size of 4096, and I was able to trace the problem to something else: In the my_recv() function at added these lines of code at the beginning of the function: #if HAVE_OPENSSL_EXT int no_error ; #endif and replaced this line of code: nr_bytes = SSL_read ( ftp -> data -> ssl_handle , buf , len ); with these lines: no_error = 1 ; // there is no error do { nr_bytes = SSL_read ( ftp -> data -> ssl_handle , buf , len ); switch ( SSL_get_error ( ftp -> data -> ssl_handle , nr_bytes )) { case SSL_ERROR_NONE : case SSL_ERROR_ZERO_RETURN : case SSL_ERROR_WANT_WRITE : case SSL_ERROR_WANT_X509_LOOKUP : case SSL_ERROR_WANT_READ : break ; case SSL_ERROR_WANT_CONNECT : case SSL_ERROR_WANT_ACCEPT : case SSL_ERROR_SSL : case SSL_ERROR_SYSCALL : default : no_error = 0 ; //major error, get out break ; } } while ( nr_bytes < 0 && no_error ); After SSL_read() was executed I got -1 as the return. A call to SSL_get_error() returned SSL_ERROR_WANT_READ . From what I've been able to find online and the OpenSSL documentation, when this happens, you need to retry the SSL_read() function. After a few retries, the function succeeded and was able to get the data. (I've done some testing and this patch seems to be working reliably.) End Update: 10/30/2007 I ran a session with Ghisler's Total Commander which uses the same OpenSSL libraries to make a secure FTP connection, and the server logs looked almost identical to the log generated when connecting with PHP. Here are the main concerns I have: PHP Compile What other configuration lines do I really need to get a production ready PHP like what you get from the main PHP downloads site with OpenSSL support included? Is --with-openssl enough? Why do I get all those warnings when compiling PHP? Update: 10/30/2007 - Apparently these warnings are ok. Dreaming of Dawn PHP Patch Why hasn't Tony's patch made it into the official release? (Perhaps I can add mine as well...) Why are there several SSL_ERROR_WANT_READ errors? These show up in both the PHP and the Total Commander FTP logs. Update: 10/30/2007 - SSL_ERROR_WANT_READ is normal. It just means \"there is no data available yet.\" While changing the data buffer works, I wonder what other side effects it may have on functionality. Why is increasing it by one byte enough? Update: 10/30/2007 - Changing the data buffer breaks SSL communication.","title":"PHP, OpenSSL and ftp_ssl_connect() on Win32"},{"location":"posts/PHPOpenSSL/#part-1-compiling-php","text":"UPDATE: 2010-05-27 - Please see this link for compiling on http://wiki.php.net/internals/windows/stepbystepbuild","title":"PART 1 - COMPILING PHP"},{"location":"posts/PHPOpenSSL/#install-visual-c-6-visual-c-express-or-visual-studio-2005-are-ok-too","text":"Luckily I already had a copy of C++ 6 left over from my college days. Only problem I had was to find the cd. With some minor changes this will also work for VC++ Express/Visual Studio 2005. I chose to use version 6 because using the newer versions requires you distribute other files along with PHP. If all you have is VCE or VS2k5 go ahead and work with that, I will show you where the differences are.","title":"Install Visual C++ 6 (Visual C++ Express OR Visual Studio 2005 are OK too)"},{"location":"posts/PHPOpenSSL/#download-php-52-source","text":"The sources from the PHP snapshots worked for me. I downloaded php-5.2-dev (tar.gz) (8.9M) at the time of this writing. Link to the snapshots page: http://snaps.php.net/","title":"Download PHP 5.2 Source"},{"location":"posts/PHPOpenSSL/#download-needed-libraries","text":"From what I've been able to find, Edin Kadriba\u0161ic seems to have a nice zip file with everything in it. I downloaded zip.zip from his site. Link to Edin's files: http://files.edin.dk/ You need to go into subfolder /php/win32 and click on zip.zip . (If this link is down try this one: http://perisama.net/ )","title":"Download Needed Libraries"},{"location":"posts/PHPOpenSSL/#create-a-working-directory","text":"I did the following: Created directory c:\\work\\ Extracted source to c:\\work\\php5\\ Extracted php_build from zip.zip to c:\\work\\php_build\\ This is what it looked like after this step: c:\\work |---php5 |---php_build","title":"Create a Working Directory"},{"location":"posts/PHPOpenSSL/#set-environment-variables","text":"","title":"Set Environment Variables"},{"location":"posts/PHPOpenSSL/#version-6","text":"I added these lines to C:\\Program Files\\Microsoft Visual Studio\\VC98\\Bin\\vcvars32.bat . set PATH=%PATH%;C:\\work\\php_build\\bin; set BISON_SIMPLE=C:\\work\\php_build\\bin\\bison.simple %SystemRoot%\\system32\\cmd.exe <-- Makes things a little easier, but it's not required.","title":"Version 6:"},{"location":"posts/PHPOpenSSL/#versions-6","text":"Add the first two lines above to C:\\Program Files\\Microsoft Visual Studio 8\\Common7\\Tools\\vsvars32.bat . I put them under the line starting @set LIBPATH=C:\\WINDOWS\\Microsoft.NET.","title":"Versions &gt; 6:"},{"location":"posts/PHPOpenSSL/#open-up-a-command-prompt","text":"","title":"Open Up a Command Prompt"},{"location":"posts/PHPOpenSSL/#version-6_1","text":"I created a shortcut to the vcvars32.bat file and whenever I needed to get into the development environment with the proper variables set, I simply double clicked it to launch a command window. (That is what the third line above is for.)","title":"Version 6:"},{"location":"posts/PHPOpenSSL/#versions-6_1","text":"There should be a shortcut created with your install. For Visual Studio 2005 there is shortcut named Visual Studio 2005 Command Prompt.","title":"Versions &gt; 6:"},{"location":"posts/PHPOpenSSL/#switch-to-the-php-source-directory","text":"Basically, this command at the prompt assuming you have the same directory structure: cd /d c:\\work\\php5","title":"Switch to the PHP Source Directory"},{"location":"posts/PHPOpenSSL/#run-buildconf","text":"This command at the prompt: C:\\work\\php5>buildconf","title":"Run Buildconf"},{"location":"posts/PHPOpenSSL/#run-configurejs","text":"PHP configuration line. More information http://us2.php.net/configure This command at the prompt: C:\\work\\php5> cscript /nologo configure.js --with-openssl","title":"Run Configure.js"},{"location":"posts/PHPOpenSSL/#run-nmake","text":"This command at the prompt: C:\\work\\php5> nmake This part takes a little while depending on the speed of your pc. At the end of the process I got a build complete message. Something that I wasn't sure about here, were all the warnings that were generated during the compile. Most of them were about type conversion and possible loss of data. I would think that these need to be fixed or maybe there is a compiler switch to turn them off. Since PHP worked anyway, I ignored them and continued... Update: 10/30/2007 - Apparently these warnings are ok. Dreaming of Dawn","title":"Run nmake"},{"location":"posts/PHPOpenSSL/#part-2-patching-php","text":"After compiling PHP I was able to use the ftp_ssl_connect() function without getting that awful function undefined message. I set out to use my new function and custom built PHP, only to discover that there was yet another problem... It is important to note that all of the testing was done with Serv-U FTP Server . I don't know if this error would occur with other servers. Here is the piece of code I've been using for my initial testing. Keep in mind that this was code ran from the command line: <?php $ftp_server = 'server.onlan.local' ; $ftp_user_name = 'username' ; $ftp_user_pass = 'password' ; // set up basic ssl connection $conn_id = ftp_ssl_connect ( $ftp_server , 2222 , 5 ); if ( $conn_id ) { $login_result = ftp_login ( $conn_id , $ftp_user_name , $ftp_user_pass ); if ( $login_result ){ echo 'ok\\n' ; ftp_pasv ( $conn_id , true ); $buff = ftp_rawlist ( $conn_id , '.' ); print_r ( $buff ); } else echo 'error\\n' ; ftp_close ( $conn_id ); } else { echo 'no workie\\n' ; } ?> When I ran this code with PHP after the initial compile it executed with the fallowing output: PHP Warning: ftp_login(): SSL/TLS handshake failed in C:\\Documents and Settings\\user\\Desktop\\php_with_ftp_ssl_connect\\ftpssltest.php on line 11 PHP Warning: ftp_login(): AUTH command OK. Initializing SSL connection. in C:\\Documents and Settings\\user\\Desktop\\php_with_ftp_ssl_connect\\ftpssltest.php on line 11 It connected to the server with ftp_ssl_connect() , but then failed when it was time to authenticate with ftp_login() . Below is a portion of the FTP server log with this session. [6] Thu 11Oct07 08:14:29 - (000125) 234 AUTH command OK. Initializing SSL connection. [7] Thu 11Oct07 08:14:29 - Sock ID=595 setsockopt(260,IPPROTO_TCP,TCP_NODELAY,0x010AD03C,4) --> 0 (OK) [7] Thu 11Oct07 08:14:29 - Sock ID=595 RB_READ Stat=OK [7] Thu 11Oct07 08:14:29 - Sock ID=595 RB_WRITE Stat=OK [7] Thu 11Oct07 08:14:29 - Sock ID=595 send(260,0x00A58118,51,0) --> 51 (OK) [7] Thu 11Oct07 08:14:29 - Sock ID=595 RB_READ Stat=OK [7] Thu 11Oct07 08:14:29 - Sock ID=595 SSL_set_accept_state(0x012091B0) [7] Thu 11Oct07 08:14:29 - Sock ID=595 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 08:14:30 - Sock ID=595 FD_READ Stat=OK [7] Thu 11Oct07 08:14:30 - Sock ID=595 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 08:14:30 - Sock ID=595 FD_READ Stat=OK [7] Thu 11Oct07 08:14:30 - Sock ID=595 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_SSL - wrong version number) [7] Thu 11Oct07 08:14:30 - Sock ID=595 FD_READ Stat=OK [7] Thu 11Oct07 08:14:30 - Sock ID=595 SSL_set_accept_state(0x012091B0) [7] Thu 11Oct07 08:14:30 - Sock ID=595 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_SSL - internal error) [5] Thu 11Oct07 08:14:30 - Unable to establish SSL connection (internal error) [6] Thu 11Oct07 08:14:30 - (000125) 431 Unable to negotiate secure command connection. As you can see it failed with SSL_ERROR_SSL - wrong version number . I still don't know what this means, but searching online ultimately lead me to the PHP bugs site. There I did a search for ftp_ssl_connect() and found two interesting bugs: http://bugs.php.net/bug.php?id=36103 #36103 http://bugs.php.net/bug.php?id=41021 #41021 In bug #36103 there is a link to a patch by tony2001 that looked promising. I opened up c:\\Work\\php5\\ext\\ftp\\ftp.c . Right after the opening bracket of the ftp_login() function I replaced these lines of code: #if HAVE_OPENSSL_EXT SSL_CTX * ctx = NULL ; #endif with these lines: #if HAVE_OPENSSL_EXT int errcode ; SSL_CTX * ctx = NULL ; #endif Then, in the same function, I replaced these lines of code: if ( SSL_connect ( ftp -> ssl_handle ) <= 0 ) { php_error_docref ( NULL TSRMLS_CC , E_WARNING , ' SSL / TLS handshake failed ' ); SSL_shutdown ( ftp -> ssl_handle ); return 0 ; } with these lines of code: do { errcode = SSL_connect ( ftp -> ssl_handle ); switch ( SSL_get_error ( ftp -> ssl_handle , errcode )) { case SSL_ERROR_NONE : errcode = 1 ; break ; case SSL_ERROR_WANT_WRITE : case SSL_ERROR_WANT_READ : case SSL_ERROR_WANT_X509_LOOKUP : errcode = 0 ; break ; default : /* true error happened */ php_error_docref ( NULL TSRMLS_CC , E_WARNING , ' SSL / TLS handshake failed ' ); SSL_shutdown ( ftp -> ssl_handle ); return 0 ; break ; } } while ( errcode == 0 && ! SSL_is_init_finished ( ftp -> ssl_handle )); I recompiled and executed the same code with the patched PHP and I was able to get a little further. Here is the FTP server log with this patch in effect: [6] Thu 11Oct07 09:22:54 - (000126) 234 AUTH command OK. Initializing SSL connection. [7] Thu 11Oct07 09:22:54 - Sock ID=596 setsockopt(260,IPPROTO_TCP,TCP_NODELAY,0x010AD03C,4) --> 0 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 send(260,0x00A58118,51,0) --> 51 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_set_accept_state(0x012091B0) [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_accept(0x012091B0) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_accept(0x012091B0) --> 1 (OK - not reused, TLSv1/SSLv3, AES128-SHA (128 bits)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 8 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [2] Thu 11Oct07 09:22:54 - (000126) PBSZ 0 [6] Thu 11Oct07 09:22:54 - (000126) 200 PBSZ command OK. Protection buffer size set to 0. [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,55) --> 55 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 8 (OK) [2] Thu 11Oct07 09:22:54 - (000126) PROT P [6] Thu 11Oct07 09:22:54 - (000126) 200 PROT command OK. Using private data connection. [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,53) --> 53 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 16 (OK) [2] Thu 11Oct07 09:22:54 - (000126) USER username [6] Thu 11Oct07 09:22:54 - (000126) 331 User name okay, need password. [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,36) --> 36 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 19 (OK) [2] Thu 11Oct07 09:22:54 - (000126) PASS xxxxx [5] Thu 11Oct07 09:22:54 - (000126) User USERNAME logged in [6] Thu 11Oct07 09:22:54 - (000126) 230 User logged in, proceed. [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,30) --> 30 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 6 (OK) [2] Thu 11Oct07 09:22:54 - (000126) PASV [6] Thu 11Oct07 09:22:54 - (000126) 227 Entering Passive Mode (192,168,0,3,120,183) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,49) --> 49 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 8 (OK) [2] Thu 11Oct07 09:22:54 - (000126) TYPE A [6] Thu 11Oct07 09:22:54 - (000126) 200 Type set to A. [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> -1 (SSL_ERROR_WANT_READ - (null)) [7] Thu 11Oct07 09:22:54 - Sock ID=596 RB_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_write(0x012091B0,0x00A58118,20) --> 20 (OK) [7] Thu 11Oct07 09:22:54 - Sock ID=597 FD_WRITE Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 FD_READ Stat=OK [7] Thu 11Oct07 09:22:54 - Sock ID=596 SSL_read(0x012091B0,0x00B28D14,2048) --> 8 (OK) [2] Thu 11Oct07 09:22:54 - (000126) LIST . [7] Thu 11Oct07 09:23:18 - Sock ID=597 getpeername(548,0x010AAB70,0x010AAB88) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 inet_ntoa() --> 192.168.0.116 [6] Thu 11Oct07 09:23:18 - (000126) 150 Opening ASCII mode data connection for /bin/ls. [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_OOBINLINE,0x010AB454,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_KEEPALIVE,0x010AB444,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,IPPROTO_TCP,TCP_NODELAY,0x010AB434,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_SNDBUF,0x010AB428,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_RCVBUF,0x010AB418,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,IPPROTO_TCP,TCP_NODELAY,0x010AAB48,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 SSL_set_accept_state(0x0124FA70) [7] Thu 11Oct07 09:23:18 - Sock ID=597 SSL_accept(0x0124FA70) --> 0 (SSL_ERROR_SYSCALL - (null)) [7] Thu 11Oct07 09:23:18 - Sock ID=597 SSL_free(0x0124FA70) [7] Thu 11Oct07 09:23:18 - Sock ID=597 WSAAsyncSelect(548,65662,0,<>) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 setsockopt(548,SOL_SOCKET,SO_LINGER,0x010A8AF0,4) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 shutdown(548,0) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 shutdown(548,1) --> 0 (OK) [7] Thu 11Oct07 09:23:18 - Sock ID=597 closesocket(548) --> 0 (OK) [6] Thu 11Oct07 09:23:18 - (000126) 522 SSL/TLS lib refuses to initiate secure data connection. As you can see, this time the SSL connection was initialized, the private data connection was opened, the user was successfully authenticated, Pasv mode was set, and the command LIST to get a directory listing was sent. Unfortunately, that is where the script failed. At this point I wasn't sure what to do, but I decided I'd give ftp.c another look just in case I had missed something. I started at the top of the file and worked my way down. At first it didn't occur to me, but then I realized that the ftp_login() function might not be the only place where this patch was needed. Sure enough, towards the bottom of the file, I found another function: data_accept() . This made perfect sense, since after the LIST command is sent to the ftp server the actual information is sent through the data channel which is handled by this function. In the data_accept() function I replaced this code: #if HAVE_OPENSSL_EXT SSL_CTX * ctx ; #endif with this code: #if HAVE_OPENSSL_EXT int errcode ; SSL_CTX * ctx ; #endif Then, in the same function, I replaced this code: if ( SSL_connect ( data -> ssl_handle ) <= 0 ) { php_error_docref ( NULL TSRMLS_CC , E_WARNING , ' data_accept : SSL / TLS handshake failed ' ); SSL_shutdown ( data -> ssl_handle ); return 0 ; } with these lines of code: (Please note that it is slightly different than the previous patch.) do { errcode = SSL_connect ( data -> ssl_handle ); switch ( SSL_get_error ( data -> ssl_handle , errcode )) { case SSL_ERROR_NONE : errcode = 1 ; break ; case SSL_ERROR_WANT_WRITE : case SSL_ERROR_WANT_READ : case SSL_ERROR_WANT_X509_LOOKUP : errcode = 0 ; break ; default : // true error happened php_error_docref ( NULL TSRMLS_CC , E_WARNING , ' data_accept : SSL / TLS handshake failed ' ); SSL_shutdown ( data -> ssl_handle ); return 0 ; break ; } } while ( errcode == 0 && ! SSL_is_init_finished ( data -> ssl_handle )); After this last patch, I once again recompiled the source and ran the script. This time everything worked as expected, but after some testing I found another issue. Every few directory listings that I pulled down, the connection to the server would be lost. After further investigation I discovered that the cause of this was long directory listings in PASV mode. Every time I pulled a directory listing with more than approximately 5 to 10 files or folders everything was fine, but as soon as the listing contained more than that the connection would unexpectedly close. Start Update: 10/30/2007 I again set out to find the problem. Since this only happened when the directory listing was long, I knew it had something to do with data not fitting inside a container. I started looking for areas in the code where this would be the case, and the first one that I found that made sense to me was this line of code: data = ecalloc(1, sizeof( data)); in the ftp_getdata() function located in the ftp.c file. data is of type databuf_t which is defined in the ftp.h file. I changed the size of this buffer to twice the size from 4096 to 8192. (I was surprised to find out that there was a comment in the code that stated this buffer size should be editable at runtime.) After I recompiled, the error was gone and everything seemed to work normally. After further testing I discovered that I didn't need to have the buffer be twice the size, but simply one byte bigger. From 4096 to 4097. (This is very odd, and I'm sure there is a way to fix this in the code, but I just don't know where) After some testing I discovered that the above is wrong. Changing the buffer caused my SSL communication to break, but because the server was set to handle both ssl or non-ssl connections I did not notice it. I changed the buffer back to the original size of 4096, and I was able to trace the problem to something else: In the my_recv() function at added these lines of code at the beginning of the function: #if HAVE_OPENSSL_EXT int no_error ; #endif and replaced this line of code: nr_bytes = SSL_read ( ftp -> data -> ssl_handle , buf , len ); with these lines: no_error = 1 ; // there is no error do { nr_bytes = SSL_read ( ftp -> data -> ssl_handle , buf , len ); switch ( SSL_get_error ( ftp -> data -> ssl_handle , nr_bytes )) { case SSL_ERROR_NONE : case SSL_ERROR_ZERO_RETURN : case SSL_ERROR_WANT_WRITE : case SSL_ERROR_WANT_X509_LOOKUP : case SSL_ERROR_WANT_READ : break ; case SSL_ERROR_WANT_CONNECT : case SSL_ERROR_WANT_ACCEPT : case SSL_ERROR_SSL : case SSL_ERROR_SYSCALL : default : no_error = 0 ; //major error, get out break ; } } while ( nr_bytes < 0 && no_error ); After SSL_read() was executed I got -1 as the return. A call to SSL_get_error() returned SSL_ERROR_WANT_READ . From what I've been able to find online and the OpenSSL documentation, when this happens, you need to retry the SSL_read() function. After a few retries, the function succeeded and was able to get the data. (I've done some testing and this patch seems to be working reliably.) End Update: 10/30/2007 I ran a session with Ghisler's Total Commander which uses the same OpenSSL libraries to make a secure FTP connection, and the server logs looked almost identical to the log generated when connecting with PHP. Here are the main concerns I have:","title":"PART 2 - PATCHING PHP"},{"location":"posts/PHPOpenSSL/#php-compile","text":"What other configuration lines do I really need to get a production ready PHP like what you get from the main PHP downloads site with OpenSSL support included? Is --with-openssl enough? Why do I get all those warnings when compiling PHP? Update: 10/30/2007 - Apparently these warnings are ok. Dreaming of Dawn","title":"PHP Compile"},{"location":"posts/PHPOpenSSL/#php-patch","text":"Why hasn't Tony's patch made it into the official release? (Perhaps I can add mine as well...) Why are there several SSL_ERROR_WANT_READ errors? These show up in both the PHP and the Total Commander FTP logs. Update: 10/30/2007 - SSL_ERROR_WANT_READ is normal. It just means \"there is no data available yet.\" While changing the data buffer works, I wonder what other side effects it may have on functionality. Why is increasing it by one byte enough? Update: 10/30/2007 - Changing the data buffer breaks SSL communication.","title":"PHP Patch"},{"location":"posts/PollVote/","tags":["Python","OOP","Programming"],"text":"Published: 2020-11-15 Poll Voter is a \"Bot\" that automatically votes for a certain, user specified option on an online poll artificially changing the results. The original code is below with the refactored version in OOP. Poll Vote Code #!/usr/bin/env python3 # Load libraries import logging import random import datetime import os import sys import time import json import requests from torpy import TorClient from torpy.http.adapter import TorHttpAdapter from bs4 import BeautifulSoup as BeaSoup # Constants RETRIES = 3 OWNP = os . path . abspath ( os . path . dirname ( sys . argv [ 0 ])) LOGFILE = '/media/sf_data/scriptsout/vote/vote.txt' # Setup Logging logging . basicConfig ( format = ' %(asctime)s : %(levelname)s : %(message)s ' , level = logging . INFO , filename = LOGFILE ) # Storage for the useragent strings from file # facilitates picking at random useragents = [] # Make it look like a real browser headers = { \"Accept\" : \"text/html,application/xhtml+xml,application/xml; \\ q=0.9,image/webp,*/*;q=0.8\" , \"Accept-Encoding\" : \"gzip, deflate, br\" , \"Accept-Language\" : \"en-US,en;q=0.5\" , \"DNT\" : \"1\" , \"Host\" : \"\" , # set at runtime \"Upgrade-Insecure-Requests\" : \"1\" , \"User-Agent\" : \"\" , # set at runtime \"Cache-Control\" : \"max-age=0\" , \"Connection\" : \"keep-alive\" } poll_id = \"10614272\" # change for a different poll poll_winner = \"49167224\" # which item to vote for | 49167240, 49167239, 49167224 # Poll base url url_poll = ( \"https://poll.fm/\" + poll_id ) # Generated URL to be submited for vote url_template = ( \"https://poll.fm/vote?\" \"va= {item_va} \" \"&pt=0\" \"&r= {item_r} \" \"&p=\" + poll_id + \"&a=\" + poll_winner + \",\" \"&o=\" # nothing needed here \"&t= {item_t} \" \"&token= {item_token} \" \"&pz= {item_pz} \" ) # ***************************************************************************** # Helper Functions # ***************************************************************************** # Loads the user agents from file into the array def get_useragents (): logging . info ( \"Loading useragent strings\" ) with open ( OWNP + '/useragent.txt' , 'r' ) as f : for line in f : useragents . append ( line . rstrip ( ' \\n ' ) . rstrip ( ' \\r ' )) # ***************************************************************************** # Main Function # ***************************************************************************** def main (): getdata = True try : get_useragents () # Load user agents headers [ \"Host\" ] = \"poll.fm\" while getdata : # Loop until there is a problem tor = TorClient () # Let's use Tor, shall we.... with tor . get_guard () as guard : adapter = TorHttpAdapter ( guard , 3 , retries = RETRIES ) with requests . Session () as s : s . mount ( 'http://' , adapter ) s . mount ( 'https://' , adapter ) # Make it look like a different browser randomly # by changing the user-agent with every request line_no = random . randint ( 0 , len ( useragents ) - 1 ) cur_useragent = useragents [ line_no ] headers [ \"User-Agent\" ] = cur_useragent logging . info ( \"User-Agent set to: %s \" % cur_useragent ) # Go to poll main page to get the needed items # to submit for the vote logging . info ( \"Getting: %s \" % url_poll ) r = s . get ( url_poll , headers = headers ) logging . info ( \"First response: %s \" % r . status_code + \" \" + r . url ) r . raise_for_status () # Get the html from the web page bs_content = BeaSoup ( r . content , \"lxml\" ) # Get the info from the Vote button json object button_data = bs_content . find ( 'a' , class_ = \"vote-button css-vote-button pds-vote-button\" ) v_bdata = button_data . attrs . get ( 'data-vote' ) # Load as json data bdata = json . loads ( v_bdata ) # Get hidden form value v_pz = bs_content . find ( attrs = { \"name\" : \"pz\" }) # Inject data into vote URL template url_vote = url_template # reset url_vote url_vote = url_vote . replace ( \" {item_t} \" , str ( bdata [ 't' ])) url_vote = url_vote . replace ( \" {item_token} \" , str ( bdata [ 'n' ])) url_vote = url_vote . replace ( \" {item_pz} \" , str ( v_pz [ 'value' ])) url_vote = url_vote . replace ( \" {item_r} \" , str ( bdata [ 'b' ])) url_vote = url_vote . replace ( \" {item_va} \" , str ( bdata [ 'at' ])) # Makes it look slightly more authentic, by waiting # before actually submitting the vote after the # initial request to the poll. logging . info ( \"Waiting 2 seconds before submitting.\" ) time . sleep ( 2 ) # Let's vote! logging . info ( \"Getting: %s \" % url_vote ) r = s . get ( url_vote , headers = headers ) # Redirected response, log it if r . history : logging . info ( \"Request redirected\" ) for resp in r . history : logging . info ( \"Redirected response: %s \" % resp . status_code + \" \" + resp . url ) logging . info ( \"Final destination: %s \" % r . status_code + \" \" + r . url ) r . raise_for_status () # Wait a random number of seconds between 5 & 20 # before starting again - more realistic wait_time = random . randint ( 5 , 20 ) logging . info ( \"Waiting %i seconds.\" % ( wait_time )) time . sleep ( wait_time ) # Any issues, log them and get out. except Exception as e : logging . error ( e ) # Exit loop getdata = False # ***************************************************************************** # Script Starting Point # ***************************************************************************** if __name__ == \"__main__\" : main () Poll Vote Code (OOP) Main (vote.py) Main entry point/start of program #!/usr/bin/env python3 # Load libraries import logging from voting import PollFMVoter LOGFILE = '/media/sf_data/scriptsout/vote/vote.txt' # Setup Logging logging . basicConfig ( format = ' %(asctime)s : %(levelname)s : %(message)s ' , level = logging . INFO , filename = LOGFILE ) # ***************************************************************************** # Main Function # ***************************************************************************** def main (): myvtr = PollFMVoter () myvtr . poll_id = \"10614272\" myvtr . poll_option = \"49167239\" myvtr . getVotes () # ***************************************************************************** # Script Starting Point # ***************************************************************************** if __name__ == \"__main__\" : main () AutoVoter (voter.py) \"Generic\" Class to inherit from with common code. # Load libraries import logging import random import os import sys from abc import abstractmethod , abstractproperty # Constants OWNP = os . path . abspath ( os . path . dirname ( sys . argv [ 0 ])) logger = logging . getLogger ( __name__ ) class AutoVoter : def __init__ ( self ): self . _useragents = [] self . _url_poll = \"\" self . _url_template = \"\" # Make it look like a real browser self . _headers = { \"Accept\" : \"text/html,application/xhtml+xml,application/xml; \\ q=0.9,image/webp,*/*;q=0.8\" , \"Accept-Encoding\" : \"gzip, deflate, br\" , \"Accept-Language\" : \"en-US,en;q=0.5\" , \"DNT\" : \"1\" , \"Host\" : \"\" , # set at runtime \"Upgrade-Insecure-Requests\" : \"1\" , \"User-Agent\" : \"\" , # set at runtime \"Cache-Control\" : \"max-age=0\" , \"Connection\" : \"keep-alive\" } self . __get_useragents () # Loads a new, random user-agent string def _set_useragent ( self ): line_no = random . randint ( 0 , len ( self . _useragents ) - 1 ) logger . info ( \"User-agent set as: %s \" % self . _useragents [ line_no ]) self . _headers [ \"User-Agent\" ] = self . _useragents [ line_no ] # Loads the user agents from file into the array def __get_useragents ( self ): logger . info ( \"Loading useragent strings\" ) with open ( OWNP + '/voting/useragent.txt' , 'r' ) as f : for line in f : self . _useragents . append ( line . rstrip ( ' \\n ' ) . rstrip ( ' \\r ' )) @abstractmethod def __getVote ( self ): pass @abstractmethod def getVotes ( self ): pass PollFMVoter (pollfm.py) More specific class, inherits from AutoVoter and implements specifics. # Load libraries import logging import random import time import json import requests from torpy import TorClient from torpy.http.adapter import TorHttpAdapter from bs4 import BeautifulSoup as BeaSoup from voting.voter import AutoVoter logger = logging . getLogger ( __name__ ) class PollFMVoter ( AutoVoter ): def __init__ ( self ): super () . __init__ () self . _headers [ \"Host\" ] = \"poll.fm\" self . poll_id = \"\" self . poll_option = \"\" self . poll_votes = 0 self . __vote_pointer = 0 self . __retries = 3 self . __url_poll = \"https://poll.fm/ {poll_id} \" # Generated URL to be submited for vote self . __url_template = ( \"https://poll.fm/vote?\" \"va= {item_va} \" \"&pt=0\" \"&r= {item_r} \" \"&p= {item_pid} \" \"&a= {item_opt} ,\" \"&o=\" # nothing needed here \"&t= {item_t} \" \"&token= {item_token} \" \"&pz= {item_pz} \" ) def __getVote ( self ): try : self . __vote_pointer += 1 tor = TorClient () with tor . get_guard () as guard : adapter = TorHttpAdapter ( guard , 3 , retries = self . __retries ) with requests . Session () as s : s . mount ( 'http://' , adapter ) s . mount ( 'https://' , adapter ) # Make it look like a different browser randomly # by changing the user-agent with every request self . _set_useragent () # Set the poll id in the url self . __url_poll = self . __url_poll . replace ( \" {poll_id} \" , self . poll_id ) # Go to poll main page to get the needed items # to submit for the vote logger . info ( \"Getting: %s \" % self . __url_poll ) r = s . get ( self . __url_poll , headers = self . _headers ) logger . info ( \"First response: %s \" % r . status_code + \" \" + r . url ) r . raise_for_status () # Get the html from the web page bs_content = BeaSoup ( r . content , \"lxml\" ) # Get the info from the Vote button json object button_data = bs_content . find ( 'a' , class_ = \"vote-button css-vote-button pds-vote-button\" ) v_bdata = button_data . attrs . get ( 'data-vote' ) # Load as json data bdata = json . loads ( v_bdata ) # Get hidden form value v_pz = bs_content . find ( attrs = { \"name\" : \"pz\" }) # Inject data into vote URL template url_vote = self . __url_template # reset url_vote url_vote = url_vote . replace ( \" {item_pid} \" , self . poll_id ) url_vote = url_vote . replace ( \" {item_opt} \" , self . poll_option ) url_vote = url_vote . replace ( \" {item_t} \" , str ( bdata [ 't' ])) url_vote = url_vote . replace ( \" {item_token} \" , str ( bdata [ 'n' ])) url_vote = url_vote . replace ( \" {item_pz} \" , str ( v_pz [ 'value' ])) url_vote = url_vote . replace ( \" {item_r} \" , str ( bdata [ 'b' ])) url_vote = url_vote . replace ( \" {item_va} \" , str ( bdata [ 'at' ])) # Makes it look slightly more authentic, by waiting # before actually submitting the vote after the # initial request to the poll. logger . info ( \"Waiting 2 seconds before submitting.\" ) time . sleep ( 2 ) # Let's vote! logger . info ( \"Submitting vote %i : %s \" % ( self . __vote_pointer , url_vote )) r = s . get ( url_vote , headers = self . _headers ) # Redirected response, log it if r . history : logger . info ( \"Request redirected\" ) for resp in r . history : logger . info ( \"Redirected response: %s \" % resp . status_code + \" \" + resp . url ) logger . info ( \"Final destination: %s \" % r . status_code + \" \" + r . url ) r . raise_for_status () if ( self . __vote_pointer != self . poll_votes ): # Wait a random number of seconds between 5 & 20 # before starting again - more realistic wait_time = random . randint ( 5 , 20 ) logger . info ( \"Waiting %i seconds.\" % ( wait_time )) time . sleep ( wait_time ) # Any issues, log them and get out except Exception as e : logger . error ( e ) raise def getVotes ( self ): getdata = True self . __vote_pointer = 0 # No sense in doing anything without a poll id # and an option to vote for if ( self . poll_option != \"\" and self . poll_id != \"\" ): try : # If set to 0, run continuously if ( self . poll_votes == 0 ): while getdata : self . __getVote () else : for _ in range ( self . poll_votes ): self . __getVote () except Exception as e : logger . error ( e ) getdata = False else : logger . info ( \"Please set Poll ID & Option.\" )","title":"Poll Voter"},{"location":"posts/PollVote/#poll-vote-code","text":"#!/usr/bin/env python3 # Load libraries import logging import random import datetime import os import sys import time import json import requests from torpy import TorClient from torpy.http.adapter import TorHttpAdapter from bs4 import BeautifulSoup as BeaSoup # Constants RETRIES = 3 OWNP = os . path . abspath ( os . path . dirname ( sys . argv [ 0 ])) LOGFILE = '/media/sf_data/scriptsout/vote/vote.txt' # Setup Logging logging . basicConfig ( format = ' %(asctime)s : %(levelname)s : %(message)s ' , level = logging . INFO , filename = LOGFILE ) # Storage for the useragent strings from file # facilitates picking at random useragents = [] # Make it look like a real browser headers = { \"Accept\" : \"text/html,application/xhtml+xml,application/xml; \\ q=0.9,image/webp,*/*;q=0.8\" , \"Accept-Encoding\" : \"gzip, deflate, br\" , \"Accept-Language\" : \"en-US,en;q=0.5\" , \"DNT\" : \"1\" , \"Host\" : \"\" , # set at runtime \"Upgrade-Insecure-Requests\" : \"1\" , \"User-Agent\" : \"\" , # set at runtime \"Cache-Control\" : \"max-age=0\" , \"Connection\" : \"keep-alive\" } poll_id = \"10614272\" # change for a different poll poll_winner = \"49167224\" # which item to vote for | 49167240, 49167239, 49167224 # Poll base url url_poll = ( \"https://poll.fm/\" + poll_id ) # Generated URL to be submited for vote url_template = ( \"https://poll.fm/vote?\" \"va= {item_va} \" \"&pt=0\" \"&r= {item_r} \" \"&p=\" + poll_id + \"&a=\" + poll_winner + \",\" \"&o=\" # nothing needed here \"&t= {item_t} \" \"&token= {item_token} \" \"&pz= {item_pz} \" ) # ***************************************************************************** # Helper Functions # ***************************************************************************** # Loads the user agents from file into the array def get_useragents (): logging . info ( \"Loading useragent strings\" ) with open ( OWNP + '/useragent.txt' , 'r' ) as f : for line in f : useragents . append ( line . rstrip ( ' \\n ' ) . rstrip ( ' \\r ' )) # ***************************************************************************** # Main Function # ***************************************************************************** def main (): getdata = True try : get_useragents () # Load user agents headers [ \"Host\" ] = \"poll.fm\" while getdata : # Loop until there is a problem tor = TorClient () # Let's use Tor, shall we.... with tor . get_guard () as guard : adapter = TorHttpAdapter ( guard , 3 , retries = RETRIES ) with requests . Session () as s : s . mount ( 'http://' , adapter ) s . mount ( 'https://' , adapter ) # Make it look like a different browser randomly # by changing the user-agent with every request line_no = random . randint ( 0 , len ( useragents ) - 1 ) cur_useragent = useragents [ line_no ] headers [ \"User-Agent\" ] = cur_useragent logging . info ( \"User-Agent set to: %s \" % cur_useragent ) # Go to poll main page to get the needed items # to submit for the vote logging . info ( \"Getting: %s \" % url_poll ) r = s . get ( url_poll , headers = headers ) logging . info ( \"First response: %s \" % r . status_code + \" \" + r . url ) r . raise_for_status () # Get the html from the web page bs_content = BeaSoup ( r . content , \"lxml\" ) # Get the info from the Vote button json object button_data = bs_content . find ( 'a' , class_ = \"vote-button css-vote-button pds-vote-button\" ) v_bdata = button_data . attrs . get ( 'data-vote' ) # Load as json data bdata = json . loads ( v_bdata ) # Get hidden form value v_pz = bs_content . find ( attrs = { \"name\" : \"pz\" }) # Inject data into vote URL template url_vote = url_template # reset url_vote url_vote = url_vote . replace ( \" {item_t} \" , str ( bdata [ 't' ])) url_vote = url_vote . replace ( \" {item_token} \" , str ( bdata [ 'n' ])) url_vote = url_vote . replace ( \" {item_pz} \" , str ( v_pz [ 'value' ])) url_vote = url_vote . replace ( \" {item_r} \" , str ( bdata [ 'b' ])) url_vote = url_vote . replace ( \" {item_va} \" , str ( bdata [ 'at' ])) # Makes it look slightly more authentic, by waiting # before actually submitting the vote after the # initial request to the poll. logging . info ( \"Waiting 2 seconds before submitting.\" ) time . sleep ( 2 ) # Let's vote! logging . info ( \"Getting: %s \" % url_vote ) r = s . get ( url_vote , headers = headers ) # Redirected response, log it if r . history : logging . info ( \"Request redirected\" ) for resp in r . history : logging . info ( \"Redirected response: %s \" % resp . status_code + \" \" + resp . url ) logging . info ( \"Final destination: %s \" % r . status_code + \" \" + r . url ) r . raise_for_status () # Wait a random number of seconds between 5 & 20 # before starting again - more realistic wait_time = random . randint ( 5 , 20 ) logging . info ( \"Waiting %i seconds.\" % ( wait_time )) time . sleep ( wait_time ) # Any issues, log them and get out. except Exception as e : logging . error ( e ) # Exit loop getdata = False # ***************************************************************************** # Script Starting Point # ***************************************************************************** if __name__ == \"__main__\" : main ()","title":"Poll Vote Code"},{"location":"posts/PollVote/#poll-vote-code-oop","text":"","title":"Poll Vote Code (OOP)"},{"location":"posts/PollVote/#main-votepy","text":"Main entry point/start of program #!/usr/bin/env python3 # Load libraries import logging from voting import PollFMVoter LOGFILE = '/media/sf_data/scriptsout/vote/vote.txt' # Setup Logging logging . basicConfig ( format = ' %(asctime)s : %(levelname)s : %(message)s ' , level = logging . INFO , filename = LOGFILE ) # ***************************************************************************** # Main Function # ***************************************************************************** def main (): myvtr = PollFMVoter () myvtr . poll_id = \"10614272\" myvtr . poll_option = \"49167239\" myvtr . getVotes () # ***************************************************************************** # Script Starting Point # ***************************************************************************** if __name__ == \"__main__\" : main ()","title":"Main (vote.py)"},{"location":"posts/PollVote/#autovoter-voterpy","text":"\"Generic\" Class to inherit from with common code. # Load libraries import logging import random import os import sys from abc import abstractmethod , abstractproperty # Constants OWNP = os . path . abspath ( os . path . dirname ( sys . argv [ 0 ])) logger = logging . getLogger ( __name__ ) class AutoVoter : def __init__ ( self ): self . _useragents = [] self . _url_poll = \"\" self . _url_template = \"\" # Make it look like a real browser self . _headers = { \"Accept\" : \"text/html,application/xhtml+xml,application/xml; \\ q=0.9,image/webp,*/*;q=0.8\" , \"Accept-Encoding\" : \"gzip, deflate, br\" , \"Accept-Language\" : \"en-US,en;q=0.5\" , \"DNT\" : \"1\" , \"Host\" : \"\" , # set at runtime \"Upgrade-Insecure-Requests\" : \"1\" , \"User-Agent\" : \"\" , # set at runtime \"Cache-Control\" : \"max-age=0\" , \"Connection\" : \"keep-alive\" } self . __get_useragents () # Loads a new, random user-agent string def _set_useragent ( self ): line_no = random . randint ( 0 , len ( self . _useragents ) - 1 ) logger . info ( \"User-agent set as: %s \" % self . _useragents [ line_no ]) self . _headers [ \"User-Agent\" ] = self . _useragents [ line_no ] # Loads the user agents from file into the array def __get_useragents ( self ): logger . info ( \"Loading useragent strings\" ) with open ( OWNP + '/voting/useragent.txt' , 'r' ) as f : for line in f : self . _useragents . append ( line . rstrip ( ' \\n ' ) . rstrip ( ' \\r ' )) @abstractmethod def __getVote ( self ): pass @abstractmethod def getVotes ( self ): pass","title":"AutoVoter (voter.py)"},{"location":"posts/PollVote/#pollfmvoter-pollfmpy","text":"More specific class, inherits from AutoVoter and implements specifics. # Load libraries import logging import random import time import json import requests from torpy import TorClient from torpy.http.adapter import TorHttpAdapter from bs4 import BeautifulSoup as BeaSoup from voting.voter import AutoVoter logger = logging . getLogger ( __name__ ) class PollFMVoter ( AutoVoter ): def __init__ ( self ): super () . __init__ () self . _headers [ \"Host\" ] = \"poll.fm\" self . poll_id = \"\" self . poll_option = \"\" self . poll_votes = 0 self . __vote_pointer = 0 self . __retries = 3 self . __url_poll = \"https://poll.fm/ {poll_id} \" # Generated URL to be submited for vote self . __url_template = ( \"https://poll.fm/vote?\" \"va= {item_va} \" \"&pt=0\" \"&r= {item_r} \" \"&p= {item_pid} \" \"&a= {item_opt} ,\" \"&o=\" # nothing needed here \"&t= {item_t} \" \"&token= {item_token} \" \"&pz= {item_pz} \" ) def __getVote ( self ): try : self . __vote_pointer += 1 tor = TorClient () with tor . get_guard () as guard : adapter = TorHttpAdapter ( guard , 3 , retries = self . __retries ) with requests . Session () as s : s . mount ( 'http://' , adapter ) s . mount ( 'https://' , adapter ) # Make it look like a different browser randomly # by changing the user-agent with every request self . _set_useragent () # Set the poll id in the url self . __url_poll = self . __url_poll . replace ( \" {poll_id} \" , self . poll_id ) # Go to poll main page to get the needed items # to submit for the vote logger . info ( \"Getting: %s \" % self . __url_poll ) r = s . get ( self . __url_poll , headers = self . _headers ) logger . info ( \"First response: %s \" % r . status_code + \" \" + r . url ) r . raise_for_status () # Get the html from the web page bs_content = BeaSoup ( r . content , \"lxml\" ) # Get the info from the Vote button json object button_data = bs_content . find ( 'a' , class_ = \"vote-button css-vote-button pds-vote-button\" ) v_bdata = button_data . attrs . get ( 'data-vote' ) # Load as json data bdata = json . loads ( v_bdata ) # Get hidden form value v_pz = bs_content . find ( attrs = { \"name\" : \"pz\" }) # Inject data into vote URL template url_vote = self . __url_template # reset url_vote url_vote = url_vote . replace ( \" {item_pid} \" , self . poll_id ) url_vote = url_vote . replace ( \" {item_opt} \" , self . poll_option ) url_vote = url_vote . replace ( \" {item_t} \" , str ( bdata [ 't' ])) url_vote = url_vote . replace ( \" {item_token} \" , str ( bdata [ 'n' ])) url_vote = url_vote . replace ( \" {item_pz} \" , str ( v_pz [ 'value' ])) url_vote = url_vote . replace ( \" {item_r} \" , str ( bdata [ 'b' ])) url_vote = url_vote . replace ( \" {item_va} \" , str ( bdata [ 'at' ])) # Makes it look slightly more authentic, by waiting # before actually submitting the vote after the # initial request to the poll. logger . info ( \"Waiting 2 seconds before submitting.\" ) time . sleep ( 2 ) # Let's vote! logger . info ( \"Submitting vote %i : %s \" % ( self . __vote_pointer , url_vote )) r = s . get ( url_vote , headers = self . _headers ) # Redirected response, log it if r . history : logger . info ( \"Request redirected\" ) for resp in r . history : logger . info ( \"Redirected response: %s \" % resp . status_code + \" \" + resp . url ) logger . info ( \"Final destination: %s \" % r . status_code + \" \" + r . url ) r . raise_for_status () if ( self . __vote_pointer != self . poll_votes ): # Wait a random number of seconds between 5 & 20 # before starting again - more realistic wait_time = random . randint ( 5 , 20 ) logger . info ( \"Waiting %i seconds.\" % ( wait_time )) time . sleep ( wait_time ) # Any issues, log them and get out except Exception as e : logger . error ( e ) raise def getVotes ( self ): getdata = True self . __vote_pointer = 0 # No sense in doing anything without a poll id # and an option to vote for if ( self . poll_option != \"\" and self . poll_id != \"\" ): try : # If set to 0, run continuously if ( self . poll_votes == 0 ): while getdata : self . __getVote () else : for _ in range ( self . poll_votes ): self . __getVote () except Exception as e : logger . error ( e ) getdata = False else : logger . info ( \"Please set Poll ID & Option.\" )","title":"PollFMVoter (pollfm.py)"},{"location":"posts/SmtpTester/","tags":["FoxPro","SMTP"],"text":"Published: 2006-10-30 Git Repository The idea to create this app came to me while I was trying to troubleshoot my uncle\u2019s program that wouldn't connect to his smtp server. His application was in VB6 and he used it to send out emails from a list of addresses in an Access database. After he switched ISP's he could no longer get it to work since the new provider required him to authenticate before being able to send mail. I didn't know all the inner workings of communicating with an SMTP server, but I was able to figure out that we needed to send the AUTH command and then in some way the username and password. Not having enough time to fix it I went home later that evening and started researching. To make it more interesting I decided to create a little tool that I could use to learn with as well as use later. I decided to use Foxpro to develop the program for two main reasons: First, I've only been using it for about a year, so I needed the practice. Second, I wanted to develop an application that you wouldn't normally see written in Foxpro. Most Foxpro apps, at least from what I can tell so far, are data driven applications. Many smaller companies out there tend to use Foxpro because it is relatively inexpensive, yet extremely flexible and super fast, especially when it comes to dealing with data. I also hope that by developing these little tools, I can help make people more aware that Foxpro is out there and can be used for a variety of projects.","title":"SmtpTester"},{"location":"posts/SqlInjectionBehavior/","tags":["appsec","sqli"],"text":"Published: 2022-09-25 Stumbleing On A Vulnerability Some time ago I was on a web assesment. Having access to the code I spent some time looking things over. Being new to web application security, I wasn't necessarily looking for vulnrabilities, rather I wanted to see the file structure. I knew the app architecture was a server-side MVC, but never having built one myself I was curious. As I stumbled over the many files and folders, I came to a file that was particularly interesting -- it was packed full with many lines of raw sql. Not only that, but most were used inside of the string.format function where user input was being substitued into the SQL statement. Needless to say, I immediatly thought one thing -- SQL Injection! In order to verify if indeed there was a vulnerability, I had to first identify if the code could be called. To that end I started working my way up the call stack from the code that first caught my eye. The goal was to see if I could find the URL/endpoint that would need to be called to eventually lead to calling the vulnerable code. Fortunately, didn't take very long at all, as the calling function was only one level up in the controller. Note While the code structure is identical to the original, it has all been rewritten to hide any proprietary information. . Vulnerable Code The initial finding -- You can see the raw SQL with the potential injection point. Anything sent in the place of the scKey (DEMO001 from the URL) will get inserted into the query and sent to the database. public IEnumerable < CompanyImageDto > GetCompanyImage ( string scKey , int? coId ) { IEnumerable < CompanyImageDto > returnable = Query < CompanyImageDto >( string . Format ( \"select * from CompanyscKeyImages where scKey = '{0}'\" , ^^^ *** INSERTION POINT *** scKey ), new { }, false ); if ( returnable . IsNull ()) { returnable = Query < CompanyImageDto >( string . Format ( \"select * from CompanyscKeyImages where Companyid = {0}\" , coId ), new { }, false ); } return returnable ; } Controller One step up from the above code, into the controller, we can see the calling function and the URL parameter being pass down. [HttpGet] [Route(\"GetCompanyImage/{scKey}\")] public dynamic GetCompanyImage ([ FromUri ] string scKey ) { var coImgList = service . UserService . GetCompanyImage ( scKey ); return coImgList ; } HTTP Request One more step up and we can see the API endpoint and HTTP request with the paramter ( scKey ) The 'scKey\" parameter is where we can try to insert our SQL. GET /api/user/getCompanyImage/DEMO001 HTTP/1.1 ^^^^^^^ ***SCKEY*** Verifying The Finding Once the API endpoint and parameter to exploit were identified, it was time to verify that it indeed was vulnerable to SQL Injection. Exploiting Reporting Behavior","title":"Sql Injection: A Design Pattern?"},{"location":"posts/SqlInjectionBehavior/#stumbleing-on-a-vulnerability","text":"Some time ago I was on a web assesment. Having access to the code I spent some time looking things over. Being new to web application security, I wasn't necessarily looking for vulnrabilities, rather I wanted to see the file structure. I knew the app architecture was a server-side MVC, but never having built one myself I was curious. As I stumbled over the many files and folders, I came to a file that was particularly interesting -- it was packed full with many lines of raw sql. Not only that, but most were used inside of the string.format function where user input was being substitued into the SQL statement. Needless to say, I immediatly thought one thing -- SQL Injection! In order to verify if indeed there was a vulnerability, I had to first identify if the code could be called. To that end I started working my way up the call stack from the code that first caught my eye. The goal was to see if I could find the URL/endpoint that would need to be called to eventually lead to calling the vulnerable code. Fortunately, didn't take very long at all, as the calling function was only one level up in the controller. Note While the code structure is identical to the original, it has all been rewritten to hide any proprietary information. .","title":"Stumbleing On A Vulnerability"},{"location":"posts/SqlInjectionBehavior/#vulnerable-code","text":"The initial finding -- You can see the raw SQL with the potential injection point. Anything sent in the place of the scKey (DEMO001 from the URL) will get inserted into the query and sent to the database. public IEnumerable < CompanyImageDto > GetCompanyImage ( string scKey , int? coId ) { IEnumerable < CompanyImageDto > returnable = Query < CompanyImageDto >( string . Format ( \"select * from CompanyscKeyImages where scKey = '{0}'\" , ^^^ *** INSERTION POINT *** scKey ), new { }, false ); if ( returnable . IsNull ()) { returnable = Query < CompanyImageDto >( string . Format ( \"select * from CompanyscKeyImages where Companyid = {0}\" , coId ), new { }, false ); } return returnable ; }","title":"Vulnerable Code"},{"location":"posts/SqlInjectionBehavior/#controller","text":"One step up from the above code, into the controller, we can see the calling function and the URL parameter being pass down. [HttpGet] [Route(\"GetCompanyImage/{scKey}\")] public dynamic GetCompanyImage ([ FromUri ] string scKey ) { var coImgList = service . UserService . GetCompanyImage ( scKey ); return coImgList ; }","title":"Controller"},{"location":"posts/SqlInjectionBehavior/#http-request","text":"One more step up and we can see the API endpoint and HTTP request with the paramter ( scKey ) The 'scKey\" parameter is where we can try to insert our SQL. GET /api/user/getCompanyImage/DEMO001 HTTP/1.1 ^^^^^^^ ***SCKEY***","title":"HTTP Request"},{"location":"posts/SqlInjectionBehavior/#verifying-the-finding","text":"Once the API endpoint and parameter to exploit were identified, it was time to verify that it indeed was vulnerable to SQL Injection.","title":"Verifying The Finding"},{"location":"posts/SqlInjectionBehavior/#exploiting","text":"","title":"Exploiting"},{"location":"posts/SqlInjectionBehavior/#reporting","text":"Behavior","title":"Reporting"},{"location":"posts/UtFiles/","tags":["FoxPro"],"text":"Published: 2007-02-19 Git Repository I've had this app for a while. In fact, this was one of the very first apps I built in Foxpro. I haven't posted it because I wanted to get it cleaned up and add in some of the new things I've learned. It's basically a file sorting utility that takes files from a specified source directory and its subdirectories, and places them in the destination's subdirectories based on the file's extension. It was originally designed to be used with Unreal Tournament. At lanparties it is quicker and easier to start a new match if everyone already has the files locally on their computers instead of having to download them from the game server when entering a new game. This utility makes it easy for everyone to get all the new maps/addons from a \"lanparty\" directory prior to starting the game. The program can also be used for other occasions where files need to be organized in directories based on their extension. To know more, download the program and give it a try. It has the ability to create a test directory, so you can change the mappings to search for any file type and then place it in one of the test directory's subdirectory.","title":"UTFiles"},{"location":"tags/","text":"Following is a list of relevant tags: .NET Batch Run API Private GitHub Repo and Autohokey AutoHotKey Private GitHub Repo and Autohokey C PHP, OpenSSL and ftp_ssl_connect() on Win32 C# Batch Run C# .NET 2.0 Web Service - Sync + Async FoxPro GetHtml LblPrint SmtpTester UTFiles Github Private GitHub Repo and Autohokey Linux Make OpenVPN DNS Work NET C# .NET 2.0 Web Service - Sync + Async OOP Poll Voter OpenSSL PHP, OpenSSL and ftp_ssl_connect() on Win32 OpenVPN Make OpenVPN DNS Work Outlook A Better \"Send to Mail Recipient\" With Outlook PHP Monitor Folder With PHP PHP Ftp Backup Library Image Mailer Image Resizer PHP, OpenSSL and ftp_ssl_connect() on Win32 Programming Batch Run Comcast Modem Power Level Monitor C# .NET 2.0 Web Service - Sync + Async PHP, OpenSSL and ftp_ssl_connect() on Win32 Poll Voter Python Comcast Modem Power Level Monitor Poll Voter R Comcast Modem Power Level Monitor SMTP SmtpTester WinHTTP GetHtml Windows A Better \"Send to Mail Recipient\" With Outlook appsec Sql Injection: A Design Pattern? sqli Sql Injection: A Design Pattern?","title":"Tags"},{"location":"tags/#net","text":"Batch Run","title":".NET"},{"location":"tags/#api","text":"Private GitHub Repo and Autohokey","title":"API"},{"location":"tags/#autohotkey","text":"Private GitHub Repo and Autohokey","title":"AutoHotKey"},{"location":"tags/#c","text":"PHP, OpenSSL and ftp_ssl_connect() on Win32","title":"C"},{"location":"tags/#c_1","text":"Batch Run C# .NET 2.0 Web Service - Sync + Async","title":"C#"},{"location":"tags/#foxpro","text":"GetHtml LblPrint SmtpTester UTFiles","title":"FoxPro"},{"location":"tags/#github","text":"Private GitHub Repo and Autohokey","title":"Github"},{"location":"tags/#linux","text":"Make OpenVPN DNS Work","title":"Linux"},{"location":"tags/#net_1","text":"C# .NET 2.0 Web Service - Sync + Async","title":"NET"},{"location":"tags/#oop","text":"Poll Voter","title":"OOP"},{"location":"tags/#openssl","text":"PHP, OpenSSL and ftp_ssl_connect() on Win32","title":"OpenSSL"},{"location":"tags/#openvpn","text":"Make OpenVPN DNS Work","title":"OpenVPN"},{"location":"tags/#outlook","text":"A Better \"Send to Mail Recipient\" With Outlook","title":"Outlook"},{"location":"tags/#php","text":"Monitor Folder With PHP PHP Ftp Backup Library Image Mailer Image Resizer PHP, OpenSSL and ftp_ssl_connect() on Win32","title":"PHP"},{"location":"tags/#programming","text":"Batch Run Comcast Modem Power Level Monitor C# .NET 2.0 Web Service - Sync + Async PHP, OpenSSL and ftp_ssl_connect() on Win32 Poll Voter","title":"Programming"},{"location":"tags/#python","text":"Comcast Modem Power Level Monitor Poll Voter","title":"Python"},{"location":"tags/#r","text":"Comcast Modem Power Level Monitor","title":"R"},{"location":"tags/#smtp","text":"SmtpTester","title":"SMTP"},{"location":"tags/#winhttp","text":"GetHtml","title":"WinHTTP"},{"location":"tags/#windows","text":"A Better \"Send to Mail Recipient\" With Outlook","title":"Windows"},{"location":"tags/#appsec","text":"Sql Injection: A Design Pattern?","title":"appsec"},{"location":"tags/#sqli","text":"Sql Injection: A Design Pattern?","title":"sqli"}]}